{
	"id": "c50dea73b08e3af8a44e6e39c3b895df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auction.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0 ;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract Auction  {\n    ERC721 public NFT;\n\n    struct TokenInfo{\n        uint256 tokenId;\n        uint256 price;\n        string tokenURI;\n    }\n\n    // tokenId에 대한 가격을 매핑\n    mapping(uint256 => uint256) public tokenPrices;\n\n    // 배열에 tokenId 만 넣는다. 판매중인 토큰을 담는 변수이다.\n    uint256[] public SaleTokenList;\n\n    constructor(ERC721 _NFT){\n        NFT = _NFT;\n    } \n    \n    //판매\n    function SalesToken(uint256 _tokenId, uint256 _price) public {\n        address tokenOwner = NFT.ownerOf(_tokenId);\n        require(tokenOwner == msg.sender, \"you are not NFT owner\");\n        require(_price > 0 );\n        require(tokenPrices[_tokenId]==0, \"Already sale\" );// 이미 판매 진행중\n        require(NFT.isApprovedForAll(msg.sender, address(this))); // 권한을 위임했는가 안했는가?\n        \n        tokenPrices[_tokenId] = _price;\n        SaleTokenList.push(_tokenId);\n    }\n\n    // 구매\n    function PurchaseToken(uint256 _tokenId) public payable {\n        address tokenOwner = NFT.ownerOf(_tokenId);\n        require(tokenOwner != msg.sender );\n        require(tokenPrices[_tokenId] == msg.value);\n\n        payable(tokenOwner).transfer(msg.value);    \n        NFT.transferFrom(tokenOwner, msg.sender, _tokenId);\n\n        tokenPrices[_tokenId] = 0;\n        popSaleToken(_tokenId);\n    }\n\n    function popSaleToken(uint256 _tokenId) private returns (bool){\n        for(uint256 i = 0; i < SaleTokenList.length; i++){\n            if(SaleTokenList[i] == _tokenId) {\n                SaleTokenList[i] = SaleTokenList[SaleTokenList.length - 1];\n                SaleTokenList.pop();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // 프론트 단으로 값을 줄 때 메타데이터를 포함한 값을 주어야한다.\n    function getSaleTokenList() public view returns (TokenInfo[] memory) {\n        require(SaleTokenList.length > 0);\n        TokenInfo[] memory list = new TokenInfo[](SaleTokenList.length);\n\n        for(uint256 i = 0; i < SaleTokenList.length; i++){\n            uint256 tokenId = SaleTokenList[i];\n            uint256 price = tokenPrices[tokenId];\n            string memory tokenURI = NFT.tokenURI(tokenId);\n            \n            list[i] = TokenInfo(tokenId, price, tokenURI);\n        } \n\n        return list;\n    }\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auction.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC721",
									"name": "_NFT",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NFT",
							"outputs": [
								{
									"internalType": "contract ERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "PurchaseToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "SaleTokenList",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "SalesToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSaleTokenList",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "tokenURI",
											"type": "string"
										}
									],
									"internalType": "struct Auction.TokenInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auction.sol\":132:2474  contract Auction  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Auction.sol\":498:549  constructor(ERC721 _NFT){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Auction.sol\":538:542  _NFT */\n  dup1\n    /* \"contracts/Auction.sol\":532:535  NFT */\n  0x00\n  dup1\n    /* \"contracts/Auction.sol\":532:542  NFT = _NFT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":498:549  constructor(ERC721 _NFT){... */\n  pop\n    /* \"contracts/Auction.sol\":132:2474  contract Auction  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_12:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_23\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_13:\n    /* \"#utility.yul\":773:812   */\n  tag_25\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_26:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_14:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_28\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1403   */\ntag_3:\n    /* \"#utility.yul\":1107:1113   */\n  0x00\n    /* \"#utility.yul\":1156:1158   */\n  0x20\n    /* \"#utility.yul\":1144:1153   */\n  dup3\n    /* \"#utility.yul\":1135:1142   */\n  dup5\n    /* \"#utility.yul\":1131:1154   */\n  sub\n    /* \"#utility.yul\":1127:1159   */\n  slt\n    /* \"#utility.yul\":1124:1243   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1162:1241   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1124:1243   */\ntag_30:\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1307:1386   */\n  tag_32\n    /* \"#utility.yul\":1378:1385   */\n  dup5\n    /* \"#utility.yul\":1369:1375   */\n  dup3\n    /* \"#utility.yul\":1358:1367   */\n  dup6\n    /* \"#utility.yul\":1354:1376   */\n  add\n    /* \"#utility.yul\":1307:1386   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1297:1386   */\n  swap2\n  pop\n    /* \"#utility.yul\":1253:1396   */\n  pop\n    /* \"#utility.yul\":1022:1403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Auction.sol\":132:2474  contract Auction  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auction.sol\":132:2474  contract Auction  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c8cc569\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3048f512\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e4dc988\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7c0b8de2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x921e033b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe5afe3e6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auction.sol\":461:491  uint256[] public SaleTokenList */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":1093:1487  function PurchaseToken(uint256 _tokenId) public payable {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Auction.sol\":1957:2472  function getSaleTokenList() public view returns (TokenInfo[] memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":156:173  ERC721 public NFT */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":573:1073  function SalesToken(uint256 _tokenId, uint256 _price) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Auction.sol\":324:370  mapping(uint256 => uint256) public tokenPrices */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":461:491  uint256[] public SaleTokenList */\n    tag_12:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1093:1487  function PurchaseToken(uint256 _tokenId) public payable {... */\n    tag_17:\n        /* \"contracts/Auction.sol\":1159:1177  address tokenOwner */\n      0x00\n        /* \"contracts/Auction.sol\":1180:1183  NFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1180:1191  NFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Auction.sol\":1192:1200  _tokenId */\n      dup4\n        /* \"contracts/Auction.sol\":1180:1201  NFT.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/Auction.sol\":1159:1201  address tokenOwner = NFT.ownerOf(_tokenId) */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1233:1243  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1219:1243  tokenOwner != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1219:1229  tokenOwner */\n      dup2\n        /* \"contracts/Auction.sol\":1219:1243  tokenOwner != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Auction.sol\":1211:1245  require(tokenOwner != msg.sender ) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"contracts/Auction.sol\":1288:1297  msg.value */\n      callvalue\n        /* \"contracts/Auction.sol\":1263:1274  tokenPrices */\n      0x01\n        /* \"contracts/Auction.sol\":1263:1284  tokenPrices[_tokenId] */\n      0x00\n        /* \"contracts/Auction.sol\":1275:1283  _tokenId */\n      dup5\n        /* \"contracts/Auction.sol\":1263:1284  tokenPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":1263:1297  tokenPrices[_tokenId] == msg.value */\n      eq\n        /* \"contracts/Auction.sol\":1255:1298  require(tokenPrices[_tokenId] == msg.value) */\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n        /* \"contracts/Auction.sol\":1317:1327  tokenOwner */\n      dup1\n        /* \"contracts/Auction.sol\":1309:1337  payable(tokenOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1309:1348  payable(tokenOwner).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/Auction.sol\":1338:1347  msg.value */\n      callvalue\n        /* \"contracts/Auction.sol\":1309:1348  payable(tokenOwner).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n        /* \"contracts/Auction.sol\":1362:1365  NFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1362:1378  NFT.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Auction.sol\":1379:1389  tokenOwner */\n      dup3\n        /* \"contracts/Auction.sol\":1391:1401  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1403:1411  _tokenId */\n      dup6\n        /* \"contracts/Auction.sol\":1362:1412  NFT.transferFrom(tokenOwner, msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Auction.sol\":1447:1448  0 */\n      0x00\n        /* \"contracts/Auction.sol\":1423:1434  tokenPrices */\n      0x01\n        /* \"contracts/Auction.sol\":1423:1444  tokenPrices[_tokenId] */\n      0x00\n        /* \"contracts/Auction.sol\":1435:1443  _tokenId */\n      dup5\n        /* \"contracts/Auction.sol\":1423:1444  tokenPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Auction.sol\":1423:1448  tokenPrices[_tokenId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1458:1480  popSaleToken(_tokenId) */\n      tag_55\n        /* \"contracts/Auction.sol\":1471:1479  _tokenId */\n      dup3\n        /* \"contracts/Auction.sol\":1458:1470  popSaleToken */\n      tag_56\n        /* \"contracts/Auction.sol\":1458:1480  popSaleToken(_tokenId) */\n      jump\t// in\n    tag_55:\n      pop\n        /* \"contracts/Auction.sol\":1149:1487  {... */\n      pop\n        /* \"contracts/Auction.sol\":1093:1487  function PurchaseToken(uint256 _tokenId) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auction.sol\":1957:2472  function getSaleTokenList() public view returns (TokenInfo[] memory) {... */\n    tag_20:\n        /* \"contracts/Auction.sol\":2006:2024  TokenInfo[] memory */\n      0x60\n        /* \"contracts/Auction.sol\":2067:2068  0 */\n      0x00\n        /* \"contracts/Auction.sol\":2044:2057  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":2044:2064  SaleTokenList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2044:2068  SaleTokenList.length > 0 */\n      gt\n        /* \"contracts/Auction.sol\":2036:2069  require(SaleTokenList.length > 0) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"contracts/Auction.sol\":2079:2102  TokenInfo[] memory list */\n      0x00\n        /* \"contracts/Auction.sol\":2121:2134  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":2121:2141  SaleTokenList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2105:2142  new TokenInfo[](SaleTokenList.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_59\n      jumpi\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n    tag_59:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup2\n      0x20\n      add\n    tag_63:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_63\n      jumpi\n      swap1\n      pop\n    tag_62:\n      pop\n        /* \"contracts/Auction.sol\":2079:2142  TokenInfo[] memory list = new TokenInfo[](SaleTokenList.length) */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2157:2166  uint256 i */\n      0x00\n        /* \"contracts/Auction.sol\":2153:2443  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n    tag_66:\n        /* \"contracts/Auction.sol\":2176:2189  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":2176:2196  SaleTokenList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2172:2173  i */\n      dup2\n        /* \"contracts/Auction.sol\":2172:2196  i < SaleTokenList.length */\n      lt\n        /* \"contracts/Auction.sol\":2153:2443  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/Auction.sol\":2216:2231  uint256 tokenId */\n      0x00\n        /* \"contracts/Auction.sol\":2234:2247  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":2248:2249  i */\n      dup3\n        /* \"contracts/Auction.sol\":2234:2250  SaleTokenList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_69\n      jumpi\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n    tag_69:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/Auction.sol\":2216:2250  uint256 tokenId = SaleTokenList[i] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2264:2277  uint256 price */\n      0x00\n        /* \"contracts/Auction.sol\":2280:2291  tokenPrices */\n      0x01\n        /* \"contracts/Auction.sol\":2280:2300  tokenPrices[tokenId] */\n      0x00\n        /* \"contracts/Auction.sol\":2292:2299  tokenId */\n      dup4\n        /* \"contracts/Auction.sol\":2280:2300  tokenPrices[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2264:2300  uint256 price = tokenPrices[tokenId] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2314:2336  string memory tokenURI */\n      0x00\n        /* \"contracts/Auction.sol\":2339:2342  NFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2339:2351  NFT.tokenURI */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc87b56dd\n        /* \"contracts/Auction.sol\":2352:2359  tokenId */\n      dup5\n        /* \"contracts/Auction.sol\":2339:2360  NFT.tokenURI(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/Auction.sol\":2314:2360  string memory tokenURI = NFT.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2397:2432  TokenInfo(tokenId, price, tokenURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Auction.sol\":2407:2414  tokenId */\n      dup5\n        /* \"contracts/Auction.sol\":2397:2432  TokenInfo(tokenId, price, tokenURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Auction.sol\":2416:2421  price */\n      dup4\n        /* \"contracts/Auction.sol\":2397:2432  TokenInfo(tokenId, price, tokenURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Auction.sol\":2423:2431  tokenURI */\n      dup3\n        /* \"contracts/Auction.sol\":2397:2432  TokenInfo(tokenId, price, tokenURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Auction.sol\":2387:2391  list */\n      dup6\n        /* \"contracts/Auction.sol\":2392:2393  i */\n      dup6\n        /* \"contracts/Auction.sol\":2387:2394  list[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_71\n      jump\t// in\n    tag_79:\n    tag_78:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Auction.sol\":2387:2432  list[i] = TokenInfo(tokenId, price, tokenURI) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Auction.sol\":2202:2443  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Auction.sol\":2198:2201  i++ */\n      dup1\n      dup1\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      swap2\n      pop\n      pop\n        /* \"contracts/Auction.sol\":2153:2443  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n      jump(tag_66)\n    tag_67:\n      pop\n        /* \"contracts/Auction.sol\":2461:2465  list */\n      dup1\n        /* \"contracts/Auction.sol\":2454:2465  return list */\n      swap2\n      pop\n      pop\n        /* \"contracts/Auction.sol\":1957:2472  function getSaleTokenList() public view returns (TokenInfo[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Auction.sol\":156:173  ERC721 public NFT */\n    tag_25:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":573:1073  function SalesToken(uint256 _tokenId, uint256 _price) public {... */\n    tag_32:\n        /* \"contracts/Auction.sol\":644:662  address tokenOwner */\n      0x00\n        /* \"contracts/Auction.sol\":665:668  NFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":665:676  NFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Auction.sol\":677:685  _tokenId */\n      dup5\n        /* \"contracts/Auction.sol\":665:686  NFT.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_86:\n        /* \"contracts/Auction.sol\":644:686  address tokenOwner = NFT.ownerOf(_tokenId) */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":718:728  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":704:728  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":704:714  tokenOwner */\n      dup2\n        /* \"contracts/Auction.sol\":704:728  tokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":696:754  require(tokenOwner == msg.sender, \"you are not NFT owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/Auction.sol\":781:782  0 */\n      0x00\n        /* \"contracts/Auction.sol\":772:778  _price */\n      dup3\n        /* \"contracts/Auction.sol\":772:782  _price > 0 */\n      gt\n        /* \"contracts/Auction.sol\":764:784  require(_price > 0 ) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/Auction.sol\":825:826  0 */\n      0x00\n        /* \"contracts/Auction.sol\":802:813  tokenPrices */\n      0x01\n        /* \"contracts/Auction.sol\":802:823  tokenPrices[_tokenId] */\n      0x00\n        /* \"contracts/Auction.sol\":814:822  _tokenId */\n      dup6\n        /* \"contracts/Auction.sol\":802:823  tokenPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":802:826  tokenPrices[_tokenId]==0 */\n      eq\n        /* \"contracts/Auction.sol\":794:844  require(tokenPrices[_tokenId]==0, \"Already sale\" ) */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/Auction.sol\":888:891  NFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":888:908  NFT.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contracts/Auction.sol\":909:919  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":929:933  this */\n      address\n        /* \"contracts/Auction.sol\":888:935  NFT.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/Auction.sol\":880:936  require(NFT.isApprovedForAll(msg.sender, address(this))) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"contracts/Auction.sol\":1022:1028  _price */\n      dup2\n        /* \"contracts/Auction.sol\":998:1009  tokenPrices */\n      0x01\n        /* \"contracts/Auction.sol\":998:1019  tokenPrices[_tokenId] */\n      0x00\n        /* \"contracts/Auction.sol\":1010:1018  _tokenId */\n      dup6\n        /* \"contracts/Auction.sol\":998:1019  tokenPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Auction.sol\":998:1028  tokenPrices[_tokenId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1038:1051  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1057:1065  _tokenId */\n      dup4\n        /* \"contracts/Auction.sol\":1038:1066  SaleTokenList.push(_tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/Auction.sol\":634:1073  {... */\n      pop\n        /* \"contracts/Auction.sol\":573:1073  function SalesToken(uint256 _tokenId, uint256 _price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Auction.sol\":324:370  mapping(uint256 => uint256) public tokenPrices */\n    tag_36:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1493:1856  function popSaleToken(uint256 _tokenId) private returns (bool){... */\n    tag_56:\n        /* \"contracts/Auction.sol\":1550:1554  bool */\n      0x00\n        /* \"contracts/Auction.sol\":1569:1578  uint256 i */\n      dup1\n        /* \"contracts/Auction.sol\":1581:1582  0 */\n      0x00\n        /* \"contracts/Auction.sol\":1569:1582  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1565:1828  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n    tag_103:\n        /* \"contracts/Auction.sol\":1588:1601  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1588:1608  SaleTokenList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1584:1585  i */\n      dup2\n        /* \"contracts/Auction.sol\":1584:1608  i < SaleTokenList.length */\n      lt\n        /* \"contracts/Auction.sol\":1565:1828  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/Auction.sol\":1651:1659  _tokenId */\n      dup3\n        /* \"contracts/Auction.sol\":1631:1644  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1645:1646  i */\n      dup3\n        /* \"contracts/Auction.sol\":1631:1647  SaleTokenList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_106\n      jumpi\n      tag_107\n      tag_71\n      jump\t// in\n    tag_107:\n    tag_106:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/Auction.sol\":1631:1659  SaleTokenList[i] == _tokenId */\n      sub\n        /* \"contracts/Auction.sol\":1628:1818  if(SaleTokenList[i] == _tokenId) {... */\n      tag_109\n      jumpi\n        /* \"contracts/Auction.sol\":1698:1711  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1735:1736  1 */\n      0x01\n        /* \"contracts/Auction.sol\":1712:1725  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1712:1732  SaleTokenList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1712:1736  SaleTokenList.length - 1 */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/Auction.sol\":1698:1737  SaleTokenList[SaleTokenList.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_71\n      jump\t// in\n    tag_113:\n    tag_112:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/Auction.sol\":1679:1692  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1693:1694  i */\n      dup3\n        /* \"contracts/Auction.sol\":1679:1695  SaleTokenList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_71\n      jump\t// in\n    tag_116:\n    tag_115:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/Auction.sol\":1679:1737  SaleTokenList[i] = SaleTokenList[SaleTokenList.length - 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1755:1768  SaleTokenList */\n      0x02\n        /* \"contracts/Auction.sol\":1755:1774  SaleTokenList.pop() */\n      dup1\n      sload\n      dup1\n      tag_118\n      jumpi\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n    tag_118:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/Auction.sol\":1799:1803  true */\n      0x01\n        /* \"contracts/Auction.sol\":1792:1803  return true */\n      swap2\n      pop\n      pop\n      jump(tag_102)\n        /* \"contracts/Auction.sol\":1628:1818  if(SaleTokenList[i] == _tokenId) {... */\n    tag_109:\n        /* \"contracts/Auction.sol\":1610:1613  i++ */\n      dup1\n      dup1\n      tag_122\n      swap1\n      tag_81\n      jump\t// in\n    tag_122:\n      swap2\n      pop\n      pop\n        /* \"contracts/Auction.sol\":1565:1828  for(uint256 i = 0; i < SaleTokenList.length; i++){... */\n      jump(tag_103)\n    tag_104:\n      pop\n        /* \"contracts/Auction.sol\":1844:1849  false */\n      0x00\n        /* \"contracts/Auction.sol\":1837:1849  return false */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1493:1856  function popSaleToken(uint256 _tokenId) private returns (bool){... */\n    tag_102:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_65:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_123:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_124:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_125:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_126:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_127:\n        /* \"#utility.yul\":490:514   */\n      tag_175\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_126\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_176:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_128:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_178\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_127\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_181\n      tag_124\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":766:885   */\n    tag_180:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_182\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_128\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_129:\n        /* \"#utility.yul\":1112:1136   */\n      tag_184\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_126\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_186\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_129\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1516   */\n    tag_130:\n        /* \"#utility.yul\":1469:1475   */\n      0x00\n        /* \"#utility.yul\":1503:1508   */\n      dup2\n        /* \"#utility.yul\":1497:1509   */\n      mload\n        /* \"#utility.yul\":1487:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1731   */\n    tag_131:\n        /* \"#utility.yul\":1646:1657   */\n      0x00\n        /* \"#utility.yul\":1680:1686   */\n      dup3\n        /* \"#utility.yul\":1675:1678   */\n      dup3\n        /* \"#utility.yul\":1668:1687   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x20\n        /* \"#utility.yul\":1715:1718   */\n      dup3\n        /* \"#utility.yul\":1711:1725   */\n      add\n        /* \"#utility.yul\":1696:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1737:1894   */\n    tag_132:\n        /* \"#utility.yul\":1829:1833   */\n      0x00\n        /* \"#utility.yul\":1852:1855   */\n      dup2\n        /* \"#utility.yul\":1844:1855   */\n      swap1\n      pop\n        /* \"#utility.yul\":1882:1886   */\n      0x20\n        /* \"#utility.yul\":1877:1880   */\n      dup3\n        /* \"#utility.yul\":1873:1887   */\n      add\n        /* \"#utility.yul\":1865:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1737:1894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1900:2008   */\n    tag_133:\n        /* \"#utility.yul\":1977:2001   */\n      tag_191\n        /* \"#utility.yul\":1995:2000   */\n      dup2\n        /* \"#utility.yul\":1977:2001   */\n      tag_126\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1972:1975   */\n      dup3\n        /* \"#utility.yul\":1965:2002   */\n      mstore\n        /* \"#utility.yul\":1900:2008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2014:2113   */\n    tag_134:\n        /* \"#utility.yul\":2066:2072   */\n      0x00\n        /* \"#utility.yul\":2100:2105   */\n      dup2\n        /* \"#utility.yul\":2094:2106   */\n      mload\n        /* \"#utility.yul\":2084:2106   */\n      swap1\n      pop\n        /* \"#utility.yul\":2014:2113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2119:2278   */\n    tag_135:\n        /* \"#utility.yul\":2193:2204   */\n      0x00\n        /* \"#utility.yul\":2227:2233   */\n      dup3\n        /* \"#utility.yul\":2222:2225   */\n      dup3\n        /* \"#utility.yul\":2215:2234   */\n      mstore\n        /* \"#utility.yul\":2267:2271   */\n      0x20\n        /* \"#utility.yul\":2262:2265   */\n      dup3\n        /* \"#utility.yul\":2258:2272   */\n      add\n        /* \"#utility.yul\":2243:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2119:2278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2530   */\n    tag_136:\n        /* \"#utility.yul\":2365:2366   */\n      0x00\n        /* \"#utility.yul\":2375:2488   */\n    tag_195:\n        /* \"#utility.yul\":2389:2395   */\n      dup4\n        /* \"#utility.yul\":2386:2387   */\n      dup2\n        /* \"#utility.yul\":2383:2396   */\n      lt\n        /* \"#utility.yul\":2375:2488   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2474:2475   */\n      dup1\n        /* \"#utility.yul\":2469:2472   */\n      dup3\n        /* \"#utility.yul\":2465:2476   */\n      add\n        /* \"#utility.yul\":2459:2477   */\n      mload\n        /* \"#utility.yul\":2455:2456   */\n      dup2\n        /* \"#utility.yul\":2450:2453   */\n      dup5\n        /* \"#utility.yul\":2446:2457   */\n      add\n        /* \"#utility.yul\":2439:2478   */\n      mstore\n        /* \"#utility.yul\":2411:2413   */\n      0x20\n        /* \"#utility.yul\":2408:2409   */\n      dup2\n        /* \"#utility.yul\":2404:2414   */\n      add\n        /* \"#utility.yul\":2399:2414   */\n      swap1\n      pop\n        /* \"#utility.yul\":2375:2488   */\n      jump(tag_195)\n    tag_197:\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup5\n        /* \"#utility.yul\":2508:2511   */\n      dup5\n        /* \"#utility.yul\":2504:2520   */\n      add\n        /* \"#utility.yul\":2497:2524   */\n      mstore\n        /* \"#utility.yul\":2346:2530   */\n      pop\n        /* \"#utility.yul\":2284:2530   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:2638   */\n    tag_137:\n        /* \"#utility.yul\":2577:2583   */\n      0x00\n        /* \"#utility.yul\":2628:2630   */\n      0x1f\n        /* \"#utility.yul\":2624:2631   */\n      not\n        /* \"#utility.yul\":2619:2621   */\n      0x1f\n        /* \"#utility.yul\":2612:2617   */\n      dup4\n        /* \"#utility.yul\":2608:2622   */\n      add\n        /* \"#utility.yul\":2604:2632   */\n      and\n        /* \"#utility.yul\":2594:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2536:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:3001   */\n    tag_138:\n        /* \"#utility.yul\":2722:2725   */\n      0x00\n        /* \"#utility.yul\":2750:2789   */\n      tag_200\n        /* \"#utility.yul\":2783:2788   */\n      dup3\n        /* \"#utility.yul\":2750:2789   */\n      tag_134\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2805:2866   */\n      tag_201\n        /* \"#utility.yul\":2859:2865   */\n      dup2\n        /* \"#utility.yul\":2854:2857   */\n      dup6\n        /* \"#utility.yul\":2805:2866   */\n      tag_135\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2798:2866   */\n      swap4\n      pop\n        /* \"#utility.yul\":2875:2940   */\n      tag_202\n        /* \"#utility.yul\":2933:2939   */\n      dup2\n        /* \"#utility.yul\":2928:2931   */\n      dup6\n        /* \"#utility.yul\":2921:2925   */\n      0x20\n        /* \"#utility.yul\":2914:2919   */\n      dup7\n        /* \"#utility.yul\":2910:2926   */\n      add\n        /* \"#utility.yul\":2875:2940   */\n      tag_136\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2965:2994   */\n      tag_203\n        /* \"#utility.yul\":2987:2993   */\n      dup2\n        /* \"#utility.yul\":2965:2994   */\n      tag_137\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2960:2963   */\n      dup5\n        /* \"#utility.yul\":2956:2995   */\n      add\n        /* \"#utility.yul\":2949:2995   */\n      swap2\n      pop\n        /* \"#utility.yul\":2726:3001   */\n      pop\n        /* \"#utility.yul\":2644:3001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3845   */\n    tag_139:\n        /* \"#utility.yul\":3176:3179   */\n      0x00\n        /* \"#utility.yul\":3212:3216   */\n      0x60\n        /* \"#utility.yul\":3207:3210   */\n      dup4\n        /* \"#utility.yul\":3203:3217   */\n      add\n        /* \"#utility.yul\":3302:3306   */\n      0x00\n        /* \"#utility.yul\":3295:3300   */\n      dup4\n        /* \"#utility.yul\":3291:3307   */\n      add\n        /* \"#utility.yul\":3285:3308   */\n      mload\n        /* \"#utility.yul\":3321:3384   */\n      tag_205\n        /* \"#utility.yul\":3378:3382   */\n      0x00\n        /* \"#utility.yul\":3373:3376   */\n      dup7\n        /* \"#utility.yul\":3369:3383   */\n      add\n        /* \"#utility.yul\":3355:3367   */\n      dup3\n        /* \"#utility.yul\":3321:3384   */\n      tag_133\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3227:3394   */\n      pop\n        /* \"#utility.yul\":3477:3481   */\n      0x20\n        /* \"#utility.yul\":3470:3475   */\n      dup4\n        /* \"#utility.yul\":3466:3482   */\n      add\n        /* \"#utility.yul\":3460:3483   */\n      mload\n        /* \"#utility.yul\":3496:3559   */\n      tag_206\n        /* \"#utility.yul\":3553:3557   */\n      0x20\n        /* \"#utility.yul\":3548:3551   */\n      dup7\n        /* \"#utility.yul\":3544:3558   */\n      add\n        /* \"#utility.yul\":3530:3542   */\n      dup3\n        /* \"#utility.yul\":3496:3559   */\n      tag_133\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3404:3569   */\n      pop\n        /* \"#utility.yul\":3655:3659   */\n      0x40\n        /* \"#utility.yul\":3648:3653   */\n      dup4\n        /* \"#utility.yul\":3644:3660   */\n      add\n        /* \"#utility.yul\":3638:3661   */\n      mload\n        /* \"#utility.yul\":3708:3711   */\n      dup5\n        /* \"#utility.yul\":3702:3706   */\n      dup3\n        /* \"#utility.yul\":3698:3712   */\n      sub\n        /* \"#utility.yul\":3691:3695   */\n      0x40\n        /* \"#utility.yul\":3686:3689   */\n      dup7\n        /* \"#utility.yul\":3682:3696   */\n      add\n        /* \"#utility.yul\":3675:3713   */\n      mstore\n        /* \"#utility.yul\":3734:3807   */\n      tag_207\n        /* \"#utility.yul\":3802:3806   */\n      dup3\n        /* \"#utility.yul\":3788:3800   */\n      dup3\n        /* \"#utility.yul\":3734:3807   */\n      tag_138\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3726:3807   */\n      swap2\n      pop\n        /* \"#utility.yul\":3579:3818   */\n      pop\n        /* \"#utility.yul\":3835:3839   */\n      dup1\n        /* \"#utility.yul\":3828:3839   */\n      swap2\n      pop\n        /* \"#utility.yul\":3181:3845   */\n      pop\n        /* \"#utility.yul\":3067:3845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3851:4107   */\n    tag_140:\n        /* \"#utility.yul\":3970:3980   */\n      0x00\n        /* \"#utility.yul\":4005:4101   */\n      tag_209\n        /* \"#utility.yul\":4097:4100   */\n      dup4\n        /* \"#utility.yul\":4089:4095   */\n      dup4\n        /* \"#utility.yul\":4005:4101   */\n      tag_139\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3991:4101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3851:4107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4113:4251   */\n    tag_141:\n        /* \"#utility.yul\":4208:4212   */\n      0x00\n        /* \"#utility.yul\":4240:4244   */\n      0x20\n        /* \"#utility.yul\":4235:4238   */\n      dup3\n        /* \"#utility.yul\":4231:4245   */\n      add\n        /* \"#utility.yul\":4223:4245   */\n      swap1\n      pop\n        /* \"#utility.yul\":4113:4251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4321:5432   */\n    tag_142:\n        /* \"#utility.yul\":4490:4493   */\n      0x00\n        /* \"#utility.yul\":4519:4598   */\n      tag_212\n        /* \"#utility.yul\":4592:4597   */\n      dup3\n        /* \"#utility.yul\":4519:4598   */\n      tag_130\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4614:4725   */\n      tag_213\n        /* \"#utility.yul\":4718:4724   */\n      dup2\n        /* \"#utility.yul\":4713:4716   */\n      dup6\n        /* \"#utility.yul\":4614:4725   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4607:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4751:4754   */\n      dup4\n        /* \"#utility.yul\":4796:4800   */\n      0x20\n        /* \"#utility.yul\":4788:4794   */\n      dup3\n        /* \"#utility.yul\":4784:4801   */\n      mul\n        /* \"#utility.yul\":4779:4782   */\n      dup6\n        /* \"#utility.yul\":4775:4802   */\n      add\n        /* \"#utility.yul\":4826:4907   */\n      tag_214\n        /* \"#utility.yul\":4901:4906   */\n      dup6\n        /* \"#utility.yul\":4826:4907   */\n      tag_132\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4930:4937   */\n      dup1\n        /* \"#utility.yul\":4961:4962   */\n      0x00\n        /* \"#utility.yul\":4946:5387   */\n    tag_215:\n        /* \"#utility.yul\":4971:4977   */\n      dup6\n        /* \"#utility.yul\":4968:4969   */\n      dup2\n        /* \"#utility.yul\":4965:4978   */\n      lt\n        /* \"#utility.yul\":4946:5387   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":5042:5051   */\n      dup5\n        /* \"#utility.yul\":5036:5040   */\n      dup5\n        /* \"#utility.yul\":5032:5052   */\n      sub\n        /* \"#utility.yul\":5027:5030   */\n      dup10\n        /* \"#utility.yul\":5020:5053   */\n      mstore\n        /* \"#utility.yul\":5093:5099   */\n      dup2\n        /* \"#utility.yul\":5087:5100   */\n      mload\n        /* \"#utility.yul\":5121:5235   */\n      tag_218\n        /* \"#utility.yul\":5230:5234   */\n      dup6\n        /* \"#utility.yul\":5215:5228   */\n      dup3\n        /* \"#utility.yul\":5121:5235   */\n      tag_140\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5113:5235   */\n      swap5\n      pop\n        /* \"#utility.yul\":5258:5343   */\n      tag_219\n        /* \"#utility.yul\":5336:5342   */\n      dup4\n        /* \"#utility.yul\":5258:5343   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5248:5343   */\n      swap3\n      pop\n        /* \"#utility.yul\":5372:5376   */\n      0x20\n        /* \"#utility.yul\":5367:5370   */\n      dup11\n        /* \"#utility.yul\":5363:5377   */\n      add\n        /* \"#utility.yul\":5356:5377   */\n      swap10\n      pop\n        /* \"#utility.yul\":5006:5387   */\n      pop\n        /* \"#utility.yul\":4993:4994   */\n      0x01\n        /* \"#utility.yul\":4990:4991   */\n      dup2\n        /* \"#utility.yul\":4986:4995   */\n      add\n        /* \"#utility.yul\":4981:4995   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5387   */\n      jump(tag_215)\n    tag_217:\n        /* \"#utility.yul\":4950:4964   */\n      pop\n        /* \"#utility.yul\":5403:5407   */\n      dup3\n        /* \"#utility.yul\":5396:5407   */\n      swap8\n      pop\n        /* \"#utility.yul\":5423:5426   */\n      dup8\n        /* \"#utility.yul\":5416:5426   */\n      swap6\n      pop\n        /* \"#utility.yul\":4495:5432   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4321:5432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5438:5911   */\n    tag_22:\n        /* \"#utility.yul\":5631:5635   */\n      0x00\n        /* \"#utility.yul\":5669:5671   */\n      0x20\n        /* \"#utility.yul\":5658:5667   */\n      dup3\n        /* \"#utility.yul\":5654:5672   */\n      add\n        /* \"#utility.yul\":5646:5672   */\n      swap1\n      pop\n        /* \"#utility.yul\":5718:5727   */\n      dup2\n        /* \"#utility.yul\":5712:5716   */\n      dup2\n        /* \"#utility.yul\":5708:5728   */\n      sub\n        /* \"#utility.yul\":5704:5705   */\n      0x00\n        /* \"#utility.yul\":5693:5702   */\n      dup4\n        /* \"#utility.yul\":5689:5706   */\n      add\n        /* \"#utility.yul\":5682:5729   */\n      mstore\n        /* \"#utility.yul\":5746:5904   */\n      tag_221\n        /* \"#utility.yul\":5899:5903   */\n      dup2\n        /* \"#utility.yul\":5890:5896   */\n      dup5\n        /* \"#utility.yul\":5746:5904   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5738:5904   */\n      swap1\n      pop\n        /* \"#utility.yul\":5438:5911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5917:6043   */\n    tag_143:\n        /* \"#utility.yul\":5954:5961   */\n      0x00\n        /* \"#utility.yul\":5994:6036   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5987:5992   */\n      dup3\n        /* \"#utility.yul\":5983:6037   */\n      and\n        /* \"#utility.yul\":5972:6037   */\n      swap1\n      pop\n        /* \"#utility.yul\":5917:6043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6049:6109   */\n    tag_144:\n        /* \"#utility.yul\":6077:6080   */\n      0x00\n        /* \"#utility.yul\":6098:6103   */\n      dup2\n        /* \"#utility.yul\":6091:6103   */\n      swap1\n      pop\n        /* \"#utility.yul\":6049:6109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6115:6257   */\n    tag_145:\n        /* \"#utility.yul\":6165:6174   */\n      0x00\n        /* \"#utility.yul\":6198:6251   */\n      tag_225\n        /* \"#utility.yul\":6216:6250   */\n      tag_226\n        /* \"#utility.yul\":6225:6249   */\n      tag_227\n        /* \"#utility.yul\":6243:6248   */\n      dup5\n        /* \"#utility.yul\":6225:6249   */\n      tag_143\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6216:6250   */\n      tag_144\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6198:6251   */\n      tag_143\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6185:6251   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6263:6389   */\n    tag_146:\n        /* \"#utility.yul\":6313:6322   */\n      0x00\n        /* \"#utility.yul\":6346:6383   */\n      tag_229\n        /* \"#utility.yul\":6377:6382   */\n      dup3\n        /* \"#utility.yul\":6346:6383   */\n      tag_145\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6333:6383   */\n      swap1\n      pop\n        /* \"#utility.yul\":6263:6389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6536   */\n    tag_147:\n        /* \"#utility.yul\":6460:6469   */\n      0x00\n        /* \"#utility.yul\":6493:6530   */\n      tag_231\n        /* \"#utility.yul\":6524:6529   */\n      dup3\n        /* \"#utility.yul\":6493:6530   */\n      tag_146\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6480:6530   */\n      swap1\n      pop\n        /* \"#utility.yul\":6395:6536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6542:6703   */\n    tag_148:\n        /* \"#utility.yul\":6644:6696   */\n      tag_233\n        /* \"#utility.yul\":6690:6695   */\n      dup2\n        /* \"#utility.yul\":6644:6696   */\n      tag_147\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6639:6642   */\n      dup3\n        /* \"#utility.yul\":6632:6697   */\n      mstore\n        /* \"#utility.yul\":6542:6703   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6709:6961   */\n    tag_27:\n        /* \"#utility.yul\":6817:6821   */\n      0x00\n        /* \"#utility.yul\":6855:6857   */\n      0x20\n        /* \"#utility.yul\":6844:6853   */\n      dup3\n        /* \"#utility.yul\":6840:6858   */\n      add\n        /* \"#utility.yul\":6832:6858   */\n      swap1\n      pop\n        /* \"#utility.yul\":6868:6954   */\n      tag_235\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6927:6933   */\n      dup5\n        /* \"#utility.yul\":6868:6954   */\n      tag_148\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6709:6961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7441   */\n    tag_31:\n        /* \"#utility.yul\":7035:7041   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup1\n        /* \"#utility.yul\":7092:7094   */\n      0x40\n        /* \"#utility.yul\":7080:7089   */\n      dup4\n        /* \"#utility.yul\":7071:7078   */\n      dup6\n        /* \"#utility.yul\":7067:7090   */\n      sub\n        /* \"#utility.yul\":7063:7095   */\n      slt\n        /* \"#utility.yul\":7060:7179   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":7098:7177   */\n      tag_238\n      tag_124\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7060:7179   */\n    tag_237:\n        /* \"#utility.yul\":7218:7219   */\n      0x00\n        /* \"#utility.yul\":7243:7296   */\n      tag_239\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7279:7285   */\n      dup3\n        /* \"#utility.yul\":7268:7277   */\n      dup7\n        /* \"#utility.yul\":7264:7286   */\n      add\n        /* \"#utility.yul\":7243:7296   */\n      tag_128\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7233:7296   */\n      swap3\n      pop\n        /* \"#utility.yul\":7189:7306   */\n      pop\n        /* \"#utility.yul\":7345:7347   */\n      0x20\n        /* \"#utility.yul\":7371:7424   */\n      tag_240\n        /* \"#utility.yul\":7416:7423   */\n      dup6\n        /* \"#utility.yul\":7407:7413   */\n      dup3\n        /* \"#utility.yul\":7396:7405   */\n      dup7\n        /* \"#utility.yul\":7392:7414   */\n      add\n        /* \"#utility.yul\":7371:7424   */\n      tag_128\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7361:7424   */\n      swap2\n      pop\n        /* \"#utility.yul\":7316:7434   */\n      pop\n        /* \"#utility.yul\":6967:7441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7447:7543   */\n    tag_149:\n        /* \"#utility.yul\":7484:7491   */\n      0x00\n        /* \"#utility.yul\":7513:7537   */\n      tag_242\n        /* \"#utility.yul\":7531:7536   */\n      dup3\n        /* \"#utility.yul\":7513:7537   */\n      tag_143\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7502:7537   */\n      swap1\n      pop\n        /* \"#utility.yul\":7447:7543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7671   */\n    tag_150:\n        /* \"#utility.yul\":7622:7646   */\n      tag_244\n        /* \"#utility.yul\":7640:7645   */\n      dup2\n        /* \"#utility.yul\":7622:7646   */\n      tag_149\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7615:7620   */\n      dup2\n        /* \"#utility.yul\":7612:7647   */\n      eq\n        /* \"#utility.yul\":7602:7665   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7661:7662   */\n      0x00\n        /* \"#utility.yul\":7658:7659   */\n      dup1\n        /* \"#utility.yul\":7651:7663   */\n      revert\n        /* \"#utility.yul\":7602:7665   */\n    tag_245:\n        /* \"#utility.yul\":7549:7671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:7820   */\n    tag_151:\n        /* \"#utility.yul\":7734:7739   */\n      0x00\n        /* \"#utility.yul\":7765:7771   */\n      dup2\n        /* \"#utility.yul\":7759:7772   */\n      mload\n        /* \"#utility.yul\":7750:7772   */\n      swap1\n      pop\n        /* \"#utility.yul\":7781:7814   */\n      tag_247\n        /* \"#utility.yul\":7808:7813   */\n      dup2\n        /* \"#utility.yul\":7781:7814   */\n      tag_150\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7677:7820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7826:8177   */\n    tag_45:\n        /* \"#utility.yul\":7896:7902   */\n      0x00\n        /* \"#utility.yul\":7945:7947   */\n      0x20\n        /* \"#utility.yul\":7933:7942   */\n      dup3\n        /* \"#utility.yul\":7924:7931   */\n      dup5\n        /* \"#utility.yul\":7920:7943   */\n      sub\n        /* \"#utility.yul\":7916:7948   */\n      slt\n        /* \"#utility.yul\":7913:8032   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7951:8030   */\n      tag_250\n      tag_124\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7913:8032   */\n    tag_249:\n        /* \"#utility.yul\":8071:8072   */\n      0x00\n        /* \"#utility.yul\":8096:8160   */\n      tag_251\n        /* \"#utility.yul\":8152:8159   */\n      dup5\n        /* \"#utility.yul\":8143:8149   */\n      dup3\n        /* \"#utility.yul\":8132:8141   */\n      dup6\n        /* \"#utility.yul\":8128:8150   */\n      add\n        /* \"#utility.yul\":8096:8160   */\n      tag_151\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8086:8160   */\n      swap2\n      pop\n        /* \"#utility.yul\":8042:8170   */\n      pop\n        /* \"#utility.yul\":7826:8177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8183:8301   */\n    tag_152:\n        /* \"#utility.yul\":8270:8294   */\n      tag_253\n        /* \"#utility.yul\":8288:8293   */\n      dup2\n        /* \"#utility.yul\":8270:8294   */\n      tag_149\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8265:8268   */\n      dup3\n        /* \"#utility.yul\":8258:8295   */\n      mstore\n        /* \"#utility.yul\":8183:8301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8307:8749   */\n    tag_51:\n        /* \"#utility.yul\":8456:8460   */\n      0x00\n        /* \"#utility.yul\":8494:8496   */\n      0x60\n        /* \"#utility.yul\":8483:8492   */\n      dup3\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8471:8497   */\n      swap1\n      pop\n        /* \"#utility.yul\":8507:8578   */\n      tag_255\n        /* \"#utility.yul\":8575:8576   */\n      0x00\n        /* \"#utility.yul\":8564:8573   */\n      dup4\n        /* \"#utility.yul\":8560:8577   */\n      add\n        /* \"#utility.yul\":8551:8557   */\n      dup7\n        /* \"#utility.yul\":8507:8578   */\n      tag_152\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8588:8660   */\n      tag_256\n        /* \"#utility.yul\":8656:8658   */\n      0x20\n        /* \"#utility.yul\":8645:8654   */\n      dup4\n        /* \"#utility.yul\":8641:8659   */\n      add\n        /* \"#utility.yul\":8632:8638   */\n      dup6\n        /* \"#utility.yul\":8588:8660   */\n      tag_152\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8670:8742   */\n      tag_257\n        /* \"#utility.yul\":8738:8740   */\n      0x40\n        /* \"#utility.yul\":8727:8736   */\n      dup4\n        /* \"#utility.yul\":8723:8741   */\n      add\n        /* \"#utility.yul\":8714:8720   */\n      dup5\n        /* \"#utility.yul\":8670:8742   */\n      tag_129\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8307:8749   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8755:8935   */\n    tag_61:\n        /* \"#utility.yul\":8803:8880   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8800:8801   */\n      0x00\n        /* \"#utility.yul\":8793:8881   */\n      mstore\n        /* \"#utility.yul\":8900:8904   */\n      0x41\n        /* \"#utility.yul\":8897:8898   */\n      0x04\n        /* \"#utility.yul\":8890:8905   */\n      mstore\n        /* \"#utility.yul\":8924:8928   */\n      0x24\n        /* \"#utility.yul\":8921:8922   */\n      0x00\n        /* \"#utility.yul\":8914:8929   */\n      revert\n        /* \"#utility.yul\":8941:9121   */\n    tag_71:\n        /* \"#utility.yul\":8989:9066   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8986:8987   */\n      0x00\n        /* \"#utility.yul\":8979:9067   */\n      mstore\n        /* \"#utility.yul\":9086:9090   */\n      0x32\n        /* \"#utility.yul\":9083:9084   */\n      0x04\n        /* \"#utility.yul\":9076:9091   */\n      mstore\n        /* \"#utility.yul\":9110:9114   */\n      0x24\n        /* \"#utility.yul\":9107:9108   */\n      0x00\n        /* \"#utility.yul\":9100:9115   */\n      revert\n        /* \"#utility.yul\":9127:9244   */\n    tag_153:\n        /* \"#utility.yul\":9236:9237   */\n      0x00\n        /* \"#utility.yul\":9233:9234   */\n      dup1\n        /* \"#utility.yul\":9226:9238   */\n      revert\n        /* \"#utility.yul\":9250:9367   */\n    tag_154:\n        /* \"#utility.yul\":9359:9360   */\n      0x00\n        /* \"#utility.yul\":9356:9357   */\n      dup1\n        /* \"#utility.yul\":9349:9361   */\n      revert\n        /* \"#utility.yul\":9373:9654   */\n    tag_155:\n        /* \"#utility.yul\":9456:9483   */\n      tag_263\n        /* \"#utility.yul\":9478:9482   */\n      dup3\n        /* \"#utility.yul\":9456:9483   */\n      tag_137\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9448:9454   */\n      dup2\n        /* \"#utility.yul\":9444:9484   */\n      add\n        /* \"#utility.yul\":9586:9592   */\n      dup2\n        /* \"#utility.yul\":9574:9584   */\n      dup2\n        /* \"#utility.yul\":9571:9593   */\n      lt\n        /* \"#utility.yul\":9550:9568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9538:9548   */\n      dup3\n        /* \"#utility.yul\":9535:9569   */\n      gt\n        /* \"#utility.yul\":9532:9594   */\n      or\n        /* \"#utility.yul\":9529:9617   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9597:9615   */\n      tag_265\n      tag_61\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9529:9617   */\n    tag_264:\n        /* \"#utility.yul\":9637:9647   */\n      dup1\n        /* \"#utility.yul\":9633:9635   */\n      0x40\n        /* \"#utility.yul\":9626:9648   */\n      mstore\n        /* \"#utility.yul\":9416:9654   */\n      pop\n        /* \"#utility.yul\":9373:9654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9660:9789   */\n    tag_156:\n        /* \"#utility.yul\":9694:9700   */\n      0x00\n        /* \"#utility.yul\":9721:9741   */\n      tag_267\n      tag_123\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9711:9741   */\n      swap1\n      pop\n        /* \"#utility.yul\":9750:9783   */\n      tag_268\n        /* \"#utility.yul\":9778:9782   */\n      dup3\n        /* \"#utility.yul\":9770:9776   */\n      dup3\n        /* \"#utility.yul\":9750:9783   */\n      tag_155\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9660:9789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9795:10103   */\n    tag_157:\n        /* \"#utility.yul\":9857:9861   */\n      0x00\n        /* \"#utility.yul\":9947:9965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9939:9945   */\n      dup3\n        /* \"#utility.yul\":9936:9966   */\n      gt\n        /* \"#utility.yul\":9933:9989   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":9969:9987   */\n      tag_271\n      tag_61\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9933:9989   */\n    tag_270:\n        /* \"#utility.yul\":10007:10036   */\n      tag_272\n        /* \"#utility.yul\":10029:10035   */\n      dup3\n        /* \"#utility.yul\":10007:10036   */\n      tag_137\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9999:10036   */\n      swap1\n      pop\n        /* \"#utility.yul\":10091:10095   */\n      0x20\n        /* \"#utility.yul\":10085:10089   */\n      dup2\n        /* \"#utility.yul\":10081:10096   */\n      add\n        /* \"#utility.yul\":10073:10096   */\n      swap1\n      pop\n        /* \"#utility.yul\":9795:10103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10109:10543   */\n    tag_158:\n        /* \"#utility.yul\":10198:10203   */\n      0x00\n        /* \"#utility.yul\":10223:10289   */\n      tag_274\n        /* \"#utility.yul\":10239:10288   */\n      tag_275\n        /* \"#utility.yul\":10281:10287   */\n      dup5\n        /* \"#utility.yul\":10239:10288   */\n      tag_157\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10223:10289   */\n      tag_156\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10214:10289   */\n      swap1\n      pop\n        /* \"#utility.yul\":10312:10318   */\n      dup3\n        /* \"#utility.yul\":10305:10310   */\n      dup2\n        /* \"#utility.yul\":10298:10319   */\n      mstore\n        /* \"#utility.yul\":10350:10354   */\n      0x20\n        /* \"#utility.yul\":10343:10348   */\n      dup2\n        /* \"#utility.yul\":10339:10355   */\n      add\n        /* \"#utility.yul\":10388:10391   */\n      dup5\n        /* \"#utility.yul\":10379:10385   */\n      dup5\n        /* \"#utility.yul\":10374:10377   */\n      dup5\n        /* \"#utility.yul\":10370:10386   */\n      add\n        /* \"#utility.yul\":10367:10392   */\n      gt\n        /* \"#utility.yul\":10364:10476   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":10395:10474   */\n      tag_277\n      tag_154\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10364:10476   */\n    tag_276:\n        /* \"#utility.yul\":10485:10537   */\n      tag_278\n        /* \"#utility.yul\":10530:10536   */\n      dup5\n        /* \"#utility.yul\":10525:10528   */\n      dup3\n        /* \"#utility.yul\":10520:10523   */\n      dup6\n        /* \"#utility.yul\":10485:10537   */\n      tag_136\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10204:10543   */\n      pop\n        /* \"#utility.yul\":10109:10543   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10563:10918   */\n    tag_159:\n        /* \"#utility.yul\":10630:10635   */\n      0x00\n        /* \"#utility.yul\":10679:10682   */\n      dup3\n        /* \"#utility.yul\":10672:10676   */\n      0x1f\n        /* \"#utility.yul\":10664:10670   */\n      dup4\n        /* \"#utility.yul\":10660:10677   */\n      add\n        /* \"#utility.yul\":10656:10683   */\n      slt\n        /* \"#utility.yul\":10646:10768   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10687:10766   */\n      tag_281\n      tag_153\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10646:10768   */\n    tag_280:\n        /* \"#utility.yul\":10797:10803   */\n      dup2\n        /* \"#utility.yul\":10791:10804   */\n      mload\n        /* \"#utility.yul\":10822:10912   */\n      tag_282\n        /* \"#utility.yul\":10908:10911   */\n      dup5\n        /* \"#utility.yul\":10900:10906   */\n      dup3\n        /* \"#utility.yul\":10893:10897   */\n      0x20\n        /* \"#utility.yul\":10885:10891   */\n      dup7\n        /* \"#utility.yul\":10881:10898   */\n      add\n        /* \"#utility.yul\":10822:10912   */\n      tag_158\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10813:10912   */\n      swap2\n      pop\n        /* \"#utility.yul\":10636:10918   */\n      pop\n        /* \"#utility.yul\":10563:10918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11448   */\n    tag_77:\n        /* \"#utility.yul\":11004:11010   */\n      0x00\n        /* \"#utility.yul\":11053:11055   */\n      0x20\n        /* \"#utility.yul\":11041:11050   */\n      dup3\n        /* \"#utility.yul\":11032:11039   */\n      dup5\n        /* \"#utility.yul\":11028:11051   */\n      sub\n        /* \"#utility.yul\":11024:11056   */\n      slt\n        /* \"#utility.yul\":11021:11140   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":11059:11138   */\n      tag_285\n      tag_124\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11021:11140   */\n    tag_284:\n        /* \"#utility.yul\":11200:11201   */\n      0x00\n        /* \"#utility.yul\":11189:11198   */\n      dup3\n        /* \"#utility.yul\":11185:11202   */\n      add\n        /* \"#utility.yul\":11179:11203   */\n      mload\n        /* \"#utility.yul\":11230:11248   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11222:11228   */\n      dup2\n        /* \"#utility.yul\":11219:11249   */\n      gt\n        /* \"#utility.yul\":11216:11333   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":11252:11331   */\n      tag_287\n      tag_125\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11216:11333   */\n    tag_286:\n        /* \"#utility.yul\":11357:11431   */\n      tag_288\n        /* \"#utility.yul\":11423:11430   */\n      dup5\n        /* \"#utility.yul\":11414:11420   */\n      dup3\n        /* \"#utility.yul\":11403:11412   */\n      dup6\n        /* \"#utility.yul\":11399:11421   */\n      add\n        /* \"#utility.yul\":11357:11431   */\n      tag_159\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11347:11431   */\n      swap2\n      pop\n        /* \"#utility.yul\":11150:11441   */\n      pop\n        /* \"#utility.yul\":10924:11448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11454:11634   */\n    tag_160:\n        /* \"#utility.yul\":11502:11579   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11499:11500   */\n      0x00\n        /* \"#utility.yul\":11492:11580   */\n      mstore\n        /* \"#utility.yul\":11599:11603   */\n      0x11\n        /* \"#utility.yul\":11596:11597   */\n      0x04\n        /* \"#utility.yul\":11589:11604   */\n      mstore\n        /* \"#utility.yul\":11623:11627   */\n      0x24\n        /* \"#utility.yul\":11620:11621   */\n      0x00\n        /* \"#utility.yul\":11613:11628   */\n      revert\n        /* \"#utility.yul\":11640:11873   */\n    tag_81:\n        /* \"#utility.yul\":11679:11682   */\n      0x00\n        /* \"#utility.yul\":11702:11726   */\n      tag_291\n        /* \"#utility.yul\":11720:11725   */\n      dup3\n        /* \"#utility.yul\":11702:11726   */\n      tag_126\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11693:11726   */\n      swap2\n      pop\n        /* \"#utility.yul\":11748:11814   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11741:11746   */\n      dup3\n        /* \"#utility.yul\":11738:11815   */\n      sub\n        /* \"#utility.yul\":11735:11838   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":11818:11836   */\n      tag_293\n      tag_160\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11735:11838   */\n    tag_292:\n        /* \"#utility.yul\":11865:11866   */\n      0x01\n        /* \"#utility.yul\":11858:11863   */\n      dup3\n        /* \"#utility.yul\":11854:11867   */\n      add\n        /* \"#utility.yul\":11847:11867   */\n      swap1\n      pop\n        /* \"#utility.yul\":11640:11873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11879:12048   */\n    tag_161:\n        /* \"#utility.yul\":11963:11974   */\n      0x00\n        /* \"#utility.yul\":11997:12003   */\n      dup3\n        /* \"#utility.yul\":11992:11995   */\n      dup3\n        /* \"#utility.yul\":11985:12004   */\n      mstore\n        /* \"#utility.yul\":12037:12041   */\n      0x20\n        /* \"#utility.yul\":12032:12035   */\n      dup3\n        /* \"#utility.yul\":12028:12042   */\n      add\n        /* \"#utility.yul\":12013:12042   */\n      swap1\n      pop\n        /* \"#utility.yul\":11879:12048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12054:12225   */\n    tag_162:\n        /* \"#utility.yul\":12194:12217   */\n      0x796f7520617265206e6f74204e4654206f776e65720000000000000000000000\n        /* \"#utility.yul\":12190:12191   */\n      0x00\n        /* \"#utility.yul\":12182:12188   */\n      dup3\n        /* \"#utility.yul\":12178:12192   */\n      add\n        /* \"#utility.yul\":12171:12218   */\n      mstore\n        /* \"#utility.yul\":12054:12225   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12231:12597   */\n    tag_163:\n        /* \"#utility.yul\":12373:12376   */\n      0x00\n        /* \"#utility.yul\":12394:12461   */\n      tag_297\n        /* \"#utility.yul\":12458:12460   */\n      0x15\n        /* \"#utility.yul\":12453:12456   */\n      dup4\n        /* \"#utility.yul\":12394:12461   */\n      tag_161\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12387:12461   */\n      swap2\n      pop\n        /* \"#utility.yul\":12470:12563   */\n      tag_298\n        /* \"#utility.yul\":12559:12562   */\n      dup3\n        /* \"#utility.yul\":12470:12563   */\n      tag_162\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12588:12590   */\n      0x20\n        /* \"#utility.yul\":12583:12586   */\n      dup3\n        /* \"#utility.yul\":12579:12591   */\n      add\n        /* \"#utility.yul\":12572:12591   */\n      swap1\n      pop\n        /* \"#utility.yul\":12231:12597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12603:13022   */\n    tag_89:\n        /* \"#utility.yul\":12769:12773   */\n      0x00\n        /* \"#utility.yul\":12807:12809   */\n      0x20\n        /* \"#utility.yul\":12796:12805   */\n      dup3\n        /* \"#utility.yul\":12792:12810   */\n      add\n        /* \"#utility.yul\":12784:12810   */\n      swap1\n      pop\n        /* \"#utility.yul\":12856:12865   */\n      dup2\n        /* \"#utility.yul\":12850:12854   */\n      dup2\n        /* \"#utility.yul\":12846:12866   */\n      sub\n        /* \"#utility.yul\":12842:12843   */\n      0x00\n        /* \"#utility.yul\":12831:12840   */\n      dup4\n        /* \"#utility.yul\":12827:12844   */\n      add\n        /* \"#utility.yul\":12820:12867   */\n      mstore\n        /* \"#utility.yul\":12884:13015   */\n      tag_300\n        /* \"#utility.yul\":13010:13014   */\n      dup2\n        /* \"#utility.yul\":12884:13015   */\n      tag_163\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12876:13015   */\n      swap1\n      pop\n        /* \"#utility.yul\":12603:13022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13028:13190   */\n    tag_164:\n        /* \"#utility.yul\":13168:13182   */\n      0x416c72656164792073616c650000000000000000000000000000000000000000\n        /* \"#utility.yul\":13164:13165   */\n      0x00\n        /* \"#utility.yul\":13156:13162   */\n      dup3\n        /* \"#utility.yul\":13152:13166   */\n      add\n        /* \"#utility.yul\":13145:13183   */\n      mstore\n        /* \"#utility.yul\":13028:13190   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13196:13562   */\n    tag_165:\n        /* \"#utility.yul\":13338:13341   */\n      0x00\n        /* \"#utility.yul\":13359:13426   */\n      tag_303\n        /* \"#utility.yul\":13423:13425   */\n      0x0c\n        /* \"#utility.yul\":13418:13421   */\n      dup4\n        /* \"#utility.yul\":13359:13426   */\n      tag_161\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13352:13426   */\n      swap2\n      pop\n        /* \"#utility.yul\":13435:13528   */\n      tag_304\n        /* \"#utility.yul\":13524:13527   */\n      dup3\n        /* \"#utility.yul\":13435:13528   */\n      tag_164\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":13553:13555   */\n      0x20\n        /* \"#utility.yul\":13548:13551   */\n      dup3\n        /* \"#utility.yul\":13544:13556   */\n      add\n        /* \"#utility.yul\":13537:13556   */\n      swap1\n      pop\n        /* \"#utility.yul\":13196:13562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13568:13987   */\n    tag_93:\n        /* \"#utility.yul\":13734:13738   */\n      0x00\n        /* \"#utility.yul\":13772:13774   */\n      0x20\n        /* \"#utility.yul\":13761:13770   */\n      dup3\n        /* \"#utility.yul\":13757:13775   */\n      add\n        /* \"#utility.yul\":13749:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13821:13830   */\n      dup2\n        /* \"#utility.yul\":13815:13819   */\n      dup2\n        /* \"#utility.yul\":13811:13831   */\n      sub\n        /* \"#utility.yul\":13807:13808   */\n      0x00\n        /* \"#utility.yul\":13796:13805   */\n      dup4\n        /* \"#utility.yul\":13792:13809   */\n      add\n        /* \"#utility.yul\":13785:13832   */\n      mstore\n        /* \"#utility.yul\":13849:13980   */\n      tag_306\n        /* \"#utility.yul\":13975:13979   */\n      dup2\n        /* \"#utility.yul\":13849:13980   */\n      tag_165\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13841:13980   */\n      swap1\n      pop\n        /* \"#utility.yul\":13568:13987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13993:14325   */\n    tag_95:\n        /* \"#utility.yul\":14114:14118   */\n      0x00\n        /* \"#utility.yul\":14152:14154   */\n      0x40\n        /* \"#utility.yul\":14141:14150   */\n      dup3\n        /* \"#utility.yul\":14137:14155   */\n      add\n        /* \"#utility.yul\":14129:14155   */\n      swap1\n      pop\n        /* \"#utility.yul\":14165:14236   */\n      tag_308\n        /* \"#utility.yul\":14233:14234   */\n      0x00\n        /* \"#utility.yul\":14222:14231   */\n      dup4\n        /* \"#utility.yul\":14218:14235   */\n      add\n        /* \"#utility.yul\":14209:14215   */\n      dup6\n        /* \"#utility.yul\":14165:14236   */\n      tag_152\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14246:14318   */\n      tag_309\n        /* \"#utility.yul\":14314:14316   */\n      0x20\n        /* \"#utility.yul\":14303:14312   */\n      dup4\n        /* \"#utility.yul\":14299:14317   */\n      add\n        /* \"#utility.yul\":14290:14296   */\n      dup5\n        /* \"#utility.yul\":14246:14318   */\n      tag_152\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13993:14325   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14331:14421   */\n    tag_166:\n        /* \"#utility.yul\":14365:14372   */\n      0x00\n        /* \"#utility.yul\":14408:14413   */\n      dup2\n        /* \"#utility.yul\":14401:14414   */\n      iszero\n        /* \"#utility.yul\":14394:14415   */\n      iszero\n        /* \"#utility.yul\":14383:14415   */\n      swap1\n      pop\n        /* \"#utility.yul\":14331:14421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14427:14543   */\n    tag_167:\n        /* \"#utility.yul\":14497:14518   */\n      tag_312\n        /* \"#utility.yul\":14512:14517   */\n      dup2\n        /* \"#utility.yul\":14497:14518   */\n      tag_166\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":14490:14495   */\n      dup2\n        /* \"#utility.yul\":14487:14519   */\n      eq\n        /* \"#utility.yul\":14477:14537   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":14533:14534   */\n      0x00\n        /* \"#utility.yul\":14530:14531   */\n      dup1\n        /* \"#utility.yul\":14523:14535   */\n      revert\n        /* \"#utility.yul\":14477:14537   */\n    tag_313:\n        /* \"#utility.yul\":14427:14543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14549:14686   */\n    tag_168:\n        /* \"#utility.yul\":14603:14608   */\n      0x00\n        /* \"#utility.yul\":14634:14640   */\n      dup2\n        /* \"#utility.yul\":14628:14641   */\n      mload\n        /* \"#utility.yul\":14619:14641   */\n      swap1\n      pop\n        /* \"#utility.yul\":14650:14680   */\n      tag_315\n        /* \"#utility.yul\":14674:14679   */\n      dup2\n        /* \"#utility.yul\":14650:14680   */\n      tag_167\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":14549:14686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14692:15037   */\n    tag_99:\n        /* \"#utility.yul\":14759:14765   */\n      0x00\n        /* \"#utility.yul\":14808:14810   */\n      0x20\n        /* \"#utility.yul\":14796:14805   */\n      dup3\n        /* \"#utility.yul\":14787:14794   */\n      dup5\n        /* \"#utility.yul\":14783:14806   */\n      sub\n        /* \"#utility.yul\":14779:14811   */\n      slt\n        /* \"#utility.yul\":14776:14895   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":14814:14893   */\n      tag_318\n      tag_124\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14776:14895   */\n    tag_317:\n        /* \"#utility.yul\":14934:14935   */\n      0x00\n        /* \"#utility.yul\":14959:15020   */\n      tag_319\n        /* \"#utility.yul\":15012:15019   */\n      dup5\n        /* \"#utility.yul\":15003:15009   */\n      dup3\n        /* \"#utility.yul\":14992:15001   */\n      dup6\n        /* \"#utility.yul\":14988:15010   */\n      add\n        /* \"#utility.yul\":14959:15020   */\n      tag_168\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14949:15020   */\n      swap2\n      pop\n        /* \"#utility.yul\":14905:15030   */\n      pop\n        /* \"#utility.yul\":14692:15037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15043:15237   */\n    tag_111:\n        /* \"#utility.yul\":15083:15087   */\n      0x00\n        /* \"#utility.yul\":15103:15123   */\n      tag_321\n        /* \"#utility.yul\":15121:15122   */\n      dup3\n        /* \"#utility.yul\":15103:15123   */\n      tag_126\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15098:15123   */\n      swap2\n      pop\n        /* \"#utility.yul\":15137:15157   */\n      tag_322\n        /* \"#utility.yul\":15155:15156   */\n      dup4\n        /* \"#utility.yul\":15137:15157   */\n      tag_126\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":15132:15157   */\n      swap3\n      pop\n        /* \"#utility.yul\":15181:15182   */\n      dup3\n        /* \"#utility.yul\":15178:15179   */\n      dup3\n        /* \"#utility.yul\":15174:15183   */\n      sub\n        /* \"#utility.yul\":15166:15183   */\n      swap1\n      pop\n        /* \"#utility.yul\":15205:15206   */\n      dup2\n        /* \"#utility.yul\":15199:15203   */\n      dup2\n        /* \"#utility.yul\":15196:15207   */\n      gt\n        /* \"#utility.yul\":15193:15230   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":15210:15228   */\n      tag_324\n      tag_160\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":15193:15230   */\n    tag_323:\n        /* \"#utility.yul\":15043:15237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15243:15423   */\n    tag_120:\n        /* \"#utility.yul\":15291:15368   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15288:15289   */\n      0x00\n        /* \"#utility.yul\":15281:15369   */\n      mstore\n        /* \"#utility.yul\":15388:15392   */\n      0x31\n        /* \"#utility.yul\":15385:15386   */\n      0x04\n        /* \"#utility.yul\":15378:15393   */\n      mstore\n        /* \"#utility.yul\":15412:15416   */\n      0x24\n        /* \"#utility.yul\":15409:15410   */\n      0x00\n        /* \"#utility.yul\":15402:15417   */\n      revert\n\n    auxdata: 0xa2646970667358221220b2345ded41b703dc1824592e2e6607d0f3e6287ba924eb35a492aad1fc45655164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ERC721_$1197_fromMemory": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC721_$1197_fromMemory": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC721_$1197": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC721_$1197": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1406:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC721_$1197",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "610:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "620:7:12",
														"type": ""
													}
												],
												"src": "568:111:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:94:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "815:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC721_$1197",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:58:12"
															},
															"nodeType": "YulIf",
															"src": "753:78:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC721_$1197",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "736:5:12",
														"type": ""
													}
												],
												"src": "685:152:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:95:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "931:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC721_$1197",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:48:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC721_$1197_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "899:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "907:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "915:5:12",
														"type": ""
													}
												],
												"src": "843:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:289:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1162:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:12"
															},
															"nodeType": "YulIf",
															"src": "1124:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1253:143:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1268:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1272:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1297:89:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC721_$1197_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1307:46:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1307:79:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1297:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC721_$1197_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1095:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:12",
														"type": ""
													}
												],
												"src": "1022:381:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC721_$1197(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC721_$1197(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC721_$1197(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC721_$1197_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC721_$1197(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC721_$1197_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC721_$1197_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001233380380620012338339818101604052810190620000379190620000fc565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b6000620000c482620000a3565b9050919050565b620000d681620000b7565b8114620000e257600080fd5b50565b600081519050620000f681620000cb565b92915050565b6000602082840312156200011557620001146200007e565b5b60006200012584828501620000e5565b91505092915050565b6110f5806200013e6000396000f3fe6080604052600436106100555760003560e01c80630c8cc5691461005a5780633048f512146100975780634e4dc988146100b35780637c0b8de2146100de578063921e033b14610109578063e5afe3e614610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061091b565b61016f565b60405161008e9190610957565b60405180910390f35b6100b160048036038101906100ac919061091b565b610193565b005b3480156100bf57600080fd5b506100c8610386565b6040516100d59190610b23565b60405180910390f35b3480156100ea57600080fd5b506100f361053d565b6040516101009190610bc4565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b9190610bdf565b610561565b005b34801561013e57600080fd5b506101596004803603810190610154919061091b565b6107bc565b6040516101669190610957565b60405180910390f35b6002818154811061017f57600080fd5b906000526020600020016000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016101ef9190610957565b602060405180830381865afa15801561020c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102309190610c5d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361026a57600080fd5b3460016000848152602001908152602001600020541461028957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102cf573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8233856040518463ffffffff1660e01b815260040161032d93929190610c99565b600060405180830381600087803b15801561034757600080fd5b505af115801561035b573d6000803e3d6000fd5b5050505060006001600084815260200190815260200160002081905550610381826107d4565b505050565b606060006002805490501161039a57600080fd5b600060028054905067ffffffffffffffff8111156103bb576103ba610cd0565b5b6040519080825280602002602001820160405280156103f457816020015b6103e16108b0565b8152602001906001900390816103d95790505b50905060005b6002805490508110156105355760006002828154811061041d5761041c610cff565b5b9060005260206000200154905060006001600083815260200190815260200160002054905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c87b56dd846040518263ffffffff1660e01b815260040161049e9190610957565b600060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104e49190610e25565b905060405180606001604052808481526020018381526020018281525085858151811061051457610513610cff565b5b6020026020010181905250505050808061052d90610e9d565b9150506103fa565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016105bd9190610957565b602060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610c5d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610f42565b60405180910390fd5b6000821161067b57600080fd5b60006001600085815260200190815260200160002054146106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610fae565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161072c929190610fce565b602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d919061102f565b61077657600080fd5b8160016000858152602001908152602001600020819055506002839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b60016020528060005260406000206000915090505481565b600080600090505b6002805490508110156108a55782600282815481106107fe576107fd610cff565b5b9060005260206000200154036108925760026001600280549050610822919061105c565b8154811061083357610832610cff565b5b90600052602060002001546002828154811061085257610851610cff565b5b9060005260206000200181905550600280548061087257610871611090565b5b6001900381819060005260206000200160009055905560019150506108ab565b808061089d90610e9d565b9150506107dc565b50600090505b919050565b60405180606001604052806000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6108f8816108e5565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b600060208284031215610931576109306108db565b5b600061093f84828501610906565b91505092915050565b610951816108e5565b82525050565b600060208201905061096c6000830184610948565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109a7816108e5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109e75780820151818401526020810190506109cc565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a0f826109ad565b610a1981856109b8565b9350610a298185602086016109c9565b610a32816109f3565b840191505092915050565b6000606083016000830151610a55600086018261099e565b506020830151610a68602086018261099e565b5060408301518482036040860152610a808282610a04565b9150508091505092915050565b6000610a998383610a3d565b905092915050565b6000602082019050919050565b6000610ab982610972565b610ac3818561097d565b935083602082028501610ad58561098e565b8060005b85811015610b115784840389528151610af28582610a8d565b9450610afd83610aa1565b925060208a01995050600181019050610ad9565b50829750879550505050505092915050565b60006020820190508181036000830152610b3d8184610aae565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b8a610b85610b8084610b45565b610b65565b610b45565b9050919050565b6000610b9c82610b6f565b9050919050565b6000610bae82610b91565b9050919050565b610bbe81610ba3565b82525050565b6000602082019050610bd96000830184610bb5565b92915050565b60008060408385031215610bf657610bf56108db565b5b6000610c0485828601610906565b9250506020610c1585828601610906565b9150509250929050565b6000610c2a82610b45565b9050919050565b610c3a81610c1f565b8114610c4557600080fd5b50565b600081519050610c5781610c31565b92915050565b600060208284031215610c7357610c726108db565b5b6000610c8184828501610c48565b91505092915050565b610c9381610c1f565b82525050565b6000606082019050610cae6000830186610c8a565b610cbb6020830185610c8a565b610cc86040830184610948565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b610d41826109f3565b810181811067ffffffffffffffff82111715610d6057610d5f610cd0565b5b80604052505050565b6000610d736108d1565b9050610d7f8282610d38565b919050565b600067ffffffffffffffff821115610d9f57610d9e610cd0565b5b610da8826109f3565b9050602081019050919050565b6000610dc8610dc384610d84565b610d69565b905082815260208101848484011115610de457610de3610d33565b5b610def8482856109c9565b509392505050565b600082601f830112610e0c57610e0b610d2e565b5b8151610e1c848260208601610db5565b91505092915050565b600060208284031215610e3b57610e3a6108db565b5b600082015167ffffffffffffffff811115610e5957610e586108e0565b5b610e6584828501610df7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ea8826108e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eda57610ed9610e6e565b5b600182019050919050565b600082825260208201905092915050565b7f796f7520617265206e6f74204e4654206f776e65720000000000000000000000600082015250565b6000610f2c601583610ee5565b9150610f3782610ef6565b602082019050919050565b60006020820190508181036000830152610f5b81610f1f565b9050919050565b7f416c72656164792073616c650000000000000000000000000000000000000000600082015250565b6000610f98600c83610ee5565b9150610fa382610f62565b602082019050919050565b60006020820190508181036000830152610fc781610f8b565b9050919050565b6000604082019050610fe36000830185610c8a565b610ff06020830184610c8a565b9392505050565b60008115159050919050565b61100c81610ff7565b811461101757600080fd5b50565b60008151905061102981611003565b92915050565b600060208284031215611045576110446108db565b5b60006110538482850161101a565b91505092915050565b6000611067826108e5565b9150611072836108e5565b925082820390508181111561108a57611089610e6e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b2345ded41b703dc1824592e2e6607d0f3e6287ba924eb35a492aad1fc45655164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1233 CODESIZE SUB DUP1 PUSH3 0x1233 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x12E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC4 DUP3 PUSH3 0xA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD6 DUP2 PUSH3 0xB7 JUMP JUMPDEST DUP2 EQ PUSH3 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF6 DUP2 PUSH3 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x115 JUMPI PUSH3 0x114 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x125 DUP5 DUP3 DUP6 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F5 DUP1 PUSH3 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC8CC569 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3048F512 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x4E4DC988 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x7C0B8DE2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x921E033B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xE5AFE3E6 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x381 DUP3 PUSH2 0x7D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3E1 PUSH2 0x8B0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3D9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC87B56DD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x52D SWAP1 PUSH2 0xE9D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FA JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP1 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8A5 JUMPI DUP3 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x892 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x833 JUMPI PUSH2 0x832 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0x1090 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x1 SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x89D SWAP1 PUSH2 0xE9D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7DC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP5 DUP3 DUP6 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0F DUP3 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0xA19 DUP2 DUP6 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 POP PUSH2 0xA29 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xA32 DUP2 PUSH2 0x9F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xA55 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x99E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xA68 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x99E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xA80 DUP3 DUP3 PUSH2 0xA04 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP4 DUP4 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 DUP3 PUSH2 0x972 JUMP JUMPDEST PUSH2 0xAC3 DUP2 DUP6 PUSH2 0x97D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xAD5 DUP6 PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB11 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xAF2 DUP6 DUP3 PUSH2 0xA8D JUMP JUMPDEST SWAP5 POP PUSH2 0xAFD DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAD9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3D DUP2 DUP5 PUSH2 0xAAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8A PUSH2 0xB85 PUSH2 0xB80 DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9C DUP3 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF6 JUMPI PUSH2 0xBF5 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP6 DUP3 DUP7 ADD PUSH2 0x906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC15 DUP6 DUP3 DUP7 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3A DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC57 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP5 DUP3 DUP6 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC93 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCAE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCBB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCC8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD41 DUP3 PUSH2 0x9F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD7F DUP3 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD9E PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x9F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC8 PUSH2 0xDC3 DUP5 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH2 0xDEF DUP5 DUP3 DUP6 PUSH2 0x9C9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xD2E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xE1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0x8E0 JUMP JUMPDEST JUMPDEST PUSH2 0xE65 DUP5 DUP3 DUP6 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F74204E4654206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2C PUSH1 0x15 DUP4 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF37 DUP3 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5B DUP2 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792073616C650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF98 PUSH1 0xC DUP4 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA3 DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1029 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1053 DUP5 DUP3 DUP6 ADD PUSH2 0x101A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1072 DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLVALUE 0x5D 0xED COINBASE 0xB7 SUB 0xDC XOR 0x24 MSIZE 0x2E 0x2E PUSH7 0x7D0F3E6287BA9 0x24 0xEB CALLDATALOAD LOG4 SWAP3 0xAA 0xD1 0xFC GASLIMIT PUSH6 0x5164736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "132:2342:0:-:0;;;498:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;538:4;532:3;;:10;;;;;;;;;;;;;;;;;;498:51;132:2342;;88:117:12;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:381::-;1107:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:119;;;1162:79;;:::i;:::-;1124:119;1282:1;1307:79;1378:7;1369:6;1358:9;1354:22;1307:79;:::i;:::-;1297:89;;1253:143;1022:381;;;;:::o;132:2342:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NFT_5": {
									"entryPoint": 1341,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PurchaseToken_149": {
									"entryPoint": 403,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@SaleTokenList_19": {
									"entryPoint": 367,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SalesToken_92": {
									"entryPoint": 1377,
									"id": 92,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getSaleTokenList_269": {
									"entryPoint": 902,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@popSaleToken_197": {
									"entryPoint": 2004,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenPrices_16": {
									"entryPoint": 1980,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC721_$1197_to_t_address_fromStack": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC721_$1197__to_t_address__fromStack_reversed": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC721_$1197_to_t_address": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15426:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:12",
														"type": ""
													}
												],
												"src": "545:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:12"
															},
															"nodeType": "YulIf",
															"src": "766:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:12",
														"type": ""
													}
												],
												"src": "690:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:12",
														"type": ""
													}
												],
												"src": "1025:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:12",
														"type": ""
													}
												],
												"src": "1149:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1487:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1503:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1497:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1487:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1459:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1469:6:12",
														"type": ""
													}
												],
												"src": "1377:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1675:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1715:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1711:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1696:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1630:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1635:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1646:11:12",
														"type": ""
													}
												],
												"src": "1522:209:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1834:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1852:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1844:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1882:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1865:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1821:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1829:4:12",
														"type": ""
													}
												],
												"src": "1737:157:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1972:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1995:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1977:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1943:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1950:3:12",
														"type": ""
													}
												],
												"src": "1900:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2084:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2100:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2094:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2056:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2066:6:12",
														"type": ""
													}
												],
												"src": "2014:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2205:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2222:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2243:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2262:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2258:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2243:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2177:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2182:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2193:11:12",
														"type": ""
													}
												],
												"src": "2119:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2346:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2356:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2365:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2360:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2450:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2455:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2446:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2446:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2469:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2474:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2465:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2465:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2459:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2459:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2439:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2439:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2386:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2383:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2397:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2399:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2408:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2411:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2404:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2404:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2399:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2379:3:12",
																"statements": []
															},
															"src": "2375:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2508:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2513:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2504:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2522:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2497:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2328:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2333:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2338:6:12",
														"type": ""
													}
												],
												"src": "2284:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2584:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2594:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2612:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2628:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2624:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2567:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2577:6:12",
														"type": ""
													}
												],
												"src": "2536:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2726:275:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2736:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2783:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2750:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2740:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2798:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2854:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2805:48:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:61:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2798:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2914:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2928:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2875:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2949:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2960:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2987:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2965:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2956:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2949:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2707:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2714:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2722:3:12",
														"type": ""
													}
												],
												"src": "2644:357:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:664:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3191:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3207:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3212:4:12",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3203:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3195:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3227:167:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3265:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3295:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3302:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3291:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3291:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3285:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3285:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3269:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3355:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3373:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3378:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3369:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3369:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3321:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3321:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3404:165:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3440:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3470:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3477:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3466:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3466:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3460:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3460:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3444:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3530:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3548:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3553:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3496:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3496:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3579:239:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3618:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3648:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3655:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3644:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3644:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3638:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3622:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3686:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3691:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3682:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3682:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "3702:4:12"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3708:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3698:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3698:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3675:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3675:38:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3675:38:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3726:81:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3788:12:12"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3802:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3734:53:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3734:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "3726:4:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3828:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "3835:4:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3160:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3167:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3176:3:12",
														"type": ""
													}
												],
												"src": "3067:778:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3981:126:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3991:110:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4089:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4097:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4005:83:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:96:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3991:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3954:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3962:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3970:10:12",
														"type": ""
													}
												],
												"src": "3851:256:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4213:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4223:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4235:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4240:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4231:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4223:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4200:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4208:4:12",
														"type": ""
													}
												],
												"src": "4113:138:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4495:937:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4505:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4592:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4519:72:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:79:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4509:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4607:118:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4713:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4718:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4614:98:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:111:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4607:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:20:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4751:3:12"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "4738:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4763:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4788:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4796:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4784:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4784:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:27:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4767:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4811:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4901:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4826:74:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4826:81:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4815:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4916:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4930:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4920:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5006:381:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "5036:4:12"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "5042:9:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "5032:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5032:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5020:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5020:33:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5020:33:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5066:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5093:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5087:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5087:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5070:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5113:122:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5215:13:12"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "5230:4:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5121:93:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5121:114:12"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5113:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5248:95:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5336:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5258:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5258:85:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5248:6:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5356:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5367:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5372:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5363:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5363:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5356:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4968:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4971:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4965:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4979:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4981:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4990:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4993:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4986:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4986:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4981:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4950:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4952:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4961:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4956:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4946:441:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5403:4:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5396:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5416:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5423:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5416:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4474:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4481:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4490:3:12",
														"type": ""
													}
												],
												"src": "4321:1111:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5636:275:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5646:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5658:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5646:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5693:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5704:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5689:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5689:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5712:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5718:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5708:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5682:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5682:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5682:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5738:166:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5890:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5899:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5746:143:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:158:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5738:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5608:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5620:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5631:4:12",
														"type": ""
													}
												],
												"src": "5438:473:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5962:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5972:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5987:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5972:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5944:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5954:7:12",
														"type": ""
													}
												],
												"src": "5917:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6081:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6091:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6098:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6091:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6067:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6077:3:12",
														"type": ""
													}
												],
												"src": "6049:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6175:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6185:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6243:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6225:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6225:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6216:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6198:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6185:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6155:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6165:9:12",
														"type": ""
													}
												],
												"src": "6115:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6323:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6333:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6377:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6346:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6346:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6333:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6303:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6313:9:12",
														"type": ""
													}
												],
												"src": "6263:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6470:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6480:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6524:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6493:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6480:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC721_$1197_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6450:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6460:9:12",
														"type": ""
													}
												],
												"src": "6395:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6622:81:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC721_$1197_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6644:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6644:52:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6632:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6632:65:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC721_$1197_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6610:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6617:3:12",
														"type": ""
													}
												],
												"src": "6542:161:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6822:139:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6832:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6844:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6855:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6840:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6832:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC721_$1197_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6868:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:86:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6868:86:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC721_$1197__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6794:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6806:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6817:4:12",
														"type": ""
													}
												],
												"src": "6709:252:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7050:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7096:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7098:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7098:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7098:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7071:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7067:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:32:12"
															},
															"nodeType": "YulIf",
															"src": "7060:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7189:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7204:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7208:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7233:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7268:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7279:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7264:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7264:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7243:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7243:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7233:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7316:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7331:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7345:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7335:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7361:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7396:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7407:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7392:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7392:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7416:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7371:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7371:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7361:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7012:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7023:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7035:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7043:6:12",
														"type": ""
													}
												],
												"src": "6967:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7492:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7502:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7531:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7513:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7502:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7474:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7484:7:12",
														"type": ""
													}
												],
												"src": "7447:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7649:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7658:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7661:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7651:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7651:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7651:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7615:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7640:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7622:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7622:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7612:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7612:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7605:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:43:12"
															},
															"nodeType": "YulIf",
															"src": "7602:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7585:5:12",
														"type": ""
													}
												],
												"src": "7549:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7740:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7750:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7765:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7759:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7750:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7808:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7781:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7781:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7718:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7726:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7734:5:12",
														"type": ""
													}
												],
												"src": "7677:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7903:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7949:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7951:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7951:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7951:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7924:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7933:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7945:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:32:12"
															},
															"nodeType": "YulIf",
															"src": "7913:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8042:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8057:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8071:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8061:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8086:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8132:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8143:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8128:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8128:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8152:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8096:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8096:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8086:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7873:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7884:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7896:6:12",
														"type": ""
													}
												],
												"src": "7826:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8248:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8265:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8288:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8270:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8270:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8258:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8236:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8243:3:12",
														"type": ""
													}
												],
												"src": "8183:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8461:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8471:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8483:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8494:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8479:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8479:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8471:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8551:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8564:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8575:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8507:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8507:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8632:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8645:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8656:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8641:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8588:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8588:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8714:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8727:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8738:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8723:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8670:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8670:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8417:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8429:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8437:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8445:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8456:4:12",
														"type": ""
													}
												],
												"src": "8307:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8800:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8803:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8793:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8793:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8793:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8897:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8900:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8890:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8921:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8914:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8914:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8755:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8969:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8986:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8989:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9083:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9086:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9076:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9076:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9076:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9107:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9110:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9100:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8941:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9216:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9233:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9236:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9226:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9127:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9339:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9356:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9359:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9250:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9426:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9448:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9478:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9456:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9456:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9444:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9430:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9595:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9597:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9597:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9597:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9538:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9550:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9535:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9535:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9574:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9586:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9571:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9571:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9532:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:62:12"
															},
															"nodeType": "YulIf",
															"src": "9529:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9633:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9637:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9626:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9402:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9410:4:12",
														"type": ""
													}
												],
												"src": "9373:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9701:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9711:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9721:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9721:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9711:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9770:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9778:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9750:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9750:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9685:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9694:6:12",
														"type": ""
													}
												],
												"src": "9660:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9862:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9967:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9969:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9969:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9969:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9939:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9947:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9936:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9936:30:12"
															},
															"nodeType": "YulIf",
															"src": "9933:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9999:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10029:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10007:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10007:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9999:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10073:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10085:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10091:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10081:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10073:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9846:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9857:4:12",
														"type": ""
													}
												],
												"src": "9795:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10214:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10281:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10239:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10239:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10223:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10223:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10214:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10305:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10312:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10298:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10328:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10343:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10332:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10393:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10395:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10395:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10395:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10374:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10379:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10370:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10388:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10367:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10367:25:12"
															},
															"nodeType": "YulIf",
															"src": "10364:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10520:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10525:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10530:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10485:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10177:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10182:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10190:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10198:5:12",
														"type": ""
													}
												],
												"src": "10109:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10636:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10685:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10687:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10687:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10687:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10664:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10672:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10660:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10660:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10679:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10656:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:35:12"
															},
															"nodeType": "YulIf",
															"src": "10646:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10777:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10797:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10791:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10791:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10781:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10813:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10885:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10893:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10881:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10881:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10900:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10908:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10822:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10813:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10614:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10622:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10630:5:12",
														"type": ""
													}
												],
												"src": "10563:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11011:437:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11057:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11059:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11059:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11059:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11032:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11028:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11028:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11053:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11024:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:32:12"
															},
															"nodeType": "YulIf",
															"src": "11021:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "11150:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11165:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11189:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11200:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11185:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11185:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11179:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11179:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11169:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11250:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11252:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11252:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11252:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11222:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11230:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11219:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11219:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "11216:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11347:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11403:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11414:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11399:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11399:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11423:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11357:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11357:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11347:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10981:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10992:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11004:6:12",
														"type": ""
													}
												],
												"src": "10924:524:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11482:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11499:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11502:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11492:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11599:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11589:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11589:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11589:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11620:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11623:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11613:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11613:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11613:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11454:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11683:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11693:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11720:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11702:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11693:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11816:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11818:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11818:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11818:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11741:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11748:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11738:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:77:12"
															},
															"nodeType": "YulIf",
															"src": "11735:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11847:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11858:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11865:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11854:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11847:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11679:3:12",
														"type": ""
													}
												],
												"src": "11640:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11975:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11992:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11997:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12013:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12032:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12037:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12028:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12013:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11947:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11952:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11963:11:12",
														"type": ""
													}
												],
												"src": "11879:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12160:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12182:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12178:14:12"
																	},
																	{
																		"hexValue": "796f7520617265206e6f74204e4654206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12194:23:12",
																		"type": "",
																		"value": "you are not NFT owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12171:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12171:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12152:6:12",
														"type": ""
													}
												],
												"src": "12054:171:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12377:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12387:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12453:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12458:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12394:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12394:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12559:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e",
																	"nodeType": "YulIdentifier",
																	"src": "12470:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12470:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12470:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12572:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12583:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12588:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12579:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12579:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12365:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12373:3:12",
														"type": ""
													}
												],
												"src": "12231:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12774:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12784:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12796:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12807:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12792:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12792:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12784:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12831:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12842:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12827:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12850:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12856:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12846:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12846:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12820:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12820:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12876:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13010:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12884:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12876:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12754:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12769:4:12",
														"type": ""
													}
												],
												"src": "12603:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13134:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13156:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13164:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13152:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13152:14:12"
																	},
																	{
																		"hexValue": "416c72656164792073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13168:14:12",
																		"type": "",
																		"value": "Already sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13145:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13145:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13145:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13126:6:12",
														"type": ""
													}
												],
												"src": "13028:162:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13342:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13352:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13418:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13423:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13359:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13359:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13352:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13524:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7",
																	"nodeType": "YulIdentifier",
																	"src": "13435:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13537:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13548:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13553:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13544:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13544:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13537:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13330:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13338:3:12",
														"type": ""
													}
												],
												"src": "13196:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13739:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13749:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13761:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13772:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13757:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13749:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13796:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13807:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13792:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13792:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13815:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13811:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13811:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13785:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13785:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13841:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13975:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13849:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13849:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13841:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13719:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13734:4:12",
														"type": ""
													}
												],
												"src": "13568:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14119:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14129:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14141:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14152:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14137:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14137:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14129:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14209:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14222:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14233:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14218:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14218:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14165:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14165:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14165:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14290:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14303:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14314:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14299:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14246:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14246:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14246:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14083:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14095:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14103:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14114:4:12",
														"type": ""
													}
												],
												"src": "13993:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14373:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14383:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14408:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14401:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14401:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14394:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14394:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14383:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14355:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14365:7:12",
														"type": ""
													}
												],
												"src": "14331:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14467:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14521:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14530:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14533:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14523:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14523:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14523:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14490:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14512:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14497:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14497:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14487:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14487:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14480:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14480:40:12"
															},
															"nodeType": "YulIf",
															"src": "14477:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14460:5:12",
														"type": ""
													}
												],
												"src": "14427:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14609:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14619:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14634:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14628:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14628:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14619:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14674:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14650:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14650:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14587:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14595:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14603:5:12",
														"type": ""
													}
												],
												"src": "14549:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14766:271:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14812:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14814:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14814:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14814:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14787:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14796:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14783:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14783:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14779:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14779:32:12"
															},
															"nodeType": "YulIf",
															"src": "14776:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14905:125:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14920:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14934:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14924:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14949:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14992:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15003:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14988:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14988:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15012:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14959:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14959:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14949:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14736:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14747:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14759:6:12",
														"type": ""
													}
												],
												"src": "14692:345:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15088:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15098:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15121:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15103:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15103:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15098:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15132:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15155:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15137:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15137:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15132:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15166:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15178:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15181:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15174:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15174:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15166:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15208:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15210:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15210:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15210:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15199:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15205:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15196:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15196:11:12"
															},
															"nodeType": "YulIf",
															"src": "15193:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15074:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15077:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15083:4:12",
														"type": ""
													}
												],
												"src": "15043:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15271:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15288:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15291:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15281:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15281:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15281:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15385:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15388:4:12",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15378:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15378:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15409:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15412:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15402:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15402:15:12"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "15243:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct Auction.TokenInfo -> struct Auction.TokenInfo\n    function abi_encode_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tokenURI\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Auction.TokenInfo[] -> struct Auction.TokenInfo[]\n    function abi_encode_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TokenInfo_$12_memory_ptr_to_t_struct$_TokenInfo_$12_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC721_$1197_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC721_$1197_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC721_$1197_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC721_$1197__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC721_$1197_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e(memPtr) {\n\n        mstore(add(memPtr, 0), \"you are not NFT owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80630c8cc5691461005a5780633048f512146100975780634e4dc988146100b35780637c0b8de2146100de578063921e033b14610109578063e5afe3e614610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061091b565b61016f565b60405161008e9190610957565b60405180910390f35b6100b160048036038101906100ac919061091b565b610193565b005b3480156100bf57600080fd5b506100c8610386565b6040516100d59190610b23565b60405180910390f35b3480156100ea57600080fd5b506100f361053d565b6040516101009190610bc4565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b9190610bdf565b610561565b005b34801561013e57600080fd5b506101596004803603810190610154919061091b565b6107bc565b6040516101669190610957565b60405180910390f35b6002818154811061017f57600080fd5b906000526020600020016000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016101ef9190610957565b602060405180830381865afa15801561020c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102309190610c5d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361026a57600080fd5b3460016000848152602001908152602001600020541461028957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102cf573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8233856040518463ffffffff1660e01b815260040161032d93929190610c99565b600060405180830381600087803b15801561034757600080fd5b505af115801561035b573d6000803e3d6000fd5b5050505060006001600084815260200190815260200160002081905550610381826107d4565b505050565b606060006002805490501161039a57600080fd5b600060028054905067ffffffffffffffff8111156103bb576103ba610cd0565b5b6040519080825280602002602001820160405280156103f457816020015b6103e16108b0565b8152602001906001900390816103d95790505b50905060005b6002805490508110156105355760006002828154811061041d5761041c610cff565b5b9060005260206000200154905060006001600083815260200190815260200160002054905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c87b56dd846040518263ffffffff1660e01b815260040161049e9190610957565b600060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104e49190610e25565b905060405180606001604052808481526020018381526020018281525085858151811061051457610513610cff565b5b6020026020010181905250505050808061052d90610e9d565b9150506103fa565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016105bd9190610957565b602060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610c5d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610f42565b60405180910390fd5b6000821161067b57600080fd5b60006001600085815260200190815260200160002054146106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610fae565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161072c929190610fce565b602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d919061102f565b61077657600080fd5b8160016000858152602001908152602001600020819055506002839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b60016020528060005260406000206000915090505481565b600080600090505b6002805490508110156108a55782600282815481106107fe576107fd610cff565b5b9060005260206000200154036108925760026001600280549050610822919061105c565b8154811061083357610832610cff565b5b90600052602060002001546002828154811061085257610851610cff565b5b9060005260206000200181905550600280548061087257610871611090565b5b6001900381819060005260206000200160009055905560019150506108ab565b808061089d90610e9d565b9150506107dc565b50600090505b919050565b60405180606001604052806000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6108f8816108e5565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b600060208284031215610931576109306108db565b5b600061093f84828501610906565b91505092915050565b610951816108e5565b82525050565b600060208201905061096c6000830184610948565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109a7816108e5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109e75780820151818401526020810190506109cc565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a0f826109ad565b610a1981856109b8565b9350610a298185602086016109c9565b610a32816109f3565b840191505092915050565b6000606083016000830151610a55600086018261099e565b506020830151610a68602086018261099e565b5060408301518482036040860152610a808282610a04565b9150508091505092915050565b6000610a998383610a3d565b905092915050565b6000602082019050919050565b6000610ab982610972565b610ac3818561097d565b935083602082028501610ad58561098e565b8060005b85811015610b115784840389528151610af28582610a8d565b9450610afd83610aa1565b925060208a01995050600181019050610ad9565b50829750879550505050505092915050565b60006020820190508181036000830152610b3d8184610aae565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b8a610b85610b8084610b45565b610b65565b610b45565b9050919050565b6000610b9c82610b6f565b9050919050565b6000610bae82610b91565b9050919050565b610bbe81610ba3565b82525050565b6000602082019050610bd96000830184610bb5565b92915050565b60008060408385031215610bf657610bf56108db565b5b6000610c0485828601610906565b9250506020610c1585828601610906565b9150509250929050565b6000610c2a82610b45565b9050919050565b610c3a81610c1f565b8114610c4557600080fd5b50565b600081519050610c5781610c31565b92915050565b600060208284031215610c7357610c726108db565b5b6000610c8184828501610c48565b91505092915050565b610c9381610c1f565b82525050565b6000606082019050610cae6000830186610c8a565b610cbb6020830185610c8a565b610cc86040830184610948565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b610d41826109f3565b810181811067ffffffffffffffff82111715610d6057610d5f610cd0565b5b80604052505050565b6000610d736108d1565b9050610d7f8282610d38565b919050565b600067ffffffffffffffff821115610d9f57610d9e610cd0565b5b610da8826109f3565b9050602081019050919050565b6000610dc8610dc384610d84565b610d69565b905082815260208101848484011115610de457610de3610d33565b5b610def8482856109c9565b509392505050565b600082601f830112610e0c57610e0b610d2e565b5b8151610e1c848260208601610db5565b91505092915050565b600060208284031215610e3b57610e3a6108db565b5b600082015167ffffffffffffffff811115610e5957610e586108e0565b5b610e6584828501610df7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ea8826108e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eda57610ed9610e6e565b5b600182019050919050565b600082825260208201905092915050565b7f796f7520617265206e6f74204e4654206f776e65720000000000000000000000600082015250565b6000610f2c601583610ee5565b9150610f3782610ef6565b602082019050919050565b60006020820190508181036000830152610f5b81610f1f565b9050919050565b7f416c72656164792073616c650000000000000000000000000000000000000000600082015250565b6000610f98600c83610ee5565b9150610fa382610f62565b602082019050919050565b60006020820190508181036000830152610fc781610f8b565b9050919050565b6000604082019050610fe36000830185610c8a565b610ff06020830184610c8a565b9392505050565b60008115159050919050565b61100c81610ff7565b811461101757600080fd5b50565b60008151905061102981611003565b92915050565b600060208284031215611045576110446108db565b5b60006110538482850161101a565b91505092915050565b6000611067826108e5565b9150611072836108e5565b925082820390508181111561108a57611089610e6e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b2345ded41b703dc1824592e2e6607d0f3e6287ba924eb35a492aad1fc45655164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC8CC569 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3048F512 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x4E4DC988 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x7C0B8DE2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x921E033B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xE5AFE3E6 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x381 DUP3 PUSH2 0x7D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3E1 PUSH2 0x8B0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3D9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC87B56DD DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x52D SWAP1 PUSH2 0xE9D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FA JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP1 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8A5 JUMPI DUP3 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x892 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x833 JUMPI PUSH2 0x832 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0x1090 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x1 SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x89D SWAP1 PUSH2 0xE9D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7DC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x931 JUMPI PUSH2 0x930 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x93F DUP5 DUP3 DUP6 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x8E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0F DUP3 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0xA19 DUP2 DUP6 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 POP PUSH2 0xA29 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xA32 DUP2 PUSH2 0x9F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xA55 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x99E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xA68 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x99E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xA80 DUP3 DUP3 PUSH2 0xA04 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP4 DUP4 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 DUP3 PUSH2 0x972 JUMP JUMPDEST PUSH2 0xAC3 DUP2 DUP6 PUSH2 0x97D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xAD5 DUP6 PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB11 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xAF2 DUP6 DUP3 PUSH2 0xA8D JUMP JUMPDEST SWAP5 POP PUSH2 0xAFD DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAD9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3D DUP2 DUP5 PUSH2 0xAAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8A PUSH2 0xB85 PUSH2 0xB80 DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9C DUP3 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF6 JUMPI PUSH2 0xBF5 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP6 DUP3 DUP7 ADD PUSH2 0x906 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC15 DUP6 DUP3 DUP7 ADD PUSH2 0x906 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2A DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3A DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC57 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP5 DUP3 DUP6 ADD PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC93 DUP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCAE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCBB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCC8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD41 DUP3 PUSH2 0x9F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD7F DUP3 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD9E PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP3 PUSH2 0x9F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC8 PUSH2 0xDC3 DUP5 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0xD33 JUMP JUMPDEST JUMPDEST PUSH2 0xDEF DUP5 DUP3 DUP6 PUSH2 0x9C9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xD2E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xE1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0x8E0 JUMP JUMPDEST JUMPDEST PUSH2 0xE65 DUP5 DUP3 DUP6 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F74204E4654206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2C PUSH1 0x15 DUP4 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF37 DUP3 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5B DUP2 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792073616C650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF98 PUSH1 0xC DUP4 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA3 DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100C DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1029 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1053 DUP5 DUP3 DUP6 ADD PUSH2 0x101A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 DUP3 PUSH2 0x8E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1072 DUP4 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLVALUE 0x5D 0xED COINBASE 0xB7 SUB 0xDC XOR 0x24 MSIZE 0x2E 0x2E PUSH7 0x7D0F3E6287BA9 0x24 0xEB CALLDATALOAD LOG4 SWAP3 0xAA 0xD1 0xFC GASLIMIT PUSH6 0x5164736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "132:2342:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1093:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1957:515;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;156:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:500;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;324:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1093:394::-;1159:18;1180:3;;;;;;;;;;;:11;;;1192:8;1180:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1159:42;;1233:10;1219:24;;:10;:24;;;1211:34;;;;;;1288:9;1263:11;:21;1275:8;1263:21;;;;;;;;;;;;:34;1255:43;;;;;;1317:10;1309:28;;:39;1338:9;1309:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:3;;;;;;;;;;:16;;;1379:10;1391;1403:8;1362:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:1;1423:11;:21;1435:8;1423:21;;;;;;;;;;;:25;;;;1458:22;1471:8;1458:12;:22::i;:::-;;1149:338;1093:394;:::o;1957:515::-;2006:18;2067:1;2044:13;:20;;;;:24;2036:33;;;;;;2079:23;2121:13;:20;;;;2105:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2079:63;;2157:9;2153:290;2176:13;:20;;;;2172:1;:24;2153:290;;;2216:15;2234:13;2248:1;2234:16;;;;;;;;:::i;:::-;;;;;;;;;;2216:34;;2264:13;2280:11;:20;2292:7;2280:20;;;;;;;;;;;;2264:36;;2314:22;2339:3;;;;;;;;;;;:12;;;2352:7;2339:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2314:46;;2397:35;;;;;;;;2407:7;2397:35;;;;2416:5;2397:35;;;;2423:8;2397:35;;;2387:4;2392:1;2387:7;;;;;;;;:::i;:::-;;;;;;;:45;;;;2202:241;;;2198:3;;;;;:::i;:::-;;;;2153:290;;;;2461:4;2454:11;;;1957:515;:::o;156:17::-;;;;;;;;;;;;:::o;573:500::-;644:18;665:3;;;;;;;;;;;:11;;;677:8;665:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;644:42;;718:10;704:24;;:10;:24;;;696:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;781:1;772:6;:10;764:20;;;;;;825:1;802:11;:21;814:8;802:21;;;;;;;;;;;;:24;794:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;888:3;;;;;;;;;;:20;;;909:10;929:4;888:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;880:56;;;;;;1022:6;998:11;:21;1010:8;998:21;;;;;;;;;;;:30;;;;1038:13;1057:8;1038:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:439;573:500;;:::o;324:46::-;;;;;;;;;;;;;;;;;:::o;1493:363::-;1550:4;1569:9;1581:1;1569:13;;1565:263;1588:13;:20;;;;1584:1;:24;1565:263;;;1651:8;1631:13;1645:1;1631:16;;;;;;;;:::i;:::-;;;;;;;;;;:28;1628:190;;1698:13;1735:1;1712:13;:20;;;;:24;;;;:::i;:::-;1698:39;;;;;;;;:::i;:::-;;;;;;;;;;1679:13;1693:1;1679:16;;;;;;;;:::i;:::-;;;;;;;;;:58;;;;1755:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1799:4;1792:11;;;;;1628:190;1610:3;;;;;:::i;:::-;;;;1565:263;;;;1844:5;1837:12;;1493:363;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:139::-;1469:6;1503:5;1497:12;1487:22;;1377:139;;;:::o;1522:209::-;1646:11;1680:6;1675:3;1668:19;1720:4;1715:3;1711:14;1696:29;;1522:209;;;;:::o;1737:157::-;1829:4;1852:3;1844:11;;1882:4;1877:3;1873:14;1865:22;;1737:157;;;:::o;1900:108::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1900:108;;:::o;2014:99::-;2066:6;2100:5;2094:12;2084:22;;2014:99;;;:::o;2119:159::-;2193:11;2227:6;2222:3;2215:19;2267:4;2262:3;2258:14;2243:29;;2119:159;;;;:::o;2284:246::-;2365:1;2375:113;2389:6;2386:1;2383:13;2375:113;;;2474:1;2469:3;2465:11;2459:18;2455:1;2450:3;2446:11;2439:39;2411:2;2408:1;2404:10;2399:15;;2375:113;;;2522:1;2513:6;2508:3;2504:16;2497:27;2346:184;2284:246;;;:::o;2536:102::-;2577:6;2628:2;2624:7;2619:2;2612:5;2608:14;2604:28;2594:38;;2536:102;;;:::o;2644:357::-;2722:3;2750:39;2783:5;2750:39;:::i;:::-;2805:61;2859:6;2854:3;2805:61;:::i;:::-;2798:68;;2875:65;2933:6;2928:3;2921:4;2914:5;2910:16;2875:65;:::i;:::-;2965:29;2987:6;2965:29;:::i;:::-;2960:3;2956:39;2949:46;;2726:275;2644:357;;;;:::o;3067:778::-;3176:3;3212:4;3207:3;3203:14;3302:4;3295:5;3291:16;3285:23;3321:63;3378:4;3373:3;3369:14;3355:12;3321:63;:::i;:::-;3227:167;3477:4;3470:5;3466:16;3460:23;3496:63;3553:4;3548:3;3544:14;3530:12;3496:63;:::i;:::-;3404:165;3655:4;3648:5;3644:16;3638:23;3708:3;3702:4;3698:14;3691:4;3686:3;3682:14;3675:38;3734:73;3802:4;3788:12;3734:73;:::i;:::-;3726:81;;3579:239;3835:4;3828:11;;3181:664;3067:778;;;;:::o;3851:256::-;3970:10;4005:96;4097:3;4089:6;4005:96;:::i;:::-;3991:110;;3851:256;;;;:::o;4113:138::-;4208:4;4240;4235:3;4231:14;4223:22;;4113:138;;;:::o;4321:1111::-;4490:3;4519:79;4592:5;4519:79;:::i;:::-;4614:111;4718:6;4713:3;4614:111;:::i;:::-;4607:118;;4751:3;4796:4;4788:6;4784:17;4779:3;4775:27;4826:81;4901:5;4826:81;:::i;:::-;4930:7;4961:1;4946:441;4971:6;4968:1;4965:13;4946:441;;;5042:9;5036:4;5032:20;5027:3;5020:33;5093:6;5087:13;5121:114;5230:4;5215:13;5121:114;:::i;:::-;5113:122;;5258:85;5336:6;5258:85;:::i;:::-;5248:95;;5372:4;5367:3;5363:14;5356:21;;5006:381;4993:1;4990;4986:9;4981:14;;4946:441;;;4950:14;5403:4;5396:11;;5423:3;5416:10;;4495:937;;;;;4321:1111;;;;:::o;5438:473::-;5631:4;5669:2;5658:9;5654:18;5646:26;;5718:9;5712:4;5708:20;5704:1;5693:9;5689:17;5682:47;5746:158;5899:4;5890:6;5746:158;:::i;:::-;5738:166;;5438:473;;;;:::o;5917:126::-;5954:7;5994:42;5987:5;5983:54;5972:65;;5917:126;;;:::o;6049:60::-;6077:3;6098:5;6091:12;;6049:60;;;:::o;6115:142::-;6165:9;6198:53;6216:34;6225:24;6243:5;6225:24;:::i;:::-;6216:34;:::i;:::-;6198:53;:::i;:::-;6185:66;;6115:142;;;:::o;6263:126::-;6313:9;6346:37;6377:5;6346:37;:::i;:::-;6333:50;;6263:126;;;:::o;6395:141::-;6460:9;6493:37;6524:5;6493:37;:::i;:::-;6480:50;;6395:141;;;:::o;6542:161::-;6644:52;6690:5;6644:52;:::i;:::-;6639:3;6632:65;6542:161;;:::o;6709:252::-;6817:4;6855:2;6844:9;6840:18;6832:26;;6868:86;6951:1;6940:9;6936:17;6927:6;6868:86;:::i;:::-;6709:252;;;;:::o;6967:474::-;7035:6;7043;7092:2;7080:9;7071:7;7067:23;7063:32;7060:119;;;7098:79;;:::i;:::-;7060:119;7218:1;7243:53;7288:7;7279:6;7268:9;7264:22;7243:53;:::i;:::-;7233:63;;7189:117;7345:2;7371:53;7416:7;7407:6;7396:9;7392:22;7371:53;:::i;:::-;7361:63;;7316:118;6967:474;;;;;:::o;7447:96::-;7484:7;7513:24;7531:5;7513:24;:::i;:::-;7502:35;;7447:96;;;:::o;7549:122::-;7622:24;7640:5;7622:24;:::i;:::-;7615:5;7612:35;7602:63;;7661:1;7658;7651:12;7602:63;7549:122;:::o;7677:143::-;7734:5;7765:6;7759:13;7750:22;;7781:33;7808:5;7781:33;:::i;:::-;7677:143;;;;:::o;7826:351::-;7896:6;7945:2;7933:9;7924:7;7920:23;7916:32;7913:119;;;7951:79;;:::i;:::-;7913:119;8071:1;8096:64;8152:7;8143:6;8132:9;8128:22;8096:64;:::i;:::-;8086:74;;8042:128;7826:351;;;;:::o;8183:118::-;8270:24;8288:5;8270:24;:::i;:::-;8265:3;8258:37;8183:118;;:::o;8307:442::-;8456:4;8494:2;8483:9;8479:18;8471:26;;8507:71;8575:1;8564:9;8560:17;8551:6;8507:71;:::i;:::-;8588:72;8656:2;8645:9;8641:18;8632:6;8588:72;:::i;:::-;8670;8738:2;8727:9;8723:18;8714:6;8670:72;:::i;:::-;8307:442;;;;;;:::o;8755:180::-;8803:77;8800:1;8793:88;8900:4;8897:1;8890:15;8924:4;8921:1;8914:15;8941:180;8989:77;8986:1;8979:88;9086:4;9083:1;9076:15;9110:4;9107:1;9100:15;9127:117;9236:1;9233;9226:12;9250:117;9359:1;9356;9349:12;9373:281;9456:27;9478:4;9456:27;:::i;:::-;9448:6;9444:40;9586:6;9574:10;9571:22;9550:18;9538:10;9535:34;9532:62;9529:88;;;9597:18;;:::i;:::-;9529:88;9637:10;9633:2;9626:22;9416:238;9373:281;;:::o;9660:129::-;9694:6;9721:20;;:::i;:::-;9711:30;;9750:33;9778:4;9770:6;9750:33;:::i;:::-;9660:129;;;:::o;9795:308::-;9857:4;9947:18;9939:6;9936:30;9933:56;;;9969:18;;:::i;:::-;9933:56;10007:29;10029:6;10007:29;:::i;:::-;9999:37;;10091:4;10085;10081:15;10073:23;;9795:308;;;:::o;10109:434::-;10198:5;10223:66;10239:49;10281:6;10239:49;:::i;:::-;10223:66;:::i;:::-;10214:75;;10312:6;10305:5;10298:21;10350:4;10343:5;10339:16;10388:3;10379:6;10374:3;10370:16;10367:25;10364:112;;;10395:79;;:::i;:::-;10364:112;10485:52;10530:6;10525:3;10520;10485:52;:::i;:::-;10204:339;10109:434;;;;;:::o;10563:355::-;10630:5;10679:3;10672:4;10664:6;10660:17;10656:27;10646:122;;10687:79;;:::i;:::-;10646:122;10797:6;10791:13;10822:90;10908:3;10900:6;10893:4;10885:6;10881:17;10822:90;:::i;:::-;10813:99;;10636:282;10563:355;;;;:::o;10924:524::-;11004:6;11053:2;11041:9;11032:7;11028:23;11024:32;11021:119;;;11059:79;;:::i;:::-;11021:119;11200:1;11189:9;11185:17;11179:24;11230:18;11222:6;11219:30;11216:117;;;11252:79;;:::i;:::-;11216:117;11357:74;11423:7;11414:6;11403:9;11399:22;11357:74;:::i;:::-;11347:84;;11150:291;10924:524;;;;:::o;11454:180::-;11502:77;11499:1;11492:88;11599:4;11596:1;11589:15;11623:4;11620:1;11613:15;11640:233;11679:3;11702:24;11720:5;11702:24;:::i;:::-;11693:33;;11748:66;11741:5;11738:77;11735:103;;11818:18;;:::i;:::-;11735:103;11865:1;11858:5;11854:13;11847:20;;11640:233;;;:::o;11879:169::-;11963:11;11997:6;11992:3;11985:19;12037:4;12032:3;12028:14;12013:29;;11879:169;;;;:::o;12054:171::-;12194:23;12190:1;12182:6;12178:14;12171:47;12054:171;:::o;12231:366::-;12373:3;12394:67;12458:2;12453:3;12394:67;:::i;:::-;12387:74;;12470:93;12559:3;12470:93;:::i;:::-;12588:2;12583:3;12579:12;12572:19;;12231:366;;;:::o;12603:419::-;12769:4;12807:2;12796:9;12792:18;12784:26;;12856:9;12850:4;12846:20;12842:1;12831:9;12827:17;12820:47;12884:131;13010:4;12884:131;:::i;:::-;12876:139;;12603:419;;;:::o;13028:162::-;13168:14;13164:1;13156:6;13152:14;13145:38;13028:162;:::o;13196:366::-;13338:3;13359:67;13423:2;13418:3;13359:67;:::i;:::-;13352:74;;13435:93;13524:3;13435:93;:::i;:::-;13553:2;13548:3;13544:12;13537:19;;13196:366;;;:::o;13568:419::-;13734:4;13772:2;13761:9;13757:18;13749:26;;13821:9;13815:4;13811:20;13807:1;13796:9;13792:17;13785:47;13849:131;13975:4;13849:131;:::i;:::-;13841:139;;13568:419;;;:::o;13993:332::-;14114:4;14152:2;14141:9;14137:18;14129:26;;14165:71;14233:1;14222:9;14218:17;14209:6;14165:71;:::i;:::-;14246:72;14314:2;14303:9;14299:18;14290:6;14246:72;:::i;:::-;13993:332;;;;;:::o;14331:90::-;14365:7;14408:5;14401:13;14394:21;14383:32;;14331:90;;;:::o;14427:116::-;14497:21;14512:5;14497:21;:::i;:::-;14490:5;14487:32;14477:60;;14533:1;14530;14523:12;14477:60;14427:116;:::o;14549:137::-;14603:5;14634:6;14628:13;14619:22;;14650:30;14674:5;14650:30;:::i;:::-;14549:137;;;;:::o;14692:345::-;14759:6;14808:2;14796:9;14787:7;14783:23;14779:32;14776:119;;;14814:79;;:::i;:::-;14776:119;14934:1;14959:61;15012:7;15003:6;14992:9;14988:22;14959:61;:::i;:::-;14949:71;;14905:125;14692:345;;;;:::o;15043:194::-;15083:4;15103:20;15121:1;15103:20;:::i;:::-;15098:25;;15137:20;15155:1;15137:20;:::i;:::-;15132:25;;15181:1;15178;15174:9;15166:17;;15205:1;15199:4;15196:11;15193:37;;;15210:18;;:::i;:::-;15193:37;15043:194;;;;:::o;15243:180::-;15291:77;15288:1;15281:88;15388:4;15385:1;15378:15;15412:4;15409:1;15402:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "868200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NFT()": "infinite",
								"PurchaseToken(uint256)": "infinite",
								"SaleTokenList(uint256)": "infinite",
								"SalesToken(uint256,uint256)": "infinite",
								"getSaleTokenList()": "infinite",
								"tokenPrices(uint256)": "infinite"
							},
							"internal": {
								"popSaleToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 498,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 538,
									"end": 542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 532,
									"end": 542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 532,
									"end": 542,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 532,
									"end": 542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 532,
									"end": 542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 498,
									"end": 549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1153,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1159,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1162,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1378,
									"end": 1385,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1367,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 1307,
									"end": 1386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 2474,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2345ded41b703dc1824592e2e6607d0f3e6287ba924eb35a492aad1fc45655164736f6c63430008120033",
									".code": [
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "C8CC569"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "3048F512"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4E4DC988"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "7C0B8DE2"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "921E033B"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "E5AFE3E6"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 2474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 461,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 461,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 461,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1093,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1093,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1957,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 156,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 156,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 573,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 573,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 324,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1180,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1180,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1255,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1362,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1458,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2105,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2105,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2196,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2234,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2339,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2339,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2387,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2198,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 156,
											"end": 173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 665,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 677,
											"end": 685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 665,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 665,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 696,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 696,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 696,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 772,
											"end": 782,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 764,
											"end": 784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 764,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 764,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 802,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 794,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 794,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 794,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 888,
											"end": 891,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 888,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 888,
											"end": 891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 888,
											"end": 908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 888,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 909,
											"end": 919,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 929,
											"end": 933,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 888,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 888,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 888,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 936,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 936,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1028,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 1065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 634,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1588,
											"end": 1608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1631,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1628,
											"end": 1818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1712,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1712,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1679,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1737,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1768,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1755,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1792,
											"end": 1803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1818,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1628,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1610,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1516,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1377,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1509,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1516,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1377,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1646,
											"end": 1657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1522,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1894,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1737,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2008,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1900,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1995,
											"end": 2000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1977,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2113,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2014,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2113,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2014,
											"end": 2113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2193,
											"end": 2204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2243,
											"end": 2272,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2243,
											"end": 2272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2530,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2284,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2453,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2414,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2414,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2375,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2346,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2604,
											"end": 2632,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2722,
											"end": 2725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2783,
											"end": 2788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2750,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2857,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2805,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2866,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2925,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2875,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2940,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 2875,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2965,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 2963,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2956,
											"end": 2995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 3001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 3001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3216,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3207,
											"end": 3210,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3307,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3285,
											"end": 3308,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3321,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3321,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 3321,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3321,
											"end": 3384,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3321,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3227,
											"end": 3394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3544,
											"end": 3558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 3496,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3661,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3708,
											"end": 3711,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3712,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3689,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3682,
											"end": 3696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3734,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3734,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 3734,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3734,
											"end": 3807,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3734,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3835,
											"end": 3839,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3067,
											"end": 3845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3970,
											"end": 3980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 4005,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 4005,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3991,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3991,
											"end": 4101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4251,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4113,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4244,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4113,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4592,
											"end": 4597,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 4519,
											"end": 4598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4716,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4614,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4725,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4614,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4725,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4751,
											"end": 4754,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4796,
											"end": 4800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4788,
											"end": 4794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4801,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4901,
											"end": 4906,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4826,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4826,
											"end": 4907,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4826,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 4978,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5051,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5030,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5087,
											"end": 5100,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 5121,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5235,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5121,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5235,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5336,
											"end": 5342,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 5258,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5343,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5258,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5343,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5370,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5006,
											"end": 5387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 4946,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5407,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5426,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5426,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 5432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5631,
											"end": 5635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5708,
											"end": 5728,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5746,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5746,
											"end": 5904,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5746,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5917,
											"end": 6043,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 5917,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5994,
											"end": 6036,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5983,
											"end": 6037,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 6037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 6037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5917,
											"end": 6043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5917,
											"end": 6043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5917,
											"end": 6043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5917,
											"end": 6043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6109,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6049,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6098,
											"end": 6103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6091,
											"end": 6103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6091,
											"end": 6103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6109,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6257,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6115,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6216,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6225,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6243,
											"end": 6248,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 6225,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6249,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6225,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6216,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6216,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6198,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 6198,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6198,
											"end": 6251,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6198,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6257,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6389,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6263,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6346,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6536,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6395,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6524,
											"end": 6529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6493,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6530,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6493,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6480,
											"end": 6530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6480,
											"end": 6530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6536,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6536,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6703,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 6542,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6644,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6696,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6644,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6632,
											"end": 6697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6857,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6868,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6868,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 6868,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6868,
											"end": 6954,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 6868,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7078,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7067,
											"end": 7090,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7095,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 7098,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7277,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 7243,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 7296,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 7296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7345,
											"end": 7347,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7371,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7416,
											"end": 7423,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7405,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7414,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7371,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 7371,
											"end": 7424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7371,
											"end": 7424,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7371,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7316,
											"end": 7434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 7441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7543,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7447,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 7531,
											"end": 7536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 7513,
											"end": 7537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7537,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 7513,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7502,
											"end": 7537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7502,
											"end": 7537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7543,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7671,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7549,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7640,
											"end": 7645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7622,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7646,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7622,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7647,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7602,
											"end": 7665,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7663,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7665,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7602,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 7772,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 7808,
											"end": 7813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7781,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7814,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 7781,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7947,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7933,
											"end": 7942,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7931,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7920,
											"end": 7943,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7916,
											"end": 7948,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7913,
											"end": 8032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7951,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 7951,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 8030,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7951,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8032,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7913,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 8152,
											"end": 8159,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8141,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8096,
											"end": 8160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8160,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 8096,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8042,
											"end": 8170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7826,
											"end": 8177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8301,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 8183,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8288,
											"end": 8293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 8270,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8294,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8270,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8265,
											"end": 8268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8258,
											"end": 8295,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8575,
											"end": 8576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8560,
											"end": 8577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8551,
											"end": 8557,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 8507,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 8588,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8670,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8727,
											"end": 8736,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8670,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 8670,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8670,
											"end": 8742,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 8670,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8935,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 8755,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8880,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8800,
											"end": 8801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8881,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8904,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 8897,
											"end": 8898,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8890,
											"end": 8905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8941,
											"end": 9121,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 8941,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8989,
											"end": 9066,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8986,
											"end": 8987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8979,
											"end": 9067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9083,
											"end": 9084,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9076,
											"end": 9091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9100,
											"end": 9115,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9244,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9127,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9238,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9367,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9250,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9361,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9373,
											"end": 9654,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9373,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 9456,
											"end": 9483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9483,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 9456,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9574,
											"end": 9584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9571,
											"end": 9593,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9594,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 9597,
											"end": 9615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9637,
											"end": 9647,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9635,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9626,
											"end": 9648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9416,
											"end": 9654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9373,
											"end": 9654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9373,
											"end": 9654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9373,
											"end": 9654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9789,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9660,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9694,
											"end": 9700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 9721,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9741,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9750,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9750,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9789,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 9795,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9966,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 9989,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 9933,
											"end": 9989,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 9969,
											"end": 9987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 9989,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 9933,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 10007,
											"end": 10036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10007,
											"end": 10036,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10007,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10073,
											"end": 10096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10073,
											"end": 10096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 10103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 10103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9795,
											"end": 10103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10223,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 10239,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 10223,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10289,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10223,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10214,
											"end": 10289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10214,
											"end": 10289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10312,
											"end": 10318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 10310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10298,
											"end": 10319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10354,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10343,
											"end": 10348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10379,
											"end": 10385,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10374,
											"end": 10377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10392,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10476,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 10364,
											"end": 10476,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10395,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 10395,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10474,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10395,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10476,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 10364,
											"end": 10476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 10530,
											"end": 10536,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10523,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 10485,
											"end": 10537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10537,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 10485,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10630,
											"end": 10635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10679,
											"end": 10682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10683,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10646,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 10646,
											"end": 10768,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10687,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 10687,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 10687,
											"end": 10766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10687,
											"end": 10766,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 10687,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10646,
											"end": 10768,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 10646,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10804,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10908,
											"end": 10911,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10897,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10885,
											"end": 10891,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10881,
											"end": 10898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 10822,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10912,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10822,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10636,
											"end": 10918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10563,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11041,
											"end": 11050,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11039,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11028,
											"end": 11051,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11024,
											"end": 11056,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11140,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 11021,
											"end": 11140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11059,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 11059,
											"end": 11138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11138,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11059,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11140,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 11021,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11200,
											"end": 11201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11189,
											"end": 11198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11179,
											"end": 11203,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11222,
											"end": 11228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11249,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11333,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11216,
											"end": 11333,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 11252,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 11252,
											"end": 11331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11331,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 11252,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11333,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11216,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 11420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11403,
											"end": 11412,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11399,
											"end": 11421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 11357,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11431,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11357,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11347,
											"end": 11431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11150,
											"end": 11441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 11448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11454,
											"end": 11634,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11454,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11502,
											"end": 11579,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11499,
											"end": 11500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11580,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11599,
											"end": 11603,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11589,
											"end": 11604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11620,
											"end": 11621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11873,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 11640,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11720,
											"end": 11725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 11702,
											"end": 11726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11702,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11693,
											"end": 11726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11693,
											"end": 11726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11748,
											"end": 11814,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11741,
											"end": 11746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11738,
											"end": 11815,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11735,
											"end": 11838,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11818,
											"end": 11836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 11818,
											"end": 11836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11838,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11735,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 11866,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11854,
											"end": 11867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11963,
											"end": 11974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 11995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11985,
											"end": 12004,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12032,
											"end": 12035,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12028,
											"end": 12042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11879,
											"end": 12048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12225,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 12054,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12194,
											"end": 12217,
											"name": "PUSH",
											"source": 12,
											"value": "796F7520617265206E6F74204E4654206F776E65720000000000000000000000"
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12597,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 12231,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 12458,
											"end": 12460,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 12453,
											"end": 12456,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12394,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 12394,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12394,
											"end": 12461,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 12394,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12461,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12559,
											"end": 12562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 12470,
											"end": 12563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12563,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12470,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12588,
											"end": 12590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12583,
											"end": 12586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12579,
											"end": 12591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12597,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12597,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12231,
											"end": 12597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 13022,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 12603,
											"end": 13022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12769,
											"end": 12773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12807,
											"end": 12809,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12796,
											"end": 12805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12784,
											"end": 12810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12784,
											"end": 12810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12856,
											"end": 12865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 12866,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12842,
											"end": 12843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12831,
											"end": 12840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12820,
											"end": 12867,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12884,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 13010,
											"end": 13014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12884,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 12884,
											"end": 13015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12884,
											"end": 13015,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12884,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 13022,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 13022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 13022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 13022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13028,
											"end": 13190,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 13028,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13168,
											"end": 13182,
											"name": "PUSH",
											"source": 12,
											"value": "416C72656164792073616C650000000000000000000000000000000000000000"
										},
										{
											"begin": 13164,
											"end": 13165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13156,
											"end": 13162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13152,
											"end": 13166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13145,
											"end": 13183,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13028,
											"end": 13190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13028,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13423,
											"end": 13425,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 13418,
											"end": 13421,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 13359,
											"end": 13426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13352,
											"end": 13426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13352,
											"end": 13426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13524,
											"end": 13527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 13435,
											"end": 13528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13553,
											"end": 13555,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13548,
											"end": 13551,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13544,
											"end": 13556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13537,
											"end": 13556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13537,
											"end": 13556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13774,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13761,
											"end": 13770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13807,
											"end": 13808,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 13805,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13785,
											"end": 13832,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13975,
											"end": 13979,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 13849,
											"end": 13980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13841,
											"end": 13980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13841,
											"end": 13980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14114,
											"end": 14118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14154,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14141,
											"end": 14150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14165,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14233,
											"end": 14234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14222,
											"end": 14231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14218,
											"end": 14235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14209,
											"end": 14215,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14165,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 14165,
											"end": 14236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14165,
											"end": 14236,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14165,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14246,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14303,
											"end": 14312,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14296,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14246,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 14246,
											"end": 14318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14246,
											"end": 14318,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 14246,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14421,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 14331,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14365,
											"end": 14372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14408,
											"end": 14413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14414,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14394,
											"end": 14415,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14427,
											"end": 14543,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 14427,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14497,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14512,
											"end": 14517,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14497,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 14497,
											"end": 14518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14497,
											"end": 14518,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14497,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14495,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14519,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 14477,
											"end": 14537,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14533,
											"end": 14534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14530,
											"end": 14531,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14523,
											"end": 14535,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14537,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 14477,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14427,
											"end": 14543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14427,
											"end": 14543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14603,
											"end": 14608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14641,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14619,
											"end": 14641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14619,
											"end": 14641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14650,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 14674,
											"end": 14679,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14650,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 14650,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14650,
											"end": 14680,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 14650,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14759,
											"end": 14765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14808,
											"end": 14810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14796,
											"end": 14805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 14794,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14806,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14779,
											"end": 14811,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14776,
											"end": 14895,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14776,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14776,
											"end": 14895,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14814,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14814,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 14814,
											"end": 14893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14814,
											"end": 14893,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 14814,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14776,
											"end": 14895,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14776,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14934,
											"end": 14935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 15012,
											"end": 15019,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15003,
											"end": 15009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 15001,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14988,
											"end": 15010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14959,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 14959,
											"end": 15020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14959,
											"end": 15020,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 14959,
											"end": 15020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 15020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 15020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14905,
											"end": 15030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15083,
											"end": 15087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 15103,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 15137,
											"end": 15157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15157,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15181,
											"end": 15182,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15178,
											"end": 15179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15174,
											"end": 15183,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15166,
											"end": 15183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15166,
											"end": 15183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15199,
											"end": 15203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15196,
											"end": 15207,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 15210,
											"end": 15228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15423,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 15243,
											"end": 15423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15368,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15288,
											"end": 15289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15281,
											"end": 15369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15392,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 15385,
											"end": 15386,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15378,
											"end": 15393,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15412,
											"end": 15416,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15409,
											"end": 15410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15402,
											"end": 15417,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NFT()": "7c0b8de2",
							"PurchaseToken(uint256)": "3048f512",
							"SaleTokenList(uint256)": "0c8cc569",
							"SalesToken(uint256,uint256)": "921e033b",
							"getSaleTokenList()": "4e4dc988",
							"tokenPrices(uint256)": "e5afe3e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_NFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NFT\",\"outputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"PurchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SaleTokenList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SalesToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"internalType\":\"struct Auction.TokenInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"keccak256\":\"0x15dc95ae35fb9ff931cb1e0c953673edf4fe34c554543077d0cd82b650aeb54b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11da2962fbf724c6af435b70a3de1dcfe73350c1a9e5524423fd9c6f06a87299\",\"dweb:/ipfs/QmQGpnZWNGts2u2ttd8yK1e3dqYbqXkHEu5LC6iXg9oXHf\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Auction.sol:Auction",
								"label": "NFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC721)1197"
							},
							{
								"astId": 16,
								"contract": "contracts/Auction.sol:Auction",
								"label": "tokenPrices",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 19,
								"contract": "contracts/Auction.sol:Auction",
								"label": "SaleTokenList",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(ERC721)1197": {
								"encoding": "inplace",
								"label": "contract ERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1722:1747  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1718  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1778:1811  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1774  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1851:1862  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1850  super.supportsInterface */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4094  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4064:4095  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3702:3707  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      tag_95\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3696  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      tag_99\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3745  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3727  isApprovedForAll */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4802  _msgSender() */\n      tag_107\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4800  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4790:4802  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_112\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2294  address owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2306:2313  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2305  _ownerOf */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2314  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2349:2350  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2337  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2397:2402  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2390:2402  return owner */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2045:2046  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2033  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2120:2125  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2103:2126  return _balances[owner] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_82\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4292  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5350  _msgSender() */\n      tag_138\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5348  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5338:5350  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2965  _baseURI */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      jump\t// in\n    tag_145:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4527:4532  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4534:4542  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4501:4543  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13337  _exists(tokenId) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13329:13336  tokenId */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13328  _exists */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13321:13337  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12673:12675  to */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12669  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12728:12735  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12724:12726  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12714:12721  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7612  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7614:7621  spender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7606  isApprovedForAll */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_168\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11459:11460  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11447  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11555  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11534:11538  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11540:11542  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11544:11551  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11553:11554  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11533  _beforeTokenTransfer */\n      tag_178\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11513:11555  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_47\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_173\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12284:12285  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12275:12279  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12316:12317  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12308  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12309:12311  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12356:12358  to */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12345:12352  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12393:12400  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12389:12391  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12383:12387  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12453  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_182\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12432:12436  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12438:12440  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12449  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12451:12452  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12431  _afterTokenTransfer */\n      tag_183\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12453  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6702:6817  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6768:6775  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6802:6809  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6787:6810  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6702:6817  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13085:13093  approved */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13066:13071  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13073:13081  operator */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13130:13138  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13123:13128  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13140:13148  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_193\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3370:3383  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_199\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_200\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_205:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_207\n      jumpi\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n    tag_207:\n      div\n      swap5\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_205\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_206:\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7120:7246  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7237:7238  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7225  _ownerOf(tokenId) */\n      tag_212\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7224  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7216  _ownerOf */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7225  _ownerOf(tokenId) */\n      jump\t// in\n    tag_212:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7201:7239  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7120:7246  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15472:15588  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16294:16409  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14109  to.isContract() */\n      tag_216\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14096  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_217\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14109  to.isContract() */\n      jump\t// in\n    tag_216:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14145:14147  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14178  _msgSender() */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14176  _msgSender */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14166:14178  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_196\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14260:14301  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14256  retval */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_215)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_218:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14728:14739  return true */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_215:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_237\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_238\n      jumpi\n      tag_239\n      tag_209\n      jump\t// in\n    tag_239:\n    tag_238:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_237:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_240\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_241\n      jumpi\n      tag_242\n      tag_209\n      jump\t// in\n    tag_242:\n    tag_241:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_240:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_243\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_244\n      jumpi\n      tag_245\n      tag_209\n      jump\t// in\n    tag_245:\n    tag_244:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_243:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_246\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_247\n      jumpi\n      tag_248\n      tag_209\n      jump\t// in\n    tag_248:\n    tag_247:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_246:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_249\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_209\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_249:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_252\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_253\n      jumpi\n      tag_254\n      tag_209\n      jump\t// in\n    tag_254:\n    tag_253:\n      div\n      swap3\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_252:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_255\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_255:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_217:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_257:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_258:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_259:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_260:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_261:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_260\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_262:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_261\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_258\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_263:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_264:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_264\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_265:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_266:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_267:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_336:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_268:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_269:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_341\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_265\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2329:2400   */\n      tag_342\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_266\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_343\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_267\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2499:2528   */\n      tag_344\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_268\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_27:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_346\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_269\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_270:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_271:\n        /* \"#utility.yul\":3016:3040   */\n      tag_349\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_270\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_350:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_272:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_352\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_271\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_30:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_355\n      tag_258\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3292:3411   */\n    tag_354:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_356\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_272\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_273:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_274:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_359\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_273\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_275:\n        /* \"#utility.yul\":3872:3896   */\n      tag_361\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_274\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_33:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_363\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_275\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_276:\n        /* \"#utility.yul\":4210:4234   */\n      tag_365\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_274\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_366:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_277:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_368\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_276\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_36:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_371\n      tag_258\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4503:4622   */\n    tag_370:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_372\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_277\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_373\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_272\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_40:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_376\n      tag_258\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5000:5119   */\n    tag_375:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_377\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_277\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_378\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_277\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_379\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_272\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_51:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_382\n      tag_258\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5591:5710   */\n    tag_381:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_383\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_277\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_278:\n        /* \"#utility.yul\":5937:5961   */\n      tag_385\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_270\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_54:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_387\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_278\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_279:\n        /* \"#utility.yul\":6272:6293   */\n      tag_389\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_263\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_390:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_280:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_392\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_279\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_60:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_395\n      tag_258\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6553:6672   */\n    tag_394:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_396\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_277\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_397\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_280\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_281:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_282:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_203:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_283:\n        /* \"#utility.yul\":7452:7479   */\n      tag_402\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_268\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_404\n      tag_203\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7525:7613   */\n    tag_403:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_284:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_406\n      tag_257\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_407\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_283\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_285:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_410\n      tag_203\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7928:7984   */\n    tag_409:\n        /* \"#utility.yul\":8002:8031   */\n      tag_411\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_268\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_286:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_287:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_414\n        /* \"#utility.yul\":8374:8422   */\n      tag_415\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_285\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8358:8423   */\n      tag_284\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_417\n      tag_282\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8498:8610   */\n    tag_416:\n        /* \"#utility.yul\":8619:8673   */\n      tag_418\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_286\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_288:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_421\n      tag_281\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8769:8891   */\n    tag_420:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_422\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_287\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_64:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_425\n      tag_258\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9178:9298   */\n    tag_424:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_426\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_277\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_427\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_277\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_428\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_430\n      tag_259\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9765:9882   */\n    tag_429:\n        /* \"#utility.yul\":9906:9968   */\n      tag_431\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_288\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_72:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_434\n      tag_258\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10084:10203   */\n    tag_433:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_435\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_277\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_436\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_277\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_289:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_82:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_439:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_441\n      tag_289\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10887:10971   */\n    tag_440:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_290:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_291:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_444\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_266\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_445\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_290\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_94:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_447\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_291\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_292:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_293:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_450\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_266\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_451\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_292\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_102:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_453\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_293\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_294:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_295:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_456\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_266\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_457\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_294\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_111:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_459\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_295\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14266   */\n    tag_296:\n        /* \"#utility.yul\":14232:14258   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14259   */\n      mstore\n        /* \"#utility.yul\":14092:14266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14638   */\n    tag_297:\n        /* \"#utility.yul\":14414:14417   */\n      0x00\n        /* \"#utility.yul\":14435:14502   */\n      tag_462\n        /* \"#utility.yul\":14499:14501   */\n      0x18\n        /* \"#utility.yul\":14494:14497   */\n      dup4\n        /* \"#utility.yul\":14435:14502   */\n      tag_266\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14428:14502   */\n      swap2\n      pop\n        /* \"#utility.yul\":14511:14604   */\n      tag_463\n        /* \"#utility.yul\":14600:14603   */\n      dup3\n        /* \"#utility.yul\":14511:14604   */\n      tag_296\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14624:14627   */\n      dup3\n        /* \"#utility.yul\":14620:14632   */\n      add\n        /* \"#utility.yul\":14613:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15063   */\n    tag_121:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14906   */\n      dup2\n        /* \"#utility.yul\":14891:14895   */\n      dup2\n        /* \"#utility.yul\":14887:14907   */\n      sub\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14872:14881   */\n      dup4\n        /* \"#utility.yul\":14868:14885   */\n      add\n        /* \"#utility.yul\":14861:14908   */\n      mstore\n        /* \"#utility.yul\":14925:15056   */\n      tag_465\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":14925:15056   */\n      tag_297\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14917:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14644:15063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15069:15297   */\n    tag_298:\n        /* \"#utility.yul\":15209:15243   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15197:15203   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      add\n        /* \"#utility.yul\":15186:15244   */\n      mstore\n        /* \"#utility.yul\":15278:15289   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15276   */\n      add\n        /* \"#utility.yul\":15254:15290   */\n      mstore\n        /* \"#utility.yul\":15069:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_299:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_468\n        /* \"#utility.yul\":15530:15532   */\n      0x29\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_266\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_469\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_298\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15660:15662   */\n      0x40\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_125:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_471\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_299\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16248   */\n    tag_300:\n        /* \"#utility.yul\":16202:16213   */\n      0x00\n        /* \"#utility.yul\":16239:16242   */\n      dup2\n        /* \"#utility.yul\":16224:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16100:16248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16254:16644   */\n    tag_301:\n        /* \"#utility.yul\":16360:16363   */\n      0x00\n        /* \"#utility.yul\":16388:16427   */\n      tag_474\n        /* \"#utility.yul\":16421:16426   */\n      dup3\n        /* \"#utility.yul\":16388:16427   */\n      tag_265\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16443:16532   */\n      tag_475\n        /* \"#utility.yul\":16525:16531   */\n      dup2\n        /* \"#utility.yul\":16520:16523   */\n      dup6\n        /* \"#utility.yul\":16443:16532   */\n      tag_300\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16436:16532   */\n      swap4\n      pop\n        /* \"#utility.yul\":16541:16606   */\n      tag_476\n        /* \"#utility.yul\":16599:16605   */\n      dup2\n        /* \"#utility.yul\":16594:16597   */\n      dup6\n        /* \"#utility.yul\":16587:16591   */\n      0x20\n        /* \"#utility.yul\":16580:16585   */\n      dup7\n        /* \"#utility.yul\":16576:16592   */\n      add\n        /* \"#utility.yul\":16541:16606   */\n      tag_267\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16631:16637   */\n      dup1\n        /* \"#utility.yul\":16626:16629   */\n      dup5\n        /* \"#utility.yul\":16622:16638   */\n      add\n        /* \"#utility.yul\":16615:16638   */\n      swap2\n      pop\n        /* \"#utility.yul\":16364:16644   */\n      pop\n        /* \"#utility.yul\":16254:16644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16650:17085   */\n    tag_152:\n        /* \"#utility.yul\":16830:16833   */\n      0x00\n        /* \"#utility.yul\":16852:16947   */\n      tag_478\n        /* \"#utility.yul\":16943:16946   */\n      dup3\n        /* \"#utility.yul\":16934:16940   */\n      dup6\n        /* \"#utility.yul\":16852:16947   */\n      tag_301\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16845:16947   */\n      swap2\n      pop\n        /* \"#utility.yul\":16964:17059   */\n      tag_479\n        /* \"#utility.yul\":17055:17058   */\n      dup3\n        /* \"#utility.yul\":17046:17052   */\n      dup5\n        /* \"#utility.yul\":16964:17059   */\n      tag_301\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16957:17059   */\n      swap2\n      pop\n        /* \"#utility.yul\":17076:17079   */\n      dup2\n        /* \"#utility.yul\":17069:17079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16650:17085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17091:17315   */\n    tag_302:\n        /* \"#utility.yul\":17231:17265   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17219:17225   */\n      dup3\n        /* \"#utility.yul\":17215:17229   */\n      add\n        /* \"#utility.yul\":17208:17266   */\n      mstore\n        /* \"#utility.yul\":17300:17307   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17295:17297   */\n      0x20\n        /* \"#utility.yul\":17287:17293   */\n      dup3\n        /* \"#utility.yul\":17283:17298   */\n      add\n        /* \"#utility.yul\":17276:17308   */\n      mstore\n        /* \"#utility.yul\":17091:17315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17321:17687   */\n    tag_303:\n        /* \"#utility.yul\":17463:17466   */\n      0x00\n        /* \"#utility.yul\":17484:17551   */\n      tag_482\n        /* \"#utility.yul\":17548:17550   */\n      0x25\n        /* \"#utility.yul\":17543:17546   */\n      dup4\n        /* \"#utility.yul\":17484:17551   */\n      tag_266\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17477:17551   */\n      swap2\n      pop\n        /* \"#utility.yul\":17560:17653   */\n      tag_483\n        /* \"#utility.yul\":17649:17652   */\n      dup3\n        /* \"#utility.yul\":17560:17653   */\n      tag_302\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17678:17680   */\n      0x40\n        /* \"#utility.yul\":17673:17676   */\n      dup3\n        /* \"#utility.yul\":17669:17681   */\n      add\n        /* \"#utility.yul\":17662:17681   */\n      swap1\n      pop\n        /* \"#utility.yul\":17321:17687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17693:18112   */\n    tag_173:\n        /* \"#utility.yul\":17859:17863   */\n      0x00\n        /* \"#utility.yul\":17897:17899   */\n      0x20\n        /* \"#utility.yul\":17886:17895   */\n      dup3\n        /* \"#utility.yul\":17882:17900   */\n      add\n        /* \"#utility.yul\":17874:17900   */\n      swap1\n      pop\n        /* \"#utility.yul\":17946:17955   */\n      dup2\n        /* \"#utility.yul\":17940:17944   */\n      dup2\n        /* \"#utility.yul\":17936:17956   */\n      sub\n        /* \"#utility.yul\":17932:17933   */\n      0x00\n        /* \"#utility.yul\":17921:17930   */\n      dup4\n        /* \"#utility.yul\":17917:17934   */\n      add\n        /* \"#utility.yul\":17910:17957   */\n      mstore\n        /* \"#utility.yul\":17974:18105   */\n      tag_485\n        /* \"#utility.yul\":18100:18104   */\n      dup2\n        /* \"#utility.yul\":17974:18105   */\n      tag_303\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17966:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":17693:18112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18341   */\n    tag_304:\n        /* \"#utility.yul\":18258:18292   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18293   */\n      mstore\n        /* \"#utility.yul\":18327:18333   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18322:18324   */\n      0x20\n        /* \"#utility.yul\":18314:18320   */\n      dup3\n        /* \"#utility.yul\":18310:18325   */\n      add\n        /* \"#utility.yul\":18303:18334   */\n      mstore\n        /* \"#utility.yul\":18118:18341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18347:18713   */\n    tag_305:\n        /* \"#utility.yul\":18489:18492   */\n      0x00\n        /* \"#utility.yul\":18510:18577   */\n      tag_488\n        /* \"#utility.yul\":18574:18576   */\n      0x24\n        /* \"#utility.yul\":18569:18572   */\n      dup4\n        /* \"#utility.yul\":18510:18577   */\n      tag_266\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18503:18577   */\n      swap2\n      pop\n        /* \"#utility.yul\":18586:18679   */\n      tag_489\n        /* \"#utility.yul\":18675:18678   */\n      dup3\n        /* \"#utility.yul\":18586:18679   */\n      tag_304\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18704:18706   */\n      0x40\n        /* \"#utility.yul\":18699:18702   */\n      dup3\n        /* \"#utility.yul\":18695:18707   */\n      add\n        /* \"#utility.yul\":18688:18707   */\n      swap1\n      pop\n        /* \"#utility.yul\":18347:18713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18719:19138   */\n    tag_176:\n        /* \"#utility.yul\":18885:18889   */\n      0x00\n        /* \"#utility.yul\":18923:18925   */\n      0x20\n        /* \"#utility.yul\":18912:18921   */\n      dup3\n        /* \"#utility.yul\":18908:18926   */\n      add\n        /* \"#utility.yul\":18900:18926   */\n      swap1\n      pop\n        /* \"#utility.yul\":18972:18981   */\n      dup2\n        /* \"#utility.yul\":18966:18970   */\n      dup2\n        /* \"#utility.yul\":18962:18982   */\n      sub\n        /* \"#utility.yul\":18958:18959   */\n      0x00\n        /* \"#utility.yul\":18947:18956   */\n      dup4\n        /* \"#utility.yul\":18943:18960   */\n      add\n        /* \"#utility.yul\":18936:18983   */\n      mstore\n        /* \"#utility.yul\":19000:19131   */\n      tag_491\n        /* \"#utility.yul\":19126:19130   */\n      dup2\n        /* \"#utility.yul\":19000:19131   */\n      tag_305\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18992:19131   */\n      swap1\n      pop\n        /* \"#utility.yul\":18719:19138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19144:19319   */\n    tag_306:\n        /* \"#utility.yul\":19284:19311   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19280:19281   */\n      0x00\n        /* \"#utility.yul\":19272:19278   */\n      dup3\n        /* \"#utility.yul\":19268:19282   */\n      add\n        /* \"#utility.yul\":19261:19312   */\n      mstore\n        /* \"#utility.yul\":19144:19319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19325:19691   */\n    tag_307:\n        /* \"#utility.yul\":19467:19470   */\n      0x00\n        /* \"#utility.yul\":19488:19555   */\n      tag_494\n        /* \"#utility.yul\":19552:19554   */\n      0x19\n        /* \"#utility.yul\":19547:19550   */\n      dup4\n        /* \"#utility.yul\":19488:19555   */\n      tag_266\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19481:19555   */\n      swap2\n      pop\n        /* \"#utility.yul\":19564:19657   */\n      tag_495\n        /* \"#utility.yul\":19653:19656   */\n      dup3\n        /* \"#utility.yul\":19564:19657   */\n      tag_306\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19682:19684   */\n      0x20\n        /* \"#utility.yul\":19677:19680   */\n      dup3\n        /* \"#utility.yul\":19673:19685   */\n      add\n        /* \"#utility.yul\":19666:19685   */\n      swap1\n      pop\n        /* \"#utility.yul\":19325:19691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19697:20116   */\n    tag_188:\n        /* \"#utility.yul\":19863:19867   */\n      0x00\n        /* \"#utility.yul\":19901:19903   */\n      0x20\n        /* \"#utility.yul\":19890:19899   */\n      dup3\n        /* \"#utility.yul\":19886:19904   */\n      add\n        /* \"#utility.yul\":19878:19904   */\n      swap1\n      pop\n        /* \"#utility.yul\":19950:19959   */\n      dup2\n        /* \"#utility.yul\":19944:19948   */\n      dup2\n        /* \"#utility.yul\":19940:19960   */\n      sub\n        /* \"#utility.yul\":19936:19937   */\n      0x00\n        /* \"#utility.yul\":19925:19934   */\n      dup4\n        /* \"#utility.yul\":19921:19938   */\n      add\n        /* \"#utility.yul\":19914:19961   */\n      mstore\n        /* \"#utility.yul\":19978:20109   */\n      tag_497\n        /* \"#utility.yul\":20104:20108   */\n      dup2\n        /* \"#utility.yul\":19978:20109   */\n      tag_307\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19970:20109   */\n      swap1\n      pop\n        /* \"#utility.yul\":19697:20116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20122:20359   */\n    tag_308:\n        /* \"#utility.yul\":20262:20296   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20258:20259   */\n      0x00\n        /* \"#utility.yul\":20250:20256   */\n      dup3\n        /* \"#utility.yul\":20246:20260   */\n      add\n        /* \"#utility.yul\":20239:20297   */\n      mstore\n        /* \"#utility.yul\":20331:20351   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20326:20328   */\n      0x20\n        /* \"#utility.yul\":20318:20324   */\n      dup3\n        /* \"#utility.yul\":20314:20329   */\n      add\n        /* \"#utility.yul\":20307:20352   */\n      mstore\n        /* \"#utility.yul\":20122:20359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20365:20731   */\n    tag_309:\n        /* \"#utility.yul\":20507:20510   */\n      0x00\n        /* \"#utility.yul\":20528:20595   */\n      tag_500\n        /* \"#utility.yul\":20592:20594   */\n      0x32\n        /* \"#utility.yul\":20587:20590   */\n      dup4\n        /* \"#utility.yul\":20528:20595   */\n      tag_266\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":20521:20595   */\n      swap2\n      pop\n        /* \"#utility.yul\":20604:20697   */\n      tag_501\n        /* \"#utility.yul\":20693:20696   */\n      dup3\n        /* \"#utility.yul\":20604:20697   */\n      tag_308\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20722:20724   */\n      0x40\n        /* \"#utility.yul\":20717:20720   */\n      dup3\n        /* \"#utility.yul\":20713:20725   */\n      add\n        /* \"#utility.yul\":20706:20725   */\n      swap1\n      pop\n        /* \"#utility.yul\":20365:20731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20737:21156   */\n    tag_196:\n        /* \"#utility.yul\":20903:20907   */\n      0x00\n        /* \"#utility.yul\":20941:20943   */\n      0x20\n        /* \"#utility.yul\":20930:20939   */\n      dup3\n        /* \"#utility.yul\":20926:20944   */\n      add\n        /* \"#utility.yul\":20918:20944   */\n      swap1\n      pop\n        /* \"#utility.yul\":20990:20999   */\n      dup2\n        /* \"#utility.yul\":20984:20988   */\n      dup2\n        /* \"#utility.yul\":20980:21000   */\n      sub\n        /* \"#utility.yul\":20976:20977   */\n      0x00\n        /* \"#utility.yul\":20965:20974   */\n      dup4\n        /* \"#utility.yul\":20961:20978   */\n      add\n        /* \"#utility.yul\":20954:21001   */\n      mstore\n        /* \"#utility.yul\":21018:21149   */\n      tag_503\n        /* \"#utility.yul\":21144:21148   */\n      dup2\n        /* \"#utility.yul\":21018:21149   */\n      tag_309\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":21010:21149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20737:21156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21162:21342   */\n    tag_209:\n        /* \"#utility.yul\":21210:21287   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21207:21208   */\n      0x00\n        /* \"#utility.yul\":21200:21288   */\n      mstore\n        /* \"#utility.yul\":21307:21311   */\n      0x12\n        /* \"#utility.yul\":21304:21305   */\n      0x04\n        /* \"#utility.yul\":21297:21312   */\n      mstore\n        /* \"#utility.yul\":21331:21335   */\n      0x24\n        /* \"#utility.yul\":21328:21329   */\n      0x00\n        /* \"#utility.yul\":21321:21336   */\n      revert\n        /* \"#utility.yul\":21348:21446   */\n    tag_310:\n        /* \"#utility.yul\":21399:21405   */\n      0x00\n        /* \"#utility.yul\":21433:21438   */\n      dup2\n        /* \"#utility.yul\":21427:21439   */\n      mload\n        /* \"#utility.yul\":21417:21439   */\n      swap1\n      pop\n        /* \"#utility.yul\":21348:21446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21452:21620   */\n    tag_311:\n        /* \"#utility.yul\":21535:21546   */\n      0x00\n        /* \"#utility.yul\":21569:21575   */\n      dup3\n        /* \"#utility.yul\":21564:21567   */\n      dup3\n        /* \"#utility.yul\":21557:21576   */\n      mstore\n        /* \"#utility.yul\":21609:21613   */\n      0x20\n        /* \"#utility.yul\":21604:21607   */\n      dup3\n        /* \"#utility.yul\":21600:21614   */\n      add\n        /* \"#utility.yul\":21585:21614   */\n      swap1\n      pop\n        /* \"#utility.yul\":21452:21620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21626:21999   */\n    tag_312:\n        /* \"#utility.yul\":21712:21715   */\n      0x00\n        /* \"#utility.yul\":21740:21778   */\n      tag_508\n        /* \"#utility.yul\":21772:21777   */\n      dup3\n        /* \"#utility.yul\":21740:21778   */\n      tag_310\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21794:21864   */\n      tag_509\n        /* \"#utility.yul\":21857:21863   */\n      dup2\n        /* \"#utility.yul\":21852:21855   */\n      dup6\n        /* \"#utility.yul\":21794:21864   */\n      tag_311\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21787:21864   */\n      swap4\n      pop\n        /* \"#utility.yul\":21873:21938   */\n      tag_510\n        /* \"#utility.yul\":21931:21937   */\n      dup2\n        /* \"#utility.yul\":21926:21929   */\n      dup6\n        /* \"#utility.yul\":21919:21923   */\n      0x20\n        /* \"#utility.yul\":21912:21917   */\n      dup7\n        /* \"#utility.yul\":21908:21924   */\n      add\n        /* \"#utility.yul\":21873:21938   */\n      tag_267\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21963:21992   */\n      tag_511\n        /* \"#utility.yul\":21985:21991   */\n      dup2\n        /* \"#utility.yul\":21963:21992   */\n      tag_268\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21958:21961   */\n      dup5\n        /* \"#utility.yul\":21954:21993   */\n      add\n        /* \"#utility.yul\":21947:21993   */\n      swap2\n      pop\n        /* \"#utility.yul\":21716:21999   */\n      pop\n        /* \"#utility.yul\":21626:21999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22005:22645   */\n    tag_221:\n        /* \"#utility.yul\":22200:22204   */\n      0x00\n        /* \"#utility.yul\":22238:22241   */\n      0x80\n        /* \"#utility.yul\":22227:22236   */\n      dup3\n        /* \"#utility.yul\":22223:22242   */\n      add\n        /* \"#utility.yul\":22215:22242   */\n      swap1\n      pop\n        /* \"#utility.yul\":22252:22323   */\n      tag_513\n        /* \"#utility.yul\":22320:22321   */\n      0x00\n        /* \"#utility.yul\":22309:22318   */\n      dup4\n        /* \"#utility.yul\":22305:22322   */\n      add\n        /* \"#utility.yul\":22296:22302   */\n      dup8\n        /* \"#utility.yul\":22252:22323   */\n      tag_275\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22333:22405   */\n      tag_514\n        /* \"#utility.yul\":22401:22403   */\n      0x20\n        /* \"#utility.yul\":22390:22399   */\n      dup4\n        /* \"#utility.yul\":22386:22404   */\n      add\n        /* \"#utility.yul\":22377:22383   */\n      dup7\n        /* \"#utility.yul\":22333:22405   */\n      tag_275\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22415:22487   */\n      tag_515\n        /* \"#utility.yul\":22483:22485   */\n      0x40\n        /* \"#utility.yul\":22472:22481   */\n      dup4\n        /* \"#utility.yul\":22468:22486   */\n      add\n        /* \"#utility.yul\":22459:22465   */\n      dup6\n        /* \"#utility.yul\":22415:22487   */\n      tag_278\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22534:22543   */\n      dup2\n        /* \"#utility.yul\":22528:22532   */\n      dup2\n        /* \"#utility.yul\":22524:22544   */\n      sub\n        /* \"#utility.yul\":22519:22521   */\n      0x60\n        /* \"#utility.yul\":22508:22517   */\n      dup4\n        /* \"#utility.yul\":22504:22522   */\n      add\n        /* \"#utility.yul\":22497:22545   */\n      mstore\n        /* \"#utility.yul\":22562:22638   */\n      tag_516\n        /* \"#utility.yul\":22633:22637   */\n      dup2\n        /* \"#utility.yul\":22624:22630   */\n      dup5\n        /* \"#utility.yul\":22562:22638   */\n      tag_312\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22554:22638   */\n      swap1\n      pop\n        /* \"#utility.yul\":22005:22645   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22651:22792   */\n    tag_313:\n        /* \"#utility.yul\":22707:22712   */\n      0x00\n        /* \"#utility.yul\":22738:22744   */\n      dup2\n        /* \"#utility.yul\":22732:22745   */\n      mload\n        /* \"#utility.yul\":22723:22745   */\n      swap1\n      pop\n        /* \"#utility.yul\":22754:22786   */\n      tag_518\n        /* \"#utility.yul\":22780:22785   */\n      dup2\n        /* \"#utility.yul\":22754:22786   */\n      tag_261\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22651:22792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22798:23147   */\n    tag_224:\n        /* \"#utility.yul\":22867:22873   */\n      0x00\n        /* \"#utility.yul\":22916:22918   */\n      0x20\n        /* \"#utility.yul\":22904:22913   */\n      dup3\n        /* \"#utility.yul\":22895:22902   */\n      dup5\n        /* \"#utility.yul\":22891:22914   */\n      sub\n        /* \"#utility.yul\":22887:22919   */\n      slt\n        /* \"#utility.yul\":22884:23003   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":22922:23001   */\n      tag_521\n      tag_258\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":22884:23003   */\n    tag_520:\n        /* \"#utility.yul\":23042:23043   */\n      0x00\n        /* \"#utility.yul\":23067:23130   */\n      tag_522\n        /* \"#utility.yul\":23122:23129   */\n      dup5\n        /* \"#utility.yul\":23113:23119   */\n      dup3\n        /* \"#utility.yul\":23102:23111   */\n      dup6\n        /* \"#utility.yul\":23098:23120   */\n      add\n        /* \"#utility.yul\":23067:23130   */\n      tag_313\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23057:23130   */\n      swap2\n      pop\n        /* \"#utility.yul\":23013:23140   */\n      pop\n        /* \"#utility.yul\":22798:23147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca66bc9de58e58ecd28e60b3700fbdbcdaa8e7f3084cc823f69a0b24db8b650464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:12"
															},
															"nodeType": "YulIf",
															"src": "2801:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:12",
														"type": ""
													}
												],
												"src": "2677:853:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:12",
														"type": ""
													}
												],
												"src": "3536:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:12"
															},
															"nodeType": "YulIf",
															"src": "3966:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:12"
															},
															"nodeType": "YulIf",
															"src": "4057:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:12",
														"type": ""
													}
												],
												"src": "3827:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:12",
														"type": ""
													}
												],
												"src": "4153:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:12",
														"type": ""
													}
												],
												"src": "4300:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:12",
														"type": ""
													}
												],
												"src": "4399:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:12",
														"type": ""
													}
												],
												"src": "4512:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:12",
														"type": ""
													}
												],
												"src": "4911:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:12",
														"type": ""
													}
												],
												"src": "4994:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:12",
														"type": ""
													}
												],
												"src": "5060:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:12",
														"type": ""
													}
												],
												"src": "5208:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:12",
														"type": ""
													}
												],
												"src": "5289:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:12",
														"type": ""
													}
												],
												"src": "5564:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"src": "5643:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:12",
																"statements": []
															},
															"src": "5898:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:12",
														"type": ""
													}
												],
												"src": "5838:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:12"
															},
															"nodeType": "YulIf",
															"src": "6120:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:12",
														"type": ""
													}
												],
												"src": "6030:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:12",
														"type": ""
													}
												],
												"src": "6579:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:12",
														"type": ""
													}
												],
												"src": "6702:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:12",
														"type": ""
													}
												],
												"src": "6876:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:12"
															},
															"nodeType": "YulIf",
															"src": "7381:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:12",
																					"statements": []
																				},
																				"src": "7867:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:12",
														"type": ""
													}
												],
												"src": "7176:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620026dd380380620026dd8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61212080620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220ca66bc9de58e58ecd28e60b3700fbdbcdaa8e7f3084cc823f69a0b24db8b650464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DD CODESIZE SUB DUP1 PUSH3 0x26DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2120 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH7 0xBC9DE58E58ECD2 DUP15 PUSH1 0xB3 PUSH17 0xFBDBCDAA8E7F3084CC823F69A0B24DB8B PUSH6 0x464736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16377;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;628:16377:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1181": {
									"entryPoint": 4485,
									"id": 1181,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1047": {
									"entryPoint": 2573,
									"id": 1047,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_484": {
									"entryPoint": 4185,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1168": {
									"entryPoint": 4479,
									"id": 1168,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1155": {
									"entryPoint": 4491,
									"id": 1155,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_716": {
									"entryPoint": 4414,
									"id": 716,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_750": {
									"entryPoint": 2758,
									"id": 750,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1700": {
									"entryPoint": 2565,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_698": {
									"entryPoint": 3668,
									"id": 698,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_1093": {
									"entryPoint": 2490,
									"id": 1093,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_685": {
									"entryPoint": 4093,
									"id": 685,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1079": {
									"entryPoint": 3729,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1023": {
									"entryPoint": 2907,
									"id": 1023,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_527": {
									"entryPoint": 1142,
									"id": 527,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_388": {
									"entryPoint": 1683,
									"id": 388,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_545": {
									"entryPoint": 1072,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_580": {
									"entryPoint": 2236,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1376": {
									"entryPoint": 5221,
									"id": 1376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2678": {
									"entryPoint": 4882,
									"id": 2678,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_426": {
									"entryPoint": 926,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_416": {
									"entryPoint": 1549,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_626": {
									"entryPoint": 1517,
									"id": 626,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_656": {
									"entryPoint": 2034,
									"id": 656,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_562": {
									"entryPoint": 2012,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1962": {
									"entryPoint": 2384,
									"id": 1962,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_364": {
									"entryPoint": 700,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_436": {
									"entryPoint": 1866,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1769": {
									"entryPoint": 4208,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_475": {
									"entryPoint": 2132,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_607": {
									"entryPoint": 1421,
									"id": 607,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23150:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:12"
															},
															"nodeType": "YulIf",
															"src": "5000:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:12",
														"type": ""
													}
												],
												"src": "4890:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:12"
															},
															"nodeType": "YulIf",
															"src": "5591:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:12",
														"type": ""
													}
												],
												"src": "5515:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:12",
														"type": ""
													}
												],
												"src": "5850:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:12",
														"type": ""
													}
												],
												"src": "5974:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:12"
															},
															"nodeType": "YulIf",
															"src": "6252:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:12",
														"type": ""
													}
												],
												"src": "6202:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:12",
														"type": ""
													}
												],
												"src": "6324:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:12"
															},
															"nodeType": "YulIf",
															"src": "6553:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:12",
														"type": ""
													}
												],
												"src": "6463:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:12"
															},
															"nodeType": "YulIf",
															"src": "7525:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:12",
														"type": ""
													}
												],
												"src": "7369:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:12",
														"type": ""
													}
												],
												"src": "7656:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:12"
															},
															"nodeType": "YulIf",
															"src": "7928:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:12",
														"type": ""
													}
												],
												"src": "7791:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:12",
														"type": ""
													}
												],
												"src": "8104:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:12"
															},
															"nodeType": "YulIf",
															"src": "8498:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:12",
														"type": ""
													}
												],
												"src": "8256:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:12"
															},
															"nodeType": "YulIf",
															"src": "8769:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:12",
														"type": ""
													}
												],
												"src": "8698:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:12"
															},
															"nodeType": "YulIf",
															"src": "9178:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:12",
														"type": ""
													}
												],
												"src": "9042:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:12"
															},
															"nodeType": "YulIf",
															"src": "10084:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:12",
														"type": ""
													}
												],
												"src": "9991:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:12"
															},
															"nodeType": "YulIf",
															"src": "10796:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:12"
															},
															"nodeType": "YulIf",
															"src": "10887:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:12",
														"type": ""
													}
												],
												"src": "10657:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:12",
														"type": ""
													}
												],
												"src": "10983:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11355:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11365:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11550:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11343:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11351:3:12",
														"type": ""
													}
												],
												"src": "11209:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11752:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11762:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11798:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11732:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11747:4:12",
														"type": ""
													}
												],
												"src": "11581:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12112:142:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:12"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:12",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12104:6:12",
														"type": ""
													}
												],
												"src": "12006:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:12",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12601:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12394:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12402:3:12",
														"type": ""
													}
												],
												"src": "12260:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12803:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12813:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12905:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12783:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12798:4:12",
														"type": ""
													}
												],
												"src": "12632:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13163:126:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:12"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:12",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:12"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:12",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13242:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13155:6:12",
														"type": ""
													}
												],
												"src": "13057:232:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13441:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13451:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13429:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13437:3:12",
														"type": ""
													}
												],
												"src": "13295:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13848:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13856:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13940:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13818:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13833:4:12",
														"type": ""
													}
												],
												"src": "13667:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14232:26:12",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14209:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14190:6:12",
														"type": ""
													}
												],
												"src": "14092:174:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14418:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14428:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14435:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14435:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14428:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14600:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "14511:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14511:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14613:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14624:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14406:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14414:3:12",
														"type": ""
													}
												],
												"src": "14272:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14825:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14891:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14917:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14925:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14795:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14810:4:12",
														"type": ""
													}
												],
												"src": "14644:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15175:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15197:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:12"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15209:34:12",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15186:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15261:15:12"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15278:11:12",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15254:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15254:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15167:6:12",
														"type": ""
													}
												],
												"src": "15069:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15449:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15459:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15466:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15542:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15644:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15651:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15437:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15445:3:12",
														"type": ""
													}
												],
												"src": "15303:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15856:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15948:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15956:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15826:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15841:4:12",
														"type": ""
													}
												],
												"src": "15675:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16214:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16224:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16239:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16224:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16186:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16191:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16202:11:12",
														"type": ""
													}
												],
												"src": "16100:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16364:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16374:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16421:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16388:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16378:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16436:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16520:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16525:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16443:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16580:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16587:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16576:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16594:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16599:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16541:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16541:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16615:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16626:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16631:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16622:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16622:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16345:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16352:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16360:3:12",
														"type": ""
													}
												],
												"src": "16254:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16834:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16845:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16934:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16943:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16852:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16852:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16957:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17046:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17055:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16964:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16964:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16957:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17069:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17076:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16805:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16811:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16819:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16830:3:12",
														"type": ""
													}
												],
												"src": "16650:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17197:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17219:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17227:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17215:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17215:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17231:34:12",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17208:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17208:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17208:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17287:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17295:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17283:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17283:15:12"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17300:7:12",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17276:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17276:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17276:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17189:6:12",
														"type": ""
													}
												],
												"src": "17091:224:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17467:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17477:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17543:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17548:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17484:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17484:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17649:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "17560:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17560:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17662:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17673:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17678:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17669:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17669:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17662:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17455:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17463:3:12",
														"type": ""
													}
												],
												"src": "17321:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17864:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17874:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17886:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17897:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17882:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17921:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17932:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17917:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17940:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17946:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17936:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17936:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17910:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17910:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17910:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17966:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18100:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17974:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17974:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17844:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17859:4:12",
														"type": ""
													}
												],
												"src": "17693:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18224:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18258:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18235:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18235:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18314:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18310:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18310:15:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18327:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18303:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18303:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18303:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18216:6:12",
														"type": ""
													}
												],
												"src": "18118:223:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18493:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18503:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18569:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18574:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18510:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18510:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18503:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18675:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "18586:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18586:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18586:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18688:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18699:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18704:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18695:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18695:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18688:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18481:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18489:3:12",
														"type": ""
													}
												],
												"src": "18347:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18890:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18900:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18912:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18923:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18908:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18908:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18900:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18947:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18958:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18943:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18966:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18972:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18962:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18962:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18936:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18936:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18992:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19126:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19000:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19000:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18992:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18870:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18885:4:12",
														"type": ""
													}
												],
												"src": "18719:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19250:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19272:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19280:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19268:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19268:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19284:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19261:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19261:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19261:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19242:6:12",
														"type": ""
													}
												],
												"src": "19144:175:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19471:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19481:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19547:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19552:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19488:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19488:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19481:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19653:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "19564:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19564:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19564:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19666:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19677:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19682:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19673:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19666:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19459:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19467:3:12",
														"type": ""
													}
												],
												"src": "19325:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19868:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19878:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19890:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19901:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19886:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19878:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19925:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19936:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19921:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19921:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19944:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19950:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19940:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19940:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19914:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19914:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19914:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19970:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20104:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19978:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19978:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19970:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19848:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19863:4:12",
														"type": ""
													}
												],
												"src": "19697:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20228:131:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20250:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20258:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20246:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20262:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20239:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20239:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20239:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20318:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20326:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20314:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20314:15:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20331:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20307:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20307:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20307:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20220:6:12",
														"type": ""
													}
												],
												"src": "20122:237:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20511:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20521:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20587:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20592:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20528:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20528:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20521:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20693:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "20604:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20604:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20706:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20717:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20722:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20713:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20713:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20706:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20499:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20507:3:12",
														"type": ""
													}
												],
												"src": "20365:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20908:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20918:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20930:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20941:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20926:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20926:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20918:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20965:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20976:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20961:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20961:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20984:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20990:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20980:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20980:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20954:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20954:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21010:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21144:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21018:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21018:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21010:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20888:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20903:4:12",
														"type": ""
													}
												],
												"src": "20737:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21190:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21207:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21210:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21200:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21200:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21200:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21304:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21307:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21297:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21297:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21297:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21328:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21331:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21321:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21321:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21321:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21162:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21406:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21417:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21433:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21427:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21427:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21417:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21389:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21399:6:12",
														"type": ""
													}
												],
												"src": "21348:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21547:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21564:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21569:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21557:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21557:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21557:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21585:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21604:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21609:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21585:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21519:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21524:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21535:11:12",
														"type": ""
													}
												],
												"src": "21452:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21716:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21726:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21772:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21740:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21740:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21730:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21787:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21852:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21857:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21794:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21787:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21912:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21919:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21908:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21926:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21931:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21873:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21873:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21873:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21947:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21958:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21985:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "21963:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21963:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21954:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21954:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21947:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21697:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21704:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21712:3:12",
														"type": ""
													}
												],
												"src": "21626:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22205:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22215:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22227:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22238:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22223:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22223:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22215:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22296:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22309:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22320:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22305:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22305:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22252:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22252:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22377:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22390:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22401:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22386:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22386:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22333:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22333:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22333:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22459:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22472:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22483:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22468:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22468:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22415:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22415:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22415:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22508:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22519:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22504:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22528:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22534:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22524:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22524:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22497:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22497:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22554:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22624:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22633:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22562:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22562:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22554:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22153:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22165:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22173:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22181:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22189:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22200:4:12",
														"type": ""
													}
												],
												"src": "22005:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22713:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22723:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "22738:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22732:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22732:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22723:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22780:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "22754:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22754:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22754:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "22691:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22699:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22707:5:12",
														"type": ""
													}
												],
												"src": "22651:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22874:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22920:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "22922:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22922:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22922:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22895:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22904:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22916:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22887:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22887:32:12"
															},
															"nodeType": "YulIf",
															"src": "22884:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "23013:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23028:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23042:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23032:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23057:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "23102:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "23113:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23098:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23098:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23122:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "23067:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23067:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23057:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22844:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22855:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22867:6:12",
														"type": ""
													}
												],
												"src": "22798:349:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220ca66bc9de58e58ecd28e60b3700fbdbcdaa8e7f3084cc823f69a0b24db8b650464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH7 0xBC9DE58E58ECD2 DUP15 PUSH1 0xB3 PUSH17 0xFBDBCDAA8E7F3084CC823F69A0B24DB8B PUSH6 0x464736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:1:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12572:171:1:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:7:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:1:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:10:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:5:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:175::-;19284:27;19280:1;19272:6;19268:14;19261:51;19144:175;:::o;19325:366::-;19467:3;19488:67;19552:2;19547:3;19488:67;:::i;:::-;19481:74;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19325:366;;;:::o;19697:419::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19950:9;19944:4;19940:20;19936:1;19925:9;19921:17;19914:47;19978:131;20104:4;19978:131;:::i;:::-;19970:139;;19697:419;;;:::o;20122:237::-;20262:34;20258:1;20250:6;20246:14;20239:58;20331:20;20326:2;20318:6;20314:15;20307:45;20122:237;:::o;20365:366::-;20507:3;20528:67;20592:2;20587:3;20528:67;:::i;:::-;20521:74;;20604:93;20693:3;20604:93;:::i;:::-;20722:2;20717:3;20713:12;20706:19;;20365:366;;;:::o;20737:419::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:131;21144:4;21018:131;:::i;:::-;21010:139;;20737:419;;;:::o;21162:180::-;21210:77;21207:1;21200:88;21307:4;21304:1;21297:15;21331:4;21328:1;21321:15;21348:98;21399:6;21433:5;21427:12;21417:22;;21348:98;;;:::o;21452:168::-;21535:11;21569:6;21564:3;21557:19;21609:4;21604:3;21600:14;21585:29;;21452:168;;;;:::o;21626:373::-;21712:3;21740:38;21772:5;21740:38;:::i;:::-;21794:70;21857:6;21852:3;21794:70;:::i;:::-;21787:77;;21873:65;21931:6;21926:3;21919:4;21912:5;21908:16;21873:65;:::i;:::-;21963:29;21985:6;21963:29;:::i;:::-;21958:3;21954:39;21947:46;;21716:283;21626:373;;;;:::o;22005:640::-;22200:4;22238:3;22227:9;22223:19;22215:27;;22252:71;22320:1;22309:9;22305:17;22296:6;22252:71;:::i;:::-;22333:72;22401:2;22390:9;22386:18;22377:6;22333:72;:::i;:::-;22415;22483:2;22472:9;22468:18;22459:6;22415:72;:::i;:::-;22534:9;22528:4;22524:20;22519:2;22508:9;22504:18;22497:48;22562:76;22633:4;22624:6;22562:76;:::i;:::-;22554:84;;22005:640;;;;;;;:::o;22651:141::-;22707:5;22738:6;22732:13;22723:22;;22754:32;22780:5;22754:32;:::i;:::-;22651:141;;;;:::o;22798:349::-;22867:6;22916:2;22904:9;22895:7;22891:23;22887:32;22884:119;;;22922:79;;:::i;:::-;22884:119;23042:1;23067:63;23122:7;23113:6;23102:9;23098:22;23067:63;:::i;:::-;23057:73;;23013:127;22798:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1696000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2921",
								"getApproved(uint256)": "5277",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3022",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "774",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3459",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2312",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2248",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca66bc9de58e58ecd28e60b3700fbdbcdaa8e7f3084cc823f69a0b24db8b650464736f6c63430008120033",
									".code": [
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1827,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3597,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3686,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3735,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3711,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3665,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4790,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4790,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4790,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2297,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2324,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2020,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4282,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5338,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5338,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2957,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 13329,
											"end": 13336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 13321,
											"end": 13337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 13321,
											"end": 13337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13313,
											"end": 13366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12662,
											"end": 12669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12728,
											"end": 12735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12714,
											"end": 12721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7621,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7590,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11437,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11542,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11513,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11513,
											"end": 11555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11513,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12285,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12279,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12309,
											"end": 12311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12389,
											"end": 12391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12383,
											"end": 12387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12432,
											"end": 12436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12440,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12412,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12412,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 12982,
											"end": 13037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13071,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13140,
											"end": 13148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13108,
											"end": 13149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7217,
											"end": 7224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7208,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14094,
											"end": 14096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14094,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14094,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14145,
											"end": 14147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14166,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 14166,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14166,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14260,
											"end": 14301,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14728,
											"end": 14739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14728,
											"end": 14739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 12,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 12,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 12,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 12,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14232,
											"end": 14258,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14209,
											"end": 14259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 14435,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 14511,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14620,
											"end": 14632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14887,
											"end": 14907,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14881,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14868,
											"end": 14885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14861,
											"end": 14908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14925,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 15063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15209,
											"end": 15243,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15278,
											"end": 15289,
											"name": "PUSH",
											"source": 12,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15069,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16202,
											"end": 16213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16360,
											"end": 16363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 16421,
											"end": 16426,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 16388,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16523,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 16443,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16576,
											"end": 16592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 16541,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16626,
											"end": 16629,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 16638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16364,
											"end": 16644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 16943,
											"end": 16946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16934,
											"end": 16940,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16852,
											"end": 16947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16964,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17076,
											"end": 17079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16650,
											"end": 17085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17265,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17229,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17208,
											"end": 17266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17300,
											"end": 17307,
											"name": "PUSH",
											"source": 12,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17295,
											"end": 17297,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17283,
											"end": 17298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 17548,
											"end": 17550,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 17543,
											"end": 17546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 17484,
											"end": 17551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 17649,
											"end": 17652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 17560,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17678,
											"end": 17680,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17673,
											"end": 17676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17669,
											"end": 17681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17321,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17859,
											"end": 17863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17886,
											"end": 17895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17946,
											"end": 17955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 17944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17936,
											"end": 17956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17932,
											"end": 17933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17910,
											"end": 17957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 17974,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18258,
											"end": 18292,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18235,
											"end": 18293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18333,
											"name": "PUSH",
											"source": 12,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18314,
											"end": 18320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18310,
											"end": 18325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18303,
											"end": 18334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18489,
											"end": 18492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18574,
											"end": 18576,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18569,
											"end": 18572,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 18510,
											"end": 18577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 18675,
											"end": 18678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 18586,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 18706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18699,
											"end": 18702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18695,
											"end": 18707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18347,
											"end": 18713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18885,
											"end": 18889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18925,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18912,
											"end": 18921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 18926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 18981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18966,
											"end": 18970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18943,
											"end": 18960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 18983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 19126,
											"end": 19130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 19000,
											"end": 19131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18719,
											"end": 19138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19311,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19280,
											"end": 19281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19268,
											"end": 19282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19261,
											"end": 19312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19144,
											"end": 19319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19467,
											"end": 19470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19552,
											"end": 19554,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 19547,
											"end": 19550,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 19488,
											"end": 19555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19653,
											"end": 19656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 19564,
											"end": 19657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19684,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19677,
											"end": 19680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19673,
											"end": 19685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19325,
											"end": 19691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19863,
											"end": 19867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19890,
											"end": 19899,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19886,
											"end": 19904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 19959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19944,
											"end": 19948,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19936,
											"end": 19937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19925,
											"end": 19934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 19938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19914,
											"end": 19961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 20104,
											"end": 20108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 19978,
											"end": 20109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 20116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20262,
											"end": 20296,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20258,
											"end": 20259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20250,
											"end": 20256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20246,
											"end": 20260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20239,
											"end": 20297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20331,
											"end": 20351,
											"name": "PUSH",
											"source": 12,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20326,
											"end": 20328,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20314,
											"end": 20329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20307,
											"end": 20352,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20122,
											"end": 20359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20507,
											"end": 20510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 20592,
											"end": 20594,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 20587,
											"end": 20590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 20528,
											"end": 20595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 20693,
											"end": 20696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 20604,
											"end": 20697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20722,
											"end": 20724,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20717,
											"end": 20720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20713,
											"end": 20725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20365,
											"end": 20731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20903,
											"end": 20907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20941,
											"end": 20943,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20926,
											"end": 20944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20990,
											"end": 20999,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20984,
											"end": 20988,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20976,
											"end": 20977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20965,
											"end": 20974,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20961,
											"end": 20978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20954,
											"end": 21001,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 21144,
											"end": 21148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 21018,
											"end": 21149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 21156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21210,
											"end": 21287,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21207,
											"end": 21208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21200,
											"end": 21288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21307,
											"end": 21311,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 21304,
											"end": 21305,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 21297,
											"end": 21312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21331,
											"end": 21335,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21328,
											"end": 21329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21399,
											"end": 21405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21427,
											"end": 21439,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21535,
											"end": 21546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21569,
											"end": 21575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21564,
											"end": 21567,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21557,
											"end": 21576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21609,
											"end": 21613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21607,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21600,
											"end": 21614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21712,
											"end": 21715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 21772,
											"end": 21777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 21740,
											"end": 21778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 21857,
											"end": 21863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21852,
											"end": 21855,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 21794,
											"end": 21864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 21931,
											"end": 21937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21926,
											"end": 21929,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21919,
											"end": 21923,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21912,
											"end": 21917,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21908,
											"end": 21924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 21873,
											"end": 21938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 21985,
											"end": 21991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 21963,
											"end": 21992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21958,
											"end": 21961,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21716,
											"end": 21999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22200,
											"end": 22204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22238,
											"end": 22241,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22227,
											"end": 22236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 22320,
											"end": 22321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22309,
											"end": 22318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22305,
											"end": 22322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 22252,
											"end": 22323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 22401,
											"end": 22403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22390,
											"end": 22399,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22377,
											"end": 22383,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 22333,
											"end": 22405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 22483,
											"end": 22485,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22472,
											"end": 22481,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22468,
											"end": 22486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22459,
											"end": 22465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 22415,
											"end": 22487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22534,
											"end": 22543,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22528,
											"end": 22532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22521,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22508,
											"end": 22517,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22504,
											"end": 22522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22497,
											"end": 22545,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 22633,
											"end": 22637,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22624,
											"end": 22630,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 22562,
											"end": 22638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22707,
											"end": 22712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22738,
											"end": 22744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22745,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 22780,
											"end": 22785,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 22754,
											"end": 22786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22651,
											"end": 22792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22867,
											"end": 22873,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22916,
											"end": 22918,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22904,
											"end": 22913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22895,
											"end": 22902,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 22914,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22887,
											"end": 22919,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 22922,
											"end": 23001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23042,
											"end": 23043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 23122,
											"end": 23129,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23113,
											"end": 23119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23102,
											"end": 23111,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 23067,
											"end": 23130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23013,
											"end": 23140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22798,
											"end": 23147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 296,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 298,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 302,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 306,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 310,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 316,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202701c0b44650d8b116ef332300174c1367283363064ea7ac9e8013c253734ad464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202701c0b44650d8b116ef332300174c1367283363064ea7ac9e8013c253734ad464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 ADD 0xC0 0xB4 CHAINID POP 0xD8 0xB1 AND 0xEF CALLER 0x23 STOP OR 0x4C SGT PUSH8 0x283363064EA7AC9E DUP1 SGT 0xC2 MSTORE8 PUSH20 0x4AD464736F6C6343000812003300000000000000 ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202701c0b44650d8b116ef332300174c1367283363064ea7ac9e8013c253734ad464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 ADD 0xC0 0xB4 CHAINID POP 0xD8 0xB1 AND 0xEF CALLER 0x23 STOP OR 0x4C SGT PUSH8 0x283363064EA7AC9E DUP1 SGT 0xC2 MSTORE8 PUSH20 0x4AD464736F6C6343000812003300000000000000 ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202701c0b44650d8b116ef332300174c1367283363064ea7ac9e8013c253734ad464736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a1a7a61b5fdcae9baf9c3debf9a5b0287607eedefee6f9b090cd5f21894a8ae64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a1a7a61b5fdcae9baf9c3debf9a5b0287607eedefee6f9b090cd5f21894a8ae64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE BYTE PUSH27 0x61B5FDCAE9BAF9C3DEBF9A5B0287607EEDEFEE6F9B090CD5F21894 0xA8 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a1a7a61b5fdcae9baf9c3debf9a5b0287607eedefee6f9b090cd5f21894a8ae64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE BYTE PUSH27 0x61B5FDCAE9BAF9C3DEBF9A5B0287607EEDEFEE6F9B090CD5F21894 0xA8 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a1a7a61b5fdcae9baf9c3debf9a5b0287607eedefee6f9b090cd5f21894a8ae64736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2fb9e359fd0fc96653da2f195ace986f797108f1a0475395adbd752c659b09964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2fb9e359fd0fc96653da2f195ace986f797108f1a0475395adbd752c659b09964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xFB SWAP15 CALLDATALOAD SWAP16 0xD0 0xFC SWAP7 PUSH6 0x3DA2F195ACE9 DUP7 0xF7 SWAP8 LT DUP16 BYTE DIV PUSH22 0x395ADBD752C659B09964736F6C634300081200330000 ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2fb9e359fd0fc96653da2f195ace986f797108f1a0475395adbd752c659b09964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xFB SWAP15 CALLDATALOAD SWAP16 0xD0 0xFC SWAP7 PUSH6 0x3DA2F195ACE9 DUP7 0xF7 SWAP8 LT DUP16 BYTE DIV PUSH22 0x395ADBD752C659B09964736F6C634300081200330000 ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2fb9e359fd0fc96653da2f195ace986f797108f1a0475395adbd752c659b09964736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b10fe86d0252d5b1cddd1af7ccea592089cd7a2edab7b83ccad462a991e3dbc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b10fe86d0252d5b1cddd1af7ccea592089cd7a2edab7b83ccad462a991e3dbc64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LT INVALID DUP7 0xD0 0x25 0x2D JUMPDEST SHR 0xDD 0xD1 0xAF PUSH29 0xCEA592089CD7A2EDAB7B83CCAD462A991E3DBC64736F6C634300081200 CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b10fe86d0252d5b1cddd1af7ccea592089cd7a2edab7b83ccad462a991e3dbc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LT INVALID DUP7 0xD0 0x25 0x2D JUMPDEST SHR 0xDD 0xD1 0xAF PUSH29 0xCEA592089CD7A2EDAB7B83CCAD462A991E3DBC64736F6C634300081200 CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b10fe86d0252d5b1cddd1af7ccea592089cd7a2edab7b83ccad462a991e3dbc64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/Auction.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Auction.sol": {
				"ast": {
					"absolutePath": "contracts/Auction.sol",
					"exportedSymbols": {
						"Address": [
							1688
						],
						"Auction": [
							270
						],
						"Context": [
							1710
						],
						"ERC165": [
							1963
						],
						"ERC721": [
							1197
						],
						"IERC165": [
							1975
						],
						"IERC721": [
							1313
						],
						"IERC721Metadata": [
							1358
						],
						"IERC721Receiver": [
							1331
						],
						"Math": [
							2841
						],
						"SignedMath": [
							2946
						],
						"Strings": [
							1939
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 1198,
							"src": "57:73:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Auction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 270,
							"linearizedBaseContracts": [
								270
							],
							"name": "Auction",
							"nameLocation": "141:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7c0b8de2",
									"id": 5,
									"mutability": "mutable",
									"name": "NFT",
									"nameLocation": "170:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "156:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC721_$1197",
										"typeString": "contract ERC721"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "ERC721",
											"nameLocations": [
												"156:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1197,
											"src": "156:6:0"
										},
										"referencedDeclaration": 1197,
										"src": "156:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC721_$1197",
											"typeString": "contract ERC721"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.TokenInfo",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "214:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "206:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "206:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "239:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "231:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "231:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "tokenURI",
											"nameLocation": "261:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "254:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 10,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "254:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenInfo",
									"nameLocation": "187:9:0",
									"nodeType": "StructDefinition",
									"scope": 270,
									"src": "180:96:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5afe3e6",
									"id": 16,
									"mutability": "mutable",
									"name": "tokenPrices",
									"nameLocation": "359:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "324:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 15,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "324:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 14,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "343:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c8cc569",
									"id": 19,
									"mutability": "mutable",
									"name": "SaleTokenList",
									"nameLocation": "478:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "461:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 18,
										"nodeType": "ArrayTypeName",
										"src": "461:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "522:27:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "NFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "532:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721_$1197",
															"typeString": "contract ERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 26,
														"name": "_NFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "538:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721_$1197",
															"typeString": "contract ERC721"
														}
													},
													"src": "532:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1197",
														"typeString": "contract ERC721"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "532:10:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "510:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721_$1197",
													"typeString": "contract ERC721"
												},
												"typeName": {
													"id": 21,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 20,
														"name": "ERC721",
														"nameLocations": [
															"510:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "510:6:0"
													},
													"referencedDeclaration": 1197,
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1197",
														"typeString": "contract ERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:13:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 270,
									"src": "498:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "634:439:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 91,
														"src": "644:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 37,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "644:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"id": 41,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 39,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "665:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1197",
																"typeString": "contract ERC721"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "669:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "665:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "665:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "644:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 45,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 46,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "718:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "722:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "718:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "704:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f74204e4654206f776e6572",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "730:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e",
																"typeString": "literal_string \"you are not NFT owner\""
															},
															"value": "you are not NFT owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d1f493e3598ac6a537dd82ca4a7706d7ec6ad26d27ee3442a8bd9c8d799c53e",
																"typeString": "literal_string \"you are not NFT owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "696:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 53,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "772:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "772:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "764:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 59,
																	"name": "tokenPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "802:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 61,
																"indexExpression": {
																	"id": 60,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "814:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "802:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "825:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "802:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073616c65",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7",
																"typeString": "literal_string \"Already sale\""
															},
															"value": "Already sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f978f84e04beadbaa4088338d7c147a8204ec03858994779d4df9af2be2fbdf7",
																"typeString": "literal_string \"Already sale\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "794:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "794:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 70,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "909:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "913:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "909:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 74,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "929:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Auction_$270",
																				"typeString": "contract Auction"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Auction_$270",
																				"typeString": "contract Auction"
																			}
																		],
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "921:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 72,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "921:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "921:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 68,
																	"name": "NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "888:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721_$1197",
																		"typeString": "contract ERC721"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "892:16:0",
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 580,
																"src": "888:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "888:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "880:56:0"
											},
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 79,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "998:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 81,
														"indexExpression": {
															"id": 80,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1010:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "998:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 82,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1022:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "998:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "998:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1057:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 85,
															"name": "SaleTokenList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1038:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1052:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1038:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1038:28:0"
											}
										]
									},
									"functionSelector": "921e033b",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SalesToken",
									"nameLocation": "582:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "601:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "593:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:34:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:0:0"
									},
									"scope": 270,
									"src": "573:500:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1149:338:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "1167:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1159:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1159:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"arguments": [
														{
															"id": 101,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1192:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 99,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1197",
																"typeString": "contract ERC721"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1184:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "1180:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1159:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "1219:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1233:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1237:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1233:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1219:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1211:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 112,
																	"name": "tokenPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1263:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 114,
																"indexExpression": {
																	"id": 113,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1275:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1263:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 115,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1288:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1292:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1288:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1263:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1255:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1255:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1255:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1338:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1342:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1338:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 122,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1317:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1309:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1309:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1309:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1329:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1309:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1309:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 132,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1391:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1395:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1391:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1403:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 129,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1362:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1197",
																"typeString": "contract ERC721"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 607,
														"src": "1362:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1362:50:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 138,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1423:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 140,
														"indexExpression": {
															"id": 139,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1435:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1423:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1423:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1423:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1471:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 144,
														"name": "popSaleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1458:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1458:22:0"
											}
										]
									},
									"functionSelector": "3048f512",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "PurchaseToken",
									"nameLocation": "1102:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1116:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:0"
									},
									"scope": 270,
									"src": "1093:394:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1555:301:0",
										"statements": [
											{
												"body": {
													"id": 192,
													"nodeType": "Block",
													"src": "1614:214:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 167,
																		"name": "SaleTokenList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1631:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 169,
																	"indexExpression": {
																		"id": 168,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "1645:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1631:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 170,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "1651:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1631:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 191,
															"nodeType": "IfStatement",
															"src": "1628:190:0",
															"trueBody": {
																"id": 190,
																"nodeType": "Block",
																"src": "1661:157:0",
																"statements": [
																	{
																		"expression": {
																			"id": 181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 172,
																					"name": "SaleTokenList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1679:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 174,
																				"indexExpression": {
																					"id": 173,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 157,
																					"src": "1693:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1679:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 175,
																					"name": "SaleTokenList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1698:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 180,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 176,
																							"name": "SaleTokenList",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 19,
																							"src": "1712:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																								"typeString": "uint256[] storage ref"
																							}
																						},
																						"id": 177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1726:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1712:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 178,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1735:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1712:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1698:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1679:58:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 182,
																		"nodeType": "ExpressionStatement",
																		"src": "1679:58:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 183,
																					"name": "SaleTokenList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1755:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1769:3:0",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "1755:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1755:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 187,
																		"nodeType": "ExpressionStatement",
																		"src": "1755:19:0"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1799:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 155,
																		"id": 189,
																		"nodeType": "Return",
																		"src": "1792:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 160,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 161,
															"name": "SaleTokenList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1588:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1602:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1588:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1584:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 193,
												"initializationExpression": {
													"assignments": [
														157
													],
													"declarations": [
														{
															"constant": false,
															"id": 157,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1577:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 193,
															"src": "1569:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1569:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 159,
													"initialValue": {
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1569:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1610:3:0",
														"subExpression": {
															"id": 164,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 166,
													"nodeType": "ExpressionStatement",
													"src": "1610:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1565:263:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 155,
												"id": 195,
												"nodeType": "Return",
												"src": "1837:12:0"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "popSaleToken",
									"nameLocation": "1502:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1523:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1515:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:18:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1550:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:6:0"
									},
									"scope": 270,
									"src": "1493:363:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "2026:446:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 205,
																	"name": "SaleTokenList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2044:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2058:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2044:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2044:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2036:33:0"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "list",
														"nameLocation": "2098:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "2079:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Auction.TokenInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 213,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 212,
																	"name": "TokenInfo",
																	"nameLocations": [
																		"2079:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 12,
																	"src": "2079:9:0"
																},
																"referencedDeclaration": 12,
																"src": "2079:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$12_storage_ptr",
																	"typeString": "struct Auction.TokenInfo"
																}
															},
															"id": 214,
															"nodeType": "ArrayTypeName",
															"src": "2079:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_storage_$dyn_storage_ptr",
																"typeString": "struct Auction.TokenInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 220,
																"name": "SaleTokenList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2121:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2135:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2121:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2105:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Auction.TokenInfo memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 217,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 216,
																	"name": "TokenInfo",
																	"nameLocations": [
																		"2109:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 12,
																	"src": "2109:9:0"
																},
																"referencedDeclaration": 12,
																"src": "2109:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$12_storage_ptr",
																	"typeString": "struct Auction.TokenInfo"
																}
															},
															"id": 218,
															"nodeType": "ArrayTypeName",
															"src": "2109:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_storage_$dyn_storage_ptr",
																"typeString": "struct Auction.TokenInfo[]"
															}
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2105:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Auction.TokenInfo memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2079:63:0"
											},
											{
												"body": {
													"id": 264,
													"nodeType": "Block",
													"src": "2202:241:0",
													"statements": [
														{
															"assignments": [
																236
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 236,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2224:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 264,
																	"src": "2216:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 235,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2216:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 240,
															"initialValue": {
																"baseExpression": {
																	"id": 237,
																	"name": "SaleTokenList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2234:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 239,
																"indexExpression": {
																	"id": 238,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2248:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2234:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2216:34:0"
														},
														{
															"assignments": [
																242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 242,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "2272:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 264,
																	"src": "2264:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2264:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 246,
															"initialValue": {
																"baseExpression": {
																	"id": 243,
																	"name": "tokenPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "2280:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 245,
																"indexExpression": {
																	"id": 244,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2292:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2280:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2264:36:0"
														},
														{
															"assignments": [
																248
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 248,
																	"mutability": "mutable",
																	"name": "tokenURI",
																	"nameLocation": "2328:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 264,
																	"src": "2314:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 247,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "2314:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 253,
															"initialValue": {
																"arguments": [
																	{
																		"id": 251,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2352:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 249,
																		"name": "NFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "2339:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721_$1197",
																			"typeString": "contract ERC721"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2343:8:0",
																	"memberName": "tokenURI",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 475,
																	"src": "2339:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (uint256) view external returns (string memory)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2339:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2314:46:0"
														},
														{
															"expression": {
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 254,
																		"name": "list",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2387:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Auction.TokenInfo memory[] memory"
																		}
																	},
																	"id": 256,
																	"indexExpression": {
																		"id": 255,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "2392:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2387:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenInfo_$12_memory_ptr",
																		"typeString": "struct Auction.TokenInfo memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 258,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "2407:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 259,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "2416:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 260,
																			"name": "tokenURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "2423:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 257,
																		"name": "TokenInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "2397:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_TokenInfo_$12_storage_ptr_$",
																			"typeString": "type(struct Auction.TokenInfo storage pointer)"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2397:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenInfo_$12_memory_ptr",
																		"typeString": "struct Auction.TokenInfo memory"
																	}
																},
																"src": "2387:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$12_memory_ptr",
																	"typeString": "struct Auction.TokenInfo memory"
																}
															},
															"id": 263,
															"nodeType": "ExpressionStatement",
															"src": "2387:45:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 228,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2172:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 229,
															"name": "SaleTokenList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2176:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2190:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2176:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2172:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 265,
												"initializationExpression": {
													"assignments": [
														225
													],
													"declarations": [
														{
															"constant": false,
															"id": 225,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2165:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 265,
															"src": "2157:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 224,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2157:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 227,
													"initialValue": {
														"hexValue": "30",
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2157:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2198:3:0",
														"subExpression": {
															"id": 232,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 234,
													"nodeType": "ExpressionStatement",
													"src": "2198:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2153:290:0"
											},
											{
												"expression": {
													"id": 266,
													"name": "list",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Auction.TokenInfo memory[] memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 267,
												"nodeType": "Return",
												"src": "2454:11:0"
											}
										]
									},
									"functionSelector": "4e4dc988",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSaleTokenList",
									"nameLocation": "1966:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:2:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2006:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Auction.TokenInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 199,
															"name": "TokenInfo",
															"nameLocations": [
																"2006:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 12,
															"src": "2006:9:0"
														},
														"referencedDeclaration": 12,
														"src": "2006:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$12_storage_ptr",
															"typeString": "struct Auction.TokenInfo"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "2006:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenInfo_$12_storage_$dyn_storage_ptr",
														"typeString": "struct Auction.TokenInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:20:0"
									},
									"scope": 270,
									"src": "1957:515:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 271,
							"src": "132:2342:0",
							"usedErrors": []
						}
					],
					"src": "31:2443:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1688
						],
						"Context": [
							1710
						],
						"ERC165": [
							1963
						],
						"ERC721": [
							1197
						],
						"IERC165": [
							1975
						],
						"IERC721": [
							1313
						],
						"IERC721Metadata": [
							1358
						],
						"IERC721Receiver": [
							1331
						],
						"Math": [
							2841
						],
						"SignedMath": [
							2946
						],
						"Strings": [
							1939
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1314,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1332,
							"src": "156:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1359,
							"src": "188:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1689,
							"src": "231:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1711,
							"src": "265:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1940,
							"src": "299:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1964,
							"src": "333:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 281,
										"name": "Context",
										"nameLocations": [
											"647:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "647:7:1"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:1"
								},
								{
									"baseName": {
										"id": 283,
										"name": "ERC165",
										"nameLocations": [
											"656:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1963,
										"src": "656:6:1"
									},
									"id": 284,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:1"
								},
								{
									"baseName": {
										"id": 285,
										"name": "IERC721",
										"nameLocations": [
											"664:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1313,
										"src": "664:7:1"
									},
									"id": 286,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:1"
								},
								{
									"baseName": {
										"id": 287,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "673:15:1"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197,
								1358,
								1313,
								1963,
								1975,
								1710
							],
							"name": "ERC721",
							"nameLocation": "637:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 291,
									"libraryName": {
										"id": 289,
										"name": "Address",
										"nameLocations": [
											"701:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1688,
										"src": "701:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:1",
									"typeName": {
										"id": 290,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 294,
									"libraryName": {
										"id": 292,
										"name": "Strings",
										"nameLocations": [
											"732:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1939,
										"src": "732:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:1",
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 296,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "776:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 295,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 298,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "823:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 297,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "898:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 301,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 299,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 306,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "992:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 305,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 304,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 310,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "1093:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 309,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 316,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "1199:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 315,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 311,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 314,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 312,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 313,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "1446:57:1",
										"statements": [
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1456:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1464:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:1"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 328,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 329,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "1489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:1"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 333,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1402:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1423:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:1"
									},
									"scope": 1197,
									"src": "1390:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1962,
										1974
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1678:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "1707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 346,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "1727:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1313_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1313_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 345,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1313",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "1763:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 352,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1358,
																			"src": "1783:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1358_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1358_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 351,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1358",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 359,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "1851:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 357,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1197_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "1827:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 343,
												"id": 362,
												"nodeType": "Return",
												"src": "1688:175:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 338,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1963,
												"src": "1646:6:1"
											},
											{
												"id": 339,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1975,
												"src": "1654:7:1"
											}
										],
										"src": "1637:25:1"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1597:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 335,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1672:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:1"
									},
									"scope": 1197,
									"src": "1570:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2010:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "2028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 375,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 383,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2110:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 385,
													"indexExpression": {
														"id": 384,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2120:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 386,
												"nodeType": "Return",
												"src": "2103:23:1"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:1"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "1948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:1"
									},
									"scope": 1197,
									"src": "1929:204:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1246
									],
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2271:138:1",
										"statements": [
											{
												"assignments": [
													398
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2281:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 397,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [
														{
															"id": 400,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "2297:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2332:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:1"
											},
											{
												"expression": {
													"id": 413,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 398,
													"src": "2397:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 414,
												"nodeType": "Return",
												"src": "2390:12:1"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:1"
									},
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2262:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:1"
									},
									"scope": 1197,
									"src": "2190:219:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2540:29:1",
										"statements": [
											{
												"expression": {
													"id": 423,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 296,
													"src": "2557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 422,
												"id": 424,
												"nodeType": "Return",
												"src": "2550:12:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:1"
									},
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2525:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:1"
									},
									"scope": 1197,
									"src": "2471:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "2704:31:1",
										"statements": [
											{
												"expression": {
													"id": 433,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 298,
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 432,
												"id": 434,
												"nodeType": "Return",
												"src": "2714:14:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:1"
									},
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "2689:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:1"
									},
									"scope": 1197,
									"src": "2633:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1357
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2889:188:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2914:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2899:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:1"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "2933:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 449,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2957:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 456,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "2990:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 465,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "3036:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 466,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "3045:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:1",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1769,
																			"src": "3045:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 463,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 461,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 444,
												"id": 473,
												"nodeType": "Return",
												"src": "2977:93:1"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:1"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2819:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2874:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:1"
									},
									"scope": 1197,
									"src": "2801:276:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3385:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "3395:9:1"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3370:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:1"
									},
									"scope": 1197,
									"src": "3319:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1286
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3538:336:1",
										"statements": [
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "3548:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [
														{
															"id": 497,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 495,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3564:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "3564:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3605:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 502,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3611:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 508,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "3686:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 510,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "3702:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 513,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "3728:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 514,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "3735:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 512,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "3711:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "3855:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "3846:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:1"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:1"
									},
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3485:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3497:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:1"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:1"
									},
									"scope": 1197,
									"src": "3468:406:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1302
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4020:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 536,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "4030:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 540,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "4071:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 542,
													"indexExpression": {
														"id": 541,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "4087:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 535,
												"id": 543,
												"nodeType": "Return",
												"src": "4064:31:1"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 532,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:1"
									},
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3956:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:1"
									},
									"scope": 1197,
									"src": "3935:167:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4253:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "4282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "4296:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4306:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 554,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4263:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:1"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 552,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:1"
									},
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4196:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4214:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:1"
									},
									"scope": 1197,
									"src": "4169:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1312
									],
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "4491:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 573,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4508:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 575,
														"indexExpression": {
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4527:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 577,
													"indexExpression": {
														"id": 576,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "4534:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 572,
												"id": 578,
												"nodeType": "Return",
												"src": "4501:42:1"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 569,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:1"
									},
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "4414:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "4429:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:1"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "4485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:1"
									},
									"scope": 1197,
									"src": "4388:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4701:207:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 593,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "4790:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4790:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 595,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "4804:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 592,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "4771:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4763:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4883:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "4889:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "4893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "4873:28:1"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 589,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4692:8:1"
									},
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4656:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4648:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:43:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4701:0:1"
									},
									"scope": 1197,
									"src": "4612:296:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "5067:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5094:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5100:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5113:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 618,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															626,
															656
														],
														"referencedDeclaration": 656,
														"src": "5077:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5077:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5077:39:1"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4914:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4983:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5058:8:1"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5008:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "5000:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5022:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "5014:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "5026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:43:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5067:0:1"
									},
									"scope": 1197,
									"src": "4974:149:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "5301:164:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 641,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "5338:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5338:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 643,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "5352:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 640,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "5319:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5319:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "5311:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5434:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5440:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "5444:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "5453:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 648,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "5420:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "5420:38:1"
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "5129:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5198:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5292:8:1"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5223:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5215:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5237:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5229:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5249:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5241:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5271:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5258:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5258:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:62:1"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5301:0:1"
									},
									"scope": 1197,
									"src": "5189:276:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "6428:165:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "6448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6454:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "6438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6438:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "6438:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 676,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6507:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 677,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "6513:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 678,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "6517:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 679,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "6526:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 675,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "6484:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6484:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6533:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:110:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "6476:110:1"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "5471:850:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6335:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6357:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "6349:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6371:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "6363:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6383:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "6375:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6405:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "6392:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:62:1"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:1"
									},
									"scope": 1197,
									"src": "6326:267:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "6777:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 693,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "6794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 695,
													"indexExpression": {
														"id": 694,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "6802:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6794:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 692,
												"id": 696,
												"nodeType": "Return",
												"src": "6787:23:1"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6599:98:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6711:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6728:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "6720:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:17:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "6768:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:9:1"
									},
									"scope": 1197,
									"src": "6702:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "7191:55:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 707,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "7217:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 706,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "7208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7237:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7229:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 709,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7229:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7208:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 705,
												"id": 714,
												"nodeType": "Return",
												"src": "7201:38:1"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "6823:292:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7129:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "7137:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7136:17:1"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "7185:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7185:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7184:6:1"
									},
									"scope": 1197,
									"src": "7120:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "7503:162:1",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7521:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "7513:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 726,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"arguments": [
														{
															"id": 730,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "7544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 728,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "7529:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7536:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "7529:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:39:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 733,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "7570:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 734,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "7581:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7570:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 737,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "7607:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 738,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "7614:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 736,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "7590:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7590:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7570:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 742,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "7638:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 741,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "7626:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7626:20:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 744,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "7650:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7626:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7570:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 747,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7569:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 725,
												"id": 748,
												"nodeType": "Return",
												"src": "7562:96:1"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "7252:147:1",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7413:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7440:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7432:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7457:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7449:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7431:34:1"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7497:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7497:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:6:1"
									},
									"scope": 1197,
									"src": "7404:261:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "8060:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "8080:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8084:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 758,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															765,
															794
														],
														"referencedDeclaration": 794,
														"src": "8070:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8070:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "8070:26:1"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "7671:319:1",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8004:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8022:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "8014:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "8026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8013:29:1"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:1"
									},
									"scope": 1197,
									"src": "7995:108:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "8408:195:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "8424:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "8428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "8418:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "8418:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8498:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8490:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 782,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8490:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8490:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 786,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "8502:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 787,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "8506:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 788,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "8515:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 781,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "8467:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8467:53:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8446:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "8446:150:1"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "8109:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8333:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8351:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "8343:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8363:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "8355:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8385:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "8372:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8342:48:1"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:1"
									},
									"scope": 1197,
									"src": "8324:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "8986:859:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "9004:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9018:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9010:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 804,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9010:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9010:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9004:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9022:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "8996:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9075:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 814,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9084:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 813,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9076:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9076:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9094:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9067:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "9067:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9165:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9157:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 821,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9157:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9157:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9169:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 826,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 820,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "9136:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "9136:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9279:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9288:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9280:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9280:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9298:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9271:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9271:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "9271:58:1"
											},
											{
												"id": 844,
												"nodeType": "UncheckedBlock",
												"src": "9340:360:1",
												"statements": [
													{
														"expression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "9671:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "9681:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9671:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9671:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "9671:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 845,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 847,
														"indexExpression": {
															"id": 846,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9710:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "9729:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9710:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "9710:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9756:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9756:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9756:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9768:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9772:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "9747:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "EmitStatement",
												"src": "9742:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9819:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9811:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9811:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9811:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9823:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9827:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9836:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 860,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "9791:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9791:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "9791:47:1"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "8609:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8934:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8948:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "8940:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "8952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8939:29:1"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:0:1"
									},
									"scope": 1197,
									"src": "8925:920:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "10220:713:1",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10238:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "10230:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 877,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10230:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 881,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10261:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 879,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "10246:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10253:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "10246:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10230:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 885,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "10301:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10316:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10308:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 886,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10308:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10308:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10320:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10329:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 884,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "10280:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10280:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "10280:51:1"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "10433:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 897,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "10456:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 895,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10441:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10448:7:1",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 416,
															"src": "10441:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10441:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10433:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "10433:31:1"
											},
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10502:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 901,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "10509:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 903,
														"indexExpression": {
															"id": 902,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10509:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "10502:31:1"
											},
											{
												"id": 912,
												"nodeType": "UncheckedBlock",
												"src": "10544:237:1",
												"statements": [
													{
														"expression": {
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 906,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "10749:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 908,
																"indexExpression": {
																	"id": 907,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "10759:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10769:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10749:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 911,
														"nodeType": "ExpressionStatement",
														"src": "10749:21:1"
													}
												]
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10790:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 913,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10797:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 915,
														"indexExpression": {
															"id": 914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10797:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "10790:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 919,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "10838:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10853:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10845:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 920,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10845:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10845:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10857:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 918,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "10829:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "EmitStatement",
												"src": "10824:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 928,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "10896:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10911:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10903:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10903:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10903:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "10915:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10924:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 927,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "10876:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10876:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "10876:50:1"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "9851:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10180:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "10186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10185:17:1"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10220:0:1"
									},
									"scope": 1197,
									"src": "10171:762:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "11336:1124:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "11369:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 949,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "11354:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11361:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 416,
																	"src": "11354:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11354:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 953,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "11381:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11354:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11387:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11346:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "11346:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "11445:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11459:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11451:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 960,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11451:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11451:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11445:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11463:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11437:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "11437:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "11534:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "11540:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "11544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 968,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "11513:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "11513:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 978,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "11670:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 976,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "11655:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11662:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 416,
																	"src": "11655:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 980,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "11682:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11655:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11688:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11647:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "11647:81:1"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11790:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 985,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "11797:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 987,
														"indexExpression": {
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "11813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11797:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "11790:31:1"
											},
											{
												"id": 1002,
												"nodeType": "UncheckedBlock",
												"src": "11832:496:1",
												"statements": [
													{
														"expression": {
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 990,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "12265:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 992,
																"indexExpression": {
																	"id": 991,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "12275:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12265:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12265:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "12265:20:1"
													},
													{
														"expression": {
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 996,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "12299:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 998,
																"indexExpression": {
																	"id": 997,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "12309:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12299:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12316:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12299:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1001,
														"nodeType": "ExpressionStatement",
														"src": "12299:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1003,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "12337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1005,
														"indexExpression": {
															"id": 1004,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "12345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12337:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1006,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "12356:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12337:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "12337:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "12383:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "12389:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "12393:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "12374:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12374:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "EmitStatement",
												"src": "12369:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "12432:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "12438:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "12442:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12451:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1015,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "12412:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12412:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "12412:41:1"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "10939:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11266:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11284:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "11276:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11298:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "11290:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11310:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "11302:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:1"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11336:0:1"
									},
									"scope": 1197,
									"src": "11257:1203:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "12636:107:1",
										"statements": [
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1031,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "12646:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1033,
														"indexExpression": {
															"id": 1032,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12662:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12646:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1034,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "12673:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12646:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "12646:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1040,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "12714:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1038,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "12699:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1197_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12706:7:1",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 416,
																"src": "12699:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12699:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12728:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "12690:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12690:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "EmitStatement",
												"src": "12685:51:1"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "12466:101:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12581:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12598:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "12590:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "12602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:29:1"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12636:0:1"
									},
									"scope": 1197,
									"src": "12572:171:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "12972:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "12990:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1059,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "12999:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12990:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13009:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12982:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12982:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "12982:55:1"
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1064,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "13047:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1067,
															"indexExpression": {
																"id": 1065,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "13066:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13047:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1068,
														"indexExpression": {
															"id": 1066,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "13073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13047:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "13085:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13047:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "13047:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1073,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "13123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "13130:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "13140:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1072,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "13108:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13108:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "EmitStatement",
												"src": "13103:46:1"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "12749:125:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12888:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "12907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12930:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "12922:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12945:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "12940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:48:1"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12972:0:1"
									},
									"scope": 1197,
									"src": "12879:277:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "13303:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1087,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "13329:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1086,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "13321:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13321:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13339:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13313:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13313:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "13313:53:1"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "13162:73:1",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13249:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13272:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "13264:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13263:17:1"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13303:0:1"
									},
									"scope": 1197,
									"src": "13240:133:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "14080:676:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "14094:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14097:10:1",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1376,
														"src": "14094:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14094:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "14714:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14735:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1106,
															"id": 1151,
															"nodeType": "Return",
															"src": "14728:11:1"
														}
													]
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "14090:660:1",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "14111:597:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1129,
																		"nodeType": "Block",
																		"src": "14225:91:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1123,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1121,
																						"src": "14250:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1124,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1331,
																								"src": "14260:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1331_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1125,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14276:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1330,
																							"src": "14260:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14293:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14260:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14250:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1106,
																				"id": 1128,
																				"nodeType": "Return",
																				"src": "14243:58:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1130,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1122,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1121,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14217:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1130,
																				"src": "14210:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1120,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14210:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14209:15:1"
																	},
																	"src": "14201:115:1"
																},
																{
																	"block": {
																		"id": 1146,
																		"nodeType": "Block",
																		"src": "14345:353:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1134,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1132,
																							"src": "14367:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14374:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14367:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1136,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14384:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14367:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1144,
																					"nodeType": "Block",
																					"src": "14494:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14580:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14617:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14621:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14613:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14613:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14636:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14630:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14630:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14606:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14606:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14606:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1132,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14621:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1132,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14636:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1143,
																							"nodeType": "InlineAssembly",
																							"src": "14571:95:1"
																						}
																					]
																				},
																				"id": 1145,
																				"nodeType": "IfStatement",
																				"src": "14363:321:1",
																				"trueBody": {
																					"id": 1142,
																					"nodeType": "Block",
																					"src": "14387:101:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1139,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14416:52:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1138,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14409:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1140,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14409:60:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1141,
																							"nodeType": "ExpressionStatement",
																							"src": "14409:60:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1147,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1133,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1132,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14337:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1147,
																				"src": "14324:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1131,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14324:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14323:21:1"
																	},
																	"src": "14317:381:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1114,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "14166:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14166:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1116,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "14180:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1117,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "14186:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1118,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "14195:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1111,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1098,
																				"src": "14145:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1110,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "14129:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1331_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14129:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1331",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14149:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "14129:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14129:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1148,
															"nodeType": "TryStatement",
															"src": "14125:573:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "13379:541:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13934:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13974:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "13966:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13966:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13996:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "13988:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14016:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "14008:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14046:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "14033:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14033:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:100:1"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "14074:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14074:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14073:6:1"
									},
									"scope": 1197,
									"src": "13925:831:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "15586:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "14762:705:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15481:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15510:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15502:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15502:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15524:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15516:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15536:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15528:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15558:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15550:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15501:67:1"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15586:0:1"
									},
									"scope": 1197,
									"src": "15472:116:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "16407:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "15594:695:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16303:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16331:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "16323:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16345:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "16337:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16357:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "16349:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16379:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "16371:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16371:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16322:67:1"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16407:0:1"
									},
									"scope": 1197,
									"src": "16294:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "16958:45:1",
										"statements": [
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1189,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "16968:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "16978:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16968:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1192,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "16990:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16968:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "16968:28:1"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "16415:409:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16891:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16924:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16916:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16916:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16941:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16933:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16915:33:1"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16958:0:1"
									},
									"scope": 1197,
									"src": "16882:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1198,
							"src": "628:16377:1",
							"usedErrors": []
						}
					],
					"src": "107:16899:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1975
						],
						"IERC721": [
							1313
						]
					},
					"id": 1314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1976,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1202,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1975,
										"src": "271:7:2"
									},
									"id": 1203,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1313,
							"linearizedBaseContracts": [
								1313,
								1975
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1212,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1221,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1230,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 1313,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 1313,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1835:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1849:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1861:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1878:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:2"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:2"
									},
									"scope": 1313,
									"src": "1809:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2632:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2646:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:2"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:2"
									},
									"scope": 1313,
									"src": "2606:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3449:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3463:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3475:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:2"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:2"
									},
									"scope": 1313,
									"src": "3427:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3981:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3993:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:2"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:2"
									},
									"scope": 1313,
									"src": "3964:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "4366:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "4384:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:2"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:2"
									},
									"scope": 1313,
									"src": "4339:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4579:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:2"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4619:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:2"
									},
									"scope": 1313,
									"src": "4558:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4812:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4827:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:2"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4868:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:2"
									},
									"scope": 1313,
									"src": "4786:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1314,
							"src": "250:4626:2",
							"usedErrors": []
						}
					],
					"src": "108:4769:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1331
						]
					},
					"id": 1332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1316,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1331,
							"linearizedBaseContracts": [
								1331
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 1331,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1332,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1975
						],
						"IERC721": [
							1313
						],
						"IERC721Metadata": [
							1358
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1359,
							"sourceUnit": 1314,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1336,
										"name": "IERC721",
										"nameLocations": [
											"326:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1313,
										"src": "326:7:4"
									},
									"id": 1337,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1358,
							"linearizedBaseContracts": [
								1358,
								1313,
								1975
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:4"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "442:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:4"
									},
									"scope": 1358,
									"src": "403:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "569:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:4"
									},
									"scope": 1358,
									"src": "528:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:4"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:4"
									},
									"scope": 1358,
									"src": "685:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1359,
							"src": "297:463:4",
							"usedErrors": []
						}
					],
					"src": "112:649:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1688
						]
					},
					"id": 1689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1361,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1688,
							"linearizedBaseContracts": [
								1688
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1369,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1368,
												"id": 1374,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 1688,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1387,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1688",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1688",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1385,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1390,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													1396,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1396,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1395,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1403,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1399,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 1688,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1420,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1468,
															1512
														],
														"referencedDeclaration": 1512,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1426,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 1688,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1444,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1440,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1468,
															1512
														],
														"referencedDeclaration": 1512,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1446,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 1688,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1463,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1460,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1468,
															1512
														],
														"referencedDeclaration": 1512,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1459,
												"id": 1466,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 1688,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1485,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1688",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1688",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1483,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													1494,
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1493,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1495,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"arguments": [
														{
															"id": 1501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1497,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1506,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1507,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1508,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1504,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1510,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 1688,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1523,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1522,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1529,
															1558
														],
														"referencedDeclaration": 1558,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1521,
												"id": 1527,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 1688,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													1542,
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1541,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1549,
												"initialValue": {
													"arguments": [
														{
															"id": 1547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1545,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1551,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1553,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1550,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1556,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 1688,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1568,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1575,
															1604
														],
														"referencedDeclaration": 1604,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1573,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 1688,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													1588,
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1603,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1603,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"arguments": [
														{
															"id": 1593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1591,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1599,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1600,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1596,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1602,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 1688,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 1618,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1609,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1640,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1636,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1637,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1635,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 1641,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1619,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1631,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 1630,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1625,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1607,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1624,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1376,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1626,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1623,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1629,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1633,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 1688,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 1655,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1646,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1661,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1659,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 1658,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 1656,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1654,
															"id": 1657,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1649,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 1688,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1674,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1681,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1680,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1669,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1669,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 1678,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 1688,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1689,
							"src": "194:9169:5",
							"usedErrors": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1710
						]
					},
					"id": 1711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1691,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1710,
							"linearizedBaseContracts": [
								1710
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1698,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1710,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1704,
												"id": 1707,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1710,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1711,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2841
						],
						"SignedMath": [
							2946
						],
						"Strings": [
							1939
						]
					},
					"id": 1940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1940,
							"sourceUnit": 2842,
							"src": "126:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1940,
							"sourceUnit": 2947,
							"src": "152:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1715,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1939,
							"linearizedBaseContracts": [
								1939
							],
							"name": "Strings",
							"nameLocation": "228:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1718,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1939,
									"src": "242:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1716,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1721,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1939,
									"src": "302:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1719,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1720,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "518:625:7",
										"statements": [
											{
												"id": 1767,
												"nodeType": "UncheckedBlock",
												"src": "528:609:7",
												"statements": [
													{
														"assignments": [
															1730
														],
														"declarations": [
															{
																"constant": false,
																"id": 1730,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1767,
																"src": "552:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1729,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1737,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "580:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1731,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2841,
																		"src": "569:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2678,
																	"src": "569:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:7"
													},
													{
														"assignments": [
															1739
														],
														"declarations": [
															{
																"constant": false,
																"id": 1739,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1767,
																"src": "604:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1738,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1744,
														"initialValue": {
															"arguments": [
																{
																	"id": 1742,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "638:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1740,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:7"
													},
													{
														"assignments": [
															1746
														],
														"declarations": [
															{
																"constant": false,
																"id": 1746,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1767,
																"src": "659:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1747,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1746,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:7",
																"valueSize": 1
															}
														],
														"id": 1748,
														"nodeType": "InlineAssembly",
														"src": "731:76:7"
													},
													{
														"body": {
															"id": 1763,
															"nodeType": "Block",
															"src": "833:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:7",
																		"subExpression": {
																			"id": 1750,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "851:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1752,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1718,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1746,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1724,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1753,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:7"
																},
																{
																	"expression": {
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1754,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "1035:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1757,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "1068:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1762,
																	"nodeType": "IfStatement",
																	"src": "1064:21:7",
																	"trueBody": {
																		"id": 1761,
																		"nodeType": "Break",
																		"src": "1080:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1764,
														"nodeType": "WhileStatement",
														"src": "820:280:7"
													},
													{
														"expression": {
															"id": 1765,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "1120:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1728,
														"id": 1766,
														"nodeType": "Return",
														"src": "1113:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:7"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "503:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1726,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:7"
									},
									"scope": 1939,
									"src": "447:696:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "1313:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "1354:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:7",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1790,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1772,
																					"src": "1400:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1788,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2946,
																					"src": "1385:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2946_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:7",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2945,
																				"src": "1385:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1787,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1769,
																			1797
																		],
																		"referencedDeclaration": 1769,
																		"src": "1376:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1779,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1777,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1795,
												"nodeType": "Return",
												"src": "1323:86:7"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1261:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1771,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:7"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1298:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:7"
									},
									"scope": 1939,
									"src": "1243:173:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "1595:100:7",
										"statements": [
											{
												"id": 1815,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1806,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "1648:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1809,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1800,
																				"src": "1667:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1807,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2841,
																				"src": "1655:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2801,
																			"src": "1655:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1805,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1817,
																	1893,
																	1913
																],
																"referencedDeclaration": 1893,
																"src": "1636:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1804,
														"id": 1814,
														"nodeType": "Return",
														"src": "1629:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:7"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1580:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:7"
									},
									"scope": 1939,
									"src": "1521:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "1908:347:7",
										"statements": [
											{
												"assignments": [
													1828
												],
												"declarations": [
													{
														"constant": false,
														"id": 1828,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "1918:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1827,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1832,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "1954:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1829,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:7"
											},
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1838,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "1975:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1840,
														"indexExpression": {
															"hexValue": "30",
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:7"
											},
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1844,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "2000:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1846,
														"indexExpression": {
															"hexValue": "31",
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:7"
											},
											{
												"body": {
													"id": 1878,
													"nodeType": "Block",
													"src": "2070:83:7",
													"statements": [
														{
															"expression": {
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1864,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "2084:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1866,
																	"indexExpression": {
																		"id": 1865,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1851,
																		"src": "2091:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1867,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "2096:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1871,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1868,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1820,
																			"src": "2105:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:7"
														},
														{
															"expression": {
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "2131:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1877,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1858,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "2058:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1879,
												"initializationExpression": {
													"assignments": [
														1851
													],
													"declarations": [
														{
															"constant": false,
															"id": 1851,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1879,
															"src": "2030:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1850,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1857,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1853,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "2046:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:7",
														"subExpression": {
															"id": 1861,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "2067:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1863,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1881,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "2170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1889,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "2241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1887,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1891,
												"nodeType": "Return",
												"src": "2227:21:7"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1839:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1854:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:7"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1893:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:7"
									},
									"scope": 1939,
									"src": "1818:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "2480:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1906,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1896,
																			"src": "2525:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1904,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1902,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1909,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "2533:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1901,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1817,
															1893,
															1913
														],
														"referencedDeclaration": 1893,
														"src": "2497:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1900,
												"id": 1911,
												"nodeType": "Return",
												"src": "2490:59:7"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "2428:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:7"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "2465:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:7"
									},
									"scope": 1939,
									"src": "2407:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "2711:66:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1926,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "2744:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1924,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1923,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "2767:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1930,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1929,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1936,
												"nodeType": "Return",
												"src": "2721:49:7"
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2648:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2665:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:7"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "2705:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:7"
									},
									"scope": 1939,
									"src": "2633:144:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1940,
							"src": "220:2559:7",
							"usedErrors": []
						}
					],
					"src": "101:2679:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1963
						],
						"IERC165": [
							1975
						]
					},
					"id": 1964,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1964,
							"sourceUnit": 1976,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1944,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1975,
										"src": "754:7:8"
									},
									"id": 1945,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1943,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1963,
							"linearizedBaseContracts": [
								1963,
								1975
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1974
									],
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1954,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1956,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1975_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1975_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1955,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1975",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1953,
												"id": 1960,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1950,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1947,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1963,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1964,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1975
						]
					},
					"id": 1976,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1965,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1966,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1975,
							"linearizedBaseContracts": [
								1975
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1968,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1975,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1976,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2841
						]
					},
					"id": 2842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1977,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1978,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2841,
							"linearizedBaseContracts": [
								2841
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1982,
									"members": [
										{
											"id": 1979,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 1980,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 1981,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1992,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1993,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1996,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 1995,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 1998,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 2841,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2010,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2011,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2014,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 2013,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2016,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 2841,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2028,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2029,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2031,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2032,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2033,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2035,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2027,
												"id": 2039,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 2841,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2051,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2055,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2059,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2050,
												"id": 2064,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 2841,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "1765:4115:10",
										"statements": [
											{
												"id": 2187,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:10",
												"statements": [
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "2096:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:10"
													},
													{
														"assignments": [
															2082
														],
														"declarations": [
															{
																"constant": false,
																"id": 2082,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "2168:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2083,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:10",
																"valueSize": 1
															}
														],
														"id": 2084,
														"nodeType": "InlineAssembly",
														"src": "2239:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "2486:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "2482:368:10",
														"trueBody": {
															"id": 2092,
															"nodeType": "Block",
															"src": "2498:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2088,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2079,
																			"src": "2816:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2089,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "2824:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2077,
																	"id": 2091,
																	"nodeType": "Return",
																	"src": "2809:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2095,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "2960:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2096,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "2974:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2094,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2100,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:10"
													},
													{
														"assignments": [
															2102
														],
														"declarations": [
															{
																"constant": false,
																"id": 2102,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "3261:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2101,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2103,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2102,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2102,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2102,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:10",
																"valueSize": 1
															}
														],
														"id": 2104,
														"nodeType": "InlineAssembly",
														"src": "3292:300:10"
													},
													{
														"assignments": [
															2106
														],
														"declarations": [
															{
																"constant": false,
																"id": 2106,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "3899:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2114,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2107,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "3914:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:10",
																			"subExpression": {
																				"id": 2108,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2073,
																				"src": "3930:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:10",
																"valueSize": 1
															}
														],
														"id": 2115,
														"nodeType": "InlineAssembly",
														"src": "3960:371:10"
													},
													{
														"expression": {
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2116,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "4397:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2117,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "4406:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2118,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "4414:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2121,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:10"
													},
													{
														"assignments": [
															2123
														],
														"declarations": [
															{
																"constant": false,
																"id": 2123,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "4736:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2130,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2125,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "4759:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:10"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "4992:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5007:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5021:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:10"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "5061:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5076:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5090:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:10"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "5131:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5146:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5160:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:10"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "5201:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5216:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2158,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5230:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:10"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2163,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "5271:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5286:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2166,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5300:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:10"
													},
													{
														"expression": {
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "5342:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2173,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "5357:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2174,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "5371:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2178,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:10"
													},
													{
														"expression": {
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2179,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "5812:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2180,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "5821:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2181,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "5829:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2184,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:10"
													},
													{
														"expression": {
															"id": 2185,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "5857:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2077,
														"id": 2186,
														"nodeType": "Return",
														"src": "5850:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1683:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1694:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1705:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:10"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1749:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:10"
									},
									"scope": 2841,
									"src": "1667:4213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "6122:189:10",
										"statements": [
											{
												"assignments": [
													2205
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2232,
														"src": "6132:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"arguments": [
														{
															"id": 2207,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "6156:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2208,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "6159:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2209,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "6162:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2206,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2189,
															2233
														],
														"referencedDeclaration": 2189,
														"src": "6149:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1982",
															"typeString": "enum Math.Rounding"
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2212,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "6188:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1982",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2213,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "6200:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1982_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:10",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1980,
															"src": "6200:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1982",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2217,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2192,
																	"src": "6222:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2218,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "6225:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2219,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "6228:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2216,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2229,
												"nodeType": "IfStatement",
												"src": "6184:98:10",
												"trueBody": {
													"id": 2228,
													"nodeType": "Block",
													"src": "6246:36:10",
													"statements": [
														{
															"expression": {
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2224,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "6260:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2227,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2230,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2205,
													"src": "6298:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2203,
												"id": 2231,
												"nodeType": "Return",
												"src": "6291:13:10"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "6028:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "6039:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "6050:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "6071:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1982",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2197,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "6071:8:10"
													},
													"referencedDeclaration": 1982,
													"src": "6071:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1982",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:10"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "6113:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:10"
									},
									"scope": 2841,
									"src": "6012:299:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "6587:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2241,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "6601:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2247,
												"nodeType": "IfStatement",
												"src": "6597:45:10",
												"trueBody": {
													"id": 2246,
													"nodeType": "Block",
													"src": "6609:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2240,
															"id": 2245,
															"nodeType": "Return",
															"src": "6623:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2249
												],
												"declarations": [
													{
														"constant": false,
														"id": 2249,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2344,
														"src": "7321:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2252,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2236,
																			"src": "7349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2251,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2513,
																			2549
																		],
																		"referencedDeclaration": 2513,
																		"src": "7344:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2256,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:10"
											},
											{
												"id": 2343,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:10",
												"statements": [
													{
														"expression": {
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2259,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7782:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2260,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "7792:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2261,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "7801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2262,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "7805:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2265,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2269,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:10"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2270,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7831:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2271,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "7841:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2272,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "7850:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2273,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "7854:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:10"
													},
													{
														"expression": {
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7880:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2282,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "7890:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2283,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "7899:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2284,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "7903:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2287,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2291,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:10"
													},
													{
														"expression": {
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2292,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7929:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2293,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "7939:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2294,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "7948:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2295,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "7952:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2298,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2302,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:10"
													},
													{
														"expression": {
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2303,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7978:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2304,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "7988:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2305,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "7997:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2306,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "8001:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2309,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2313,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:10"
													},
													{
														"expression": {
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2314,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "8027:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2315,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "8037:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2316,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "8046:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2317,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "8050:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2320,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2324,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:10"
													},
													{
														"expression": {
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "8076:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2326,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "8086:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2327,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2236,
																					"src": "8095:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2328,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "8099:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2331,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2335,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2337,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "8136:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2338,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "8144:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2339,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "8148:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2336,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "8132:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2240,
														"id": 2342,
														"nodeType": "Return",
														"src": "8125:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "6544:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:10"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "6578:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:10"
									},
									"scope": 2841,
									"src": "6530:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "8348:161:10",
										"statements": [
											{
												"id": 2379,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:10",
												"statements": [
													{
														"assignments": [
															2357
														],
														"declarations": [
															{
																"constant": false,
																"id": 2357,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2379,
																"src": "8382:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2361,
														"initialValue": {
															"arguments": [
																{
																	"id": 2359,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "8404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2358,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2345,
																	2381
																],
																"referencedDeclaration": 2345,
																"src": "8399:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2362,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "8427:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1982",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2363,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2351,
																					"src": "8437:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2364,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1982,
																						"src": "8449:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1982_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1980,
																					"src": "8449:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2367,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2357,
																						"src": "8464:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2368,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2357,
																						"src": "8473:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2370,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2348,
																					"src": "8482:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2376,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2355,
														"id": 2378,
														"nodeType": "Return",
														"src": "8420:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "8286:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "8297:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1982",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2349,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "8297:8:10"
													},
													"referencedDeclaration": 1982,
													"src": "8297:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1982",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:10"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "8339:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:10"
									},
									"scope": 2841,
									"src": "8272:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "8694:922:10",
										"statements": [
											{
												"assignments": [
													2390
												],
												"declarations": [
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2512,
														"src": "8704:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2392,
												"initialValue": {
													"hexValue": "30",
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:10"
											},
											{
												"id": 2509,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "8760:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2407,
														"nodeType": "IfStatement",
														"src": "8756:99:10",
														"trueBody": {
															"id": 2406,
															"nodeType": "Block",
															"src": "8778:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "8796:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2401,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:10"
																},
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "8827:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "8872:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2422,
														"nodeType": "IfStatement",
														"src": "8868:96:10",
														"trueBody": {
															"id": 2421,
															"nodeType": "Block",
															"src": "8889:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "8907:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2416,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:10"
																},
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "8937:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "8981:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2437,
														"nodeType": "IfStatement",
														"src": "8977:96:10",
														"trueBody": {
															"id": 2436,
															"nodeType": "Block",
															"src": "8998:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2428,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "9016:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2431,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:10"
																},
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9046:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "9090:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2452,
														"nodeType": "IfStatement",
														"src": "9086:96:10",
														"trueBody": {
															"id": 2451,
															"nodeType": "Block",
															"src": "9107:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2443,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "9125:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:10"
																},
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9155:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "9199:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2467,
														"nodeType": "IfStatement",
														"src": "9195:93:10",
														"trueBody": {
															"id": 2466,
															"nodeType": "Block",
															"src": "9215:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2458,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "9233:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2461,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:10"
																},
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9262:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "9305:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2482,
														"nodeType": "IfStatement",
														"src": "9301:93:10",
														"trueBody": {
															"id": 2481,
															"nodeType": "Block",
															"src": "9321:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2473,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "9339:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2476,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:10"
																},
																{
																	"expression": {
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9368:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2480,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "9411:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2497,
														"nodeType": "IfStatement",
														"src": "9407:93:10",
														"trueBody": {
															"id": 2496,
															"nodeType": "Block",
															"src": "9427:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "9445:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2491,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:10"
																},
																{
																	"expression": {
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9474:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2495,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "9517:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2508,
														"nodeType": "IfStatement",
														"src": "9513:64:10",
														"trueBody": {
															"id": 2507,
															"nodeType": "Block",
															"src": "9533:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9551:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2506,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2510,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2390,
													"src": "9603:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2388,
												"id": 2511,
												"nodeType": "Return",
												"src": "9596:13:10"
											}
										]
									},
									"documentation": {
										"id": 2382,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "8647:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:10"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "8685:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:10"
									},
									"scope": 2841,
									"src": "8633:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "9849:165:10",
										"statements": [
											{
												"id": 2547,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:10",
												"statements": [
													{
														"assignments": [
															2525
														],
														"declarations": [
															{
																"constant": false,
																"id": 2525,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "9883:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2529,
														"initialValue": {
															"arguments": [
																{
																	"id": 2527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "9905:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2526,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2513,
																	2549
																],
																"referencedDeclaration": 2513,
																"src": "9900:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "9932:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1982",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2531,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2519,
																					"src": "9942:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2532,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1982,
																						"src": "9954:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1982_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1980,
																					"src": "9954:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2535,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2536,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2525,
																						"src": "9974:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2538,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2516,
																					"src": "9983:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2523,
														"id": 2546,
														"nodeType": "Return",
														"src": "9925:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "9783:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "9798:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1982",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2517,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "9798:8:10"
													},
													"referencedDeclaration": 1982,
													"src": "9798:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1982",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:10"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "9840:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:10"
									},
									"scope": 2841,
									"src": "9769:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "10201:854:10",
										"statements": [
											{
												"assignments": [
													2558
												],
												"declarations": [
													{
														"constant": false,
														"id": 2558,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2677,
														"src": "10211:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2560,
												"initialValue": {
													"hexValue": "30",
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:10"
											},
											{
												"id": 2674,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10267:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "10263:103:10",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "10286:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10304:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:10"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10339:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10383:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "10379:103:10",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "10402:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10420:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:10"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10455:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10499:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "10495:103:10",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "10518:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10536:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:10"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10571:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10615:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10611:100:10",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10633:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10651:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:10"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10685:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10728:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "10724:100:10",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "10746:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10764:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:10"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10798:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10841:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "10837:100:10",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "10859:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "10877:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:10"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10911:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "10954:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "10950:66:10",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "10972:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "10990:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2675,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2558,
													"src": "11042:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2556,
												"id": 2676,
												"nodeType": "Return",
												"src": "11035:13:10"
											}
										]
									},
									"documentation": {
										"id": 2550,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "10154:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:10"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "10192:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:10"
									},
									"scope": 2841,
									"src": "10139:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "11290:167:10",
										"statements": [
											{
												"id": 2712,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:10",
												"statements": [
													{
														"assignments": [
															2690
														],
														"declarations": [
															{
																"constant": false,
																"id": 2690,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2712,
																"src": "11324:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2689,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2694,
														"initialValue": {
															"arguments": [
																{
																	"id": 2692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "11347:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2691,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2678,
																	2714
																],
																"referencedDeclaration": 2678,
																"src": "11341:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "11374:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1982",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2696,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2684,
																					"src": "11384:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2697,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1982,
																						"src": "11396:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1982_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1980,
																					"src": "11396:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2700,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2701,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2690,
																						"src": "11417:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2703,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2681,
																					"src": "11426:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2688,
														"id": 2711,
														"nodeType": "Return",
														"src": "11367:73:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "11224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "11239:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1982",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2682,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "11239:8:10"
													},
													"referencedDeclaration": 1982,
													"src": "11239:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1982",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:10"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "11281:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:10"
									},
									"scope": 2841,
									"src": "11209:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2800,
										"nodeType": "Block",
										"src": "11771:600:10",
										"statements": [
											{
												"assignments": [
													2723
												],
												"declarations": [
													{
														"constant": false,
														"id": 2723,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2800,
														"src": "11781:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2725,
												"initialValue": {
													"hexValue": "30",
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:10"
											},
											{
												"id": 2797,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "11837:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2740,
														"nodeType": "IfStatement",
														"src": "11833:98:10",
														"trueBody": {
															"id": 2739,
															"nodeType": "Block",
															"src": "11855:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2717,
																			"src": "11873:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:10"
																},
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2735,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "11904:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "11948:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2755,
														"nodeType": "IfStatement",
														"src": "11944:95:10",
														"trueBody": {
															"id": 2754,
															"nodeType": "Block",
															"src": "11965:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2717,
																			"src": "11983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:10"
																},
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "12013:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2756,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "12056:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2770,
														"nodeType": "IfStatement",
														"src": "12052:95:10",
														"trueBody": {
															"id": 2769,
															"nodeType": "Block",
															"src": "12073:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2717,
																			"src": "12091:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:10"
																},
																{
																	"expression": {
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2765,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "12121:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2768,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2771,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "12164:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2785,
														"nodeType": "IfStatement",
														"src": "12160:95:10",
														"trueBody": {
															"id": 2784,
															"nodeType": "Block",
															"src": "12181:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2717,
																			"src": "12199:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:10"
																},
																{
																	"expression": {
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2780,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "12229:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2783,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2786,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "12272:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "12268:64:10",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "12288:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "12306:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2798,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2723,
													"src": "12358:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2721,
												"id": 2799,
												"nodeType": "Return",
												"src": "12351:13:10"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "11724:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:10"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "11762:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:10"
									},
									"scope": 2841,
									"src": "11708:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "12608:174:10",
										"statements": [
											{
												"id": 2838,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:10",
												"statements": [
													{
														"assignments": [
															2813
														],
														"declarations": [
															{
																"constant": false,
																"id": 2813,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2838,
																"src": "12642:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2812,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2817,
														"initialValue": {
															"arguments": [
																{
																	"id": 2815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "12666:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2814,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2801,
																	2840
																],
																"referencedDeclaration": 2801,
																"src": "12659:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2818,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2813,
																"src": "12693:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1982",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2819,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2807,
																					"src": "12703:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2820,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1982,
																						"src": "12715:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1982_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1980,
																					"src": "12715:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1982",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2823,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2826,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2824,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2813,
																									"src": "12736:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2825,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2827,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2829,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2804,
																					"src": "12751:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2811,
														"id": 2837,
														"nodeType": "Return",
														"src": "12686:79:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2802,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "12542:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "12557:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1982",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2805,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "12557:8:10"
													},
													"referencedDeclaration": 1982,
													"src": "12557:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1982",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:10"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "12599:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:10"
									},
									"scope": 2841,
									"src": "12526:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2842,
							"src": "202:12582:10",
							"usedErrors": []
						}
					],
					"src": "103:12682:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2946
						]
					},
					"id": 2947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2844,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2946,
							"linearizedBaseContracts": [
								2946
							],
							"name": "SignedMath",
							"nameLocation": "223:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "375:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2854,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "392:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2855,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "396:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "404:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:11",
													"trueExpression": {
														"id": 2857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "400:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2860,
												"nodeType": "Return",
												"src": "385:20:11"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "324:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2846,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "334:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2848,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:11"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "367:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:11"
									},
									"scope": 2946,
									"src": "311:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "554:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2872,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "571:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2873,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "575:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "583:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:11",
													"trueExpression": {
														"id": 2875,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "579:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2878,
												"nodeType": "Return",
												"src": "564:20:11"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "503:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "513:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:11"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "546:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2869,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:11"
									},
									"scope": 2946,
									"src": "490:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "796:162:11",
										"statements": [
											{
												"assignments": [
													2891
												],
												"declarations": [
													{
														"constant": false,
														"id": 2891,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2923,
														"src": "858:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2890,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2904,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "870:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2893,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "874:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2895,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2896,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "881:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2897,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "885:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2905,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "910:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2910,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2891,
																						"src": "930:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2908,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2906,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2915,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "944:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2916,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "948:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2918,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2920,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2889,
												"id": 2922,
												"nodeType": "Return",
												"src": "903:48:11"
											}
										]
									},
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "745:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "755:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2884,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:11"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "788:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2887,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:11"
									},
									"scope": 2946,
									"src": "728:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "1102:158:11",
										"statements": [
											{
												"id": 2943,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2934,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1227:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:11",
																		"subExpression": {
																			"id": 2938,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1241:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:11",
																	"trueExpression": {
																		"id": 2937,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "1236:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2931,
														"id": 2942,
														"nodeType": "Return",
														"src": "1212:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2925,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1060:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2926,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:11"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1093:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:11"
									},
									"scope": 2946,
									"src": "1047:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "215:1047:11",
							"usedErrors": []
						}
					],
					"src": "109:1154:11"
				},
				"id": 11
			}
		}
	}
}